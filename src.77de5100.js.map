{"version":3,"sources":["modules/speedruncom/constants/celeste.ts","modules/speedruncom/wrapper.ts","modules/speedruncom/get-data.ts","modules/speedruncom/constants/subcategories.ts","modules/speedruncom/grid-transformation.ts","modules/rankings/scoring.ts","modules/rankings/models/Player.ts","modules/rankings/build-map.ts","app/models/AppEvent.ts","app/models/TableSelection.ts","app/ui/points-getter.ts","app/ui/array-helper.ts","app/ui/components/control-buttons.ts","app/ui/html-helper.ts","app/ui/components/leaderboard-table.ts","app/ui/components/load-more-button.ts","app/ui/components/loader.ts","app/ui/render-dynamic.ts","app/main.ts","index.ts"],"names":[],"mappings":";AWAA;;;;AHAA,ACAA,ATEA,AGFA,IHEM,AGFA,OHEO,GAAe,UAA5B,MGFgC,GAAG,uBAAnC;AUAA,ARIA,ALCS,AGFA,ACHT,ISAM,ARIA,ADJN,GJKS,AGFA,CHEA,AGFA,OHEA,CKDS,CQJC,CbKV,CKDY,ADJrB,CSAsB,ETAtB,GJKS,GKDH,CQJA,ATAN,CAAA,IDGS,GAAA,GECY,CAAC,CQJA,CAAC,CRIF,EAAuB,CQJtB,EAAa,QTAnC,CAAA,KDGS;AKFT,ACAA,AIAE,ARIA,ALFF,AGFA,ACOA,IIPK,ACAA,ATEC,AGFA,EUAE,ARIF,GAAG,CAAC,EGJV,CREe,CaFC,CRIV,CLFY,AGFA,CUAC,CJAnB,CNAqB,CEID,CAAlB,EAAqB,EQJI,AbE3B,CaF4B,KVA5B,QUAmB,CAAuB,UAAvB,CAAjB;AACA,ARGuB,ALAP,AGFmB,EUDnC,IAAI,CbGY,AGFmB,CHEnB,AGFmB,CUD5B,ERGuB,EQHnB,CAAC,ARGW,GLAP,CaHT,EAAP,AbGgB,AGFmB,GAAA,MHEnB,MGFmB;AKFrC,ACAA,AIEE,AREmC,CGJrC,ACAA,CIEE,QAAQ,CLFL,ACAA,AIEM,QLFX,CKEE,CLFW,EKEU,EJFvB,EAAmB,AIEjB;ALDE,ACAA,AIEF,ATKF,EIPI,ACAA,ELOE,KSLG,CLFL,CAAA,KCAA,CAAA,AIEa,CAAC,MJFd,CDAA,ACAA,AIEK,CLFL,AKEsB,EJFtB,ALO0B,CIP1B,EJO6B,IKP7B,CIEF,ITKI,EIPF,sBJO6B,CAAC,IAAD,EAA+E;AIN/G,ACAG,AIEH,ARCC,ADIA,CITF,AKDA,CJGI,CDFC,GHKC,GAAG,ADIA,CCJC,CGLG,IHKP,CGLD,ACED,CAAA,ELOM,CCJU,CAAlB,EAAqB,ADId,CITI,CJSY,CKPrB,CDFS,ACET,EDFS,CAAb,ACEI,SAAA;AACA,AGJJ,AEEA,ACFA,ACAA,ANCA,ASDA,AdMyB,ADKrB,EKPA,EGJJ,AEEA,ACFA,ACAA,ANCA,ASDA,MAAA,CdMgC,ADKrB,EeXX,AdMyB,CONzB,AGAA,CXWe,CKPX,ALOY,CKPZ,AGJJ,AEEA,ACFA,ACAA,EZWW,CUTX,AEFA,ANCA,ANUoB,GMVpB,GDGI,CAAA,CUJJ,CAAA,CVII,ALOiB,EQXrB,AGAA,CHAA,AGAA,EDEA,AEFA,CFEA,AEFA,AGAA,CAAA,CTCA,CDGI,ACHJ,CEDA,AGAA,CHAA,AGAA,AXWoB,EUTpB,AEFA,AZWkC,CUTlC,AEFA,AZWoB,EMVpB,ANUmC,CMVnC,ESDA,CAAA,CAAA,SLEA,AEFA,CFEA,AEFA,CFEA,AEFA,EJAA,AGAA,CHAA,AGAA,CHAA,AGAA,OLCA,CAAA,CAAA;AFIA,ACAI,AIEJ,ARDoC,ADKI,EKNpC,KDAJ,AKEA,CLFA,AKEA,KTIwC,EINxC,AKEA,CJFI,CAAA,ALMwC,CIN7B,AKEA,ATI8B,QIN7C,ACAI,CAAA,ELMwC,CKNxC,CIEJ,ATI0D,CAAd,CAAJ,MKNpC;AACH,AGJD,AECA,ACAA,ACDA,ANCA,ASDA,AfS4D,CKV5D,EAAK,CGCL,AECA,ACAM,ACDA,ANCA,CNQK,CeTX,AfSI,CeTJ,MHAe,CGAf,EHAkB,CPDC,EKEnB,AJAqB,CEDrB,CGCuB,CNFlB,AKEL,AJAwB,CEDxB,CGC0B,CCDpB,MNCA,EKAA,CCDY,EPDC,CKEnB,AEDkB,CJAlB,AECA,CLFmB,AGCnB,EHDmB,CAAnB,GKEA,CFDA,AECA,AJAwB,CEDxB,AFCyB,GKAC,ALAF,CKAG,CAAD,ALAkB,EKAJ,GAAd,EAAyB,KDAnD,CAAA,CAAA,UFDA,CAAA,CAAA;ADIA,AIFE,ACDA,ANCA,ALGA,ADKC,GAFD,COJF,EIFM,CAAC,CAAC,CCDC,AXIA,CKHC,GAAR,ALGW,CAAC,GAAL,CUHH,AVGY,CMDlB,ANCS,EAAY,CMDrB,AIFsB,ACDb,CAAA,EDCP,CVGwB,CUHC,EVGE,CWJpB,AXIqB,CWJP,IXId,CAAP,CMDF,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA,WKHS,CAAP;APKF,AGJA,AECA,ACAI,ACDH,ANCG,ALGH,ADKA,CYXD,AXEA,ADKA,GQLM,AECA,GLGN,CAAA,CCHS,EKAE,INGX,AGJiB,GHIF,AGJK,CECC,ACAF,CAAC,EDAI,GJAf,CAAA,CEDH,IECA,CLGN,CMHW,ALAF,CKAyB,ALAV,IEDJ,CAAC,AGCV,ALAP,CEDgB,AGChB,EHD8B,IAAd,AECI,CACtB,CFFoD,IEC9B,EAEtB,IAFsB,EAGtB,MAHsB,EAGC;AHAzB,ACHE,AEKA,ACJC,ALAG,ICEA,KCHG,AEKA,IJJI,QCEU,ACHd,CEKA,CAAA,AJJK,CCEY,ADFb,EAAU,IIId,CAAc,EHFjB,iBAAoB,CAAC,CAAD,EAAY,cGIpB,KAFK,GAEA,yBAFA,GAGL,IAHK,GAGD,yBAHC,GAIL,MAJK,GAIC,4BAJf,CAAP;AHDA,ACHE,AEWH,AEXD,ANA4B,ALIF,AD6CW,CUlDrC,GFCI,CAAC,CDGG,ACHF,CIAN,AXI0B,AD6CW,CYjDrC,AXI0B,AD6CW,IO9CvB,GAAG,AKHjB,ANA4B,CAAC,CAAC,CMAf,EJAX,APIsB,GOJH,APIG,IOJtB,AIAJ,CNA4B,ECGX,CAAA,CP8CoB,GC7CX,AD6CW,GO9CpB,CAAgB,CAAC,CAAC,cAAlB,CAAf,GP8CmC;AO7CnC,ACHE,AGCF,ALFuC,ANSzC,IQRI,EGCI,CAAC,ALFH,ECIG,CIFG,EHDA,CAAC,KGCO,CJEV,AIFW,CJEZ,EAAY,CAAZ,EAAqB,CCH1B,CAAuB,IAAI,CGCnB,CAAuB,KAAvB,CAAV,GHDyB,CAA0B,UAAA,CAAA,OAAA,CAAS,YAAnC,EAAiD;ADGzC,ACH2C,AEY9E,ACVE,EAAA,CAAC,CDUG,ACVF,EHF0E,KDG3C,CCHiD,CGElF,CHFoF,AGExE,GJC2B,AIDvC,CJCwC,AGStB,ACVF,CJCuB,CAAN,CGSZ,EHTwB,GID7C,GJCmD,CAAC,AGShD,CHT+C,CAAlB,YGSZ,CACrB,KADqB,EAErB,IAFqB,EAGrB,MAHqB,EAGP;AHZwC,ACHoB,AEiB1E,ACbA,ALHE,ANQJ,GONE,CPMI,CQTqB,CAAvB,AGII,GDaC,ACbE,ALHF,GKGK,QAAQ,CAAC,CDad,CAAA,EJhBA,CAAA,IIgBA,AVRuB,CUQT,EJhBd,ANQ0B,CWLrB,ALHU,CKGa,MLHjC,CNQE,CWLQ,CAAZ,wBDegB,AVViB,CAAC,IUQb,AVRY,EAAgB,CUU5B,yBAFA,GAGL,IAHK,GAGD,yBAHC,GAIL,MAJK,GAIC,4BAJf,CAAP;AHbD,ACHE,AEuBF,ACnBC,ALHI,ANQJ,COTF,AGWA,CCPE,CHPA,EGOG,CAAC,GXKG,IMRI,ANQA,CAAC,CWLZ,GAAgB,EXKT,CAAY,EMRP,CAAD,EAAU,KNQD,CAAD,EAAI,CAAJ,CWLnB,CXKwB;AQRzB,AGKC,ALL0B,ANQG,CQb/B,CGUE,GAAG,CAAC,KXGyB,CAAC,GMRJ,CAAC,CAAC,ANQO,CAAN,IWH7B,CAAqB,OAArB,EAA8B,ELLJ,CAAoB,CAApB,CAAA,OKKI;AJDvB,AGoBT,AClBI,ALN8C,ANQZ,GAA7B,CUgBH,AClBF,AXEF,CWFG,CAAC,CJFG,ADJH,CCIG,QIEL,GAAgB,CAAC,CAAC,EDkBG,EHpBhB,CGoBmB,EHpBnB,GIEW,GAAe,CDkB7B,CClBF,SJFK,SGoBmB,CAAC,CAAD,EAAc,GAAd,EAA2B;AFtBvD,AEuBE,AClBE,AXEH,CAFD,GQLM,AGKF,EDkBI,CAAC,GAAG,EClBA,CHLG,AGKF,GHLK,EEuBE,CAAC,MFvBf,CGKF,CAAuB,IAAI,CDkBnB,CAAuB,CFvBjB,CAAC,CAAD,EAAc,EEuBpB,CAAV,CFvBgB,AGKS,CAA0B,CHLD,SGKC,CAAA,OAAA,CAAS,YAAnC,EAAiD;AHJ1E,AEuBA,ACnB4E,ALL1E,MECI,AEuBA,ACnBsE,GHJnE,AFDF,GECK,AEuBA,ACnBsE,EAAE,CDmBrE,KFvBK,CAAC,IFDd,CAAA,IIwBQ,CAAA,EJxBR,CECK,AFDU,CECa,GEuBpB,CAAgB,CAAC,CAAC,AJxB/B,EECU,CAAZ,WEuBe,CAAf;AFtBA,AEuBA,ACpB0E,ALJtE,AN2CyD,EQ1C7D,AEuBA,CAAC,CAAC,CFvBC,AGGsB,CHHrB,AGGF,CXuC2D,CAAA,KUnB7D,AJxBW,CIwBC,CFvBZ,EEuBA,CFvBgB,AEuBA,IFvBhB,CFDY,CAAD,EAAU,QN2CwC,GUnB7D,AVmB6D,0BAAA;AQzC7D,AEwBA,ACrBC,ALLyB,EEE1B,CGAA,EHAG,CAAC,AEwBE,IAAI,GAAG,CFxBb,CFF0B,CAAC,CEEX,AFFY,IEER,KAAK,CAAC,AEwBC,CFxBA,AEwBC,MJ1BF,CI0BC,AJ1BmB,CAApB,CI0BW,AJ1BX,KEE1B,CEwB2B,EAAkB,QAAlB,CAA3B;AFvBA,AEwBA,ACpBA,ALPgD,ANQlD,EQLE,AEwBA,ACpBA,CDoBC,ACpBA,CDoBC,ACpBA,AXCE,CQLD,CAAC,CFHA,QI2BJ,ACpBA,CDoBc,ACpBA,GAAd,CDoBA,EFxBA,CAAqB,GRKK,GAAG,CQL7B,EAA8B,MRK1B,KQLqC,CAAC,CAAD,EAAI,IAAJ,CAAzC,QRK6B,CAAC,SAAD,EAAgC;AQJ7D,AEyBA,ACrBA,AXCA,EUoBA,GAAG,CAAC,AVpBE,GQLC,AGIA,CAAP,EHJA,CEyBA,CAAY,AVpBE,GAAG,OUoBJ,CAAD,CVpBN,CUoBU,CAAJ,EAAK,IVpBA,CAAC,WAAD,EAAqC,CAArC,EAA8C;AQJhE,AEwBuB,ACpBvB,ALPG,ANQA,CQXJ,AGRA,OXmBQ,CMRC,ANQA,EUmBe,CAAC,CAAC,CVnBZ,UUmBU,CAAc,AJ3B7B,CAAA,OAAA,CAAe,MI2B6B,CACjD,AJ5BA,CI4BC,GAAG,CAD6C,EAEjD,CAAC,CAAC,IAF+C,EAGjD,MAAM,CAAC,CAAD,CAH2C,CAA7B,CAAA;AAIpB,AJ9BE,ANOU,GUmBd,UJ1BW,UAAC,CAAD,EAAU;AEIvB,AE4BE,ACxBF,ALR4B,ANOxB,IQHE,ERG6D,CWCnE,CAAA,CDwBS,CAAP,KCxBF,ALR4B,CAAC,CAAC,CKQf,GHJQ,GAAG,SAApB,CFJsB,CKQ5B,ALRgD,CAApB,CAAA,aEIF,CAAC,CAAD,EAAY;AACpC,AE4BD,AJjCiD,ANQ5C,CUUN,KFbQ,CAAC,AFLH,GEKM,GRGC,KQHO,CAAC,KRGG,CAAC,GAAZ,CAAgB,GQHjB,CAAuB,IAAvB,CAAV,CRG4B,KAAD,EAAQ,CAAR,EAAS;AQFpC,ARGM,EQHN,CAAC,CAAC,SAAF,CAAY,GAAZ,CAAgB,iBAAhB;AAEA,AE2BF,AJjCI,ANQI,MQFA,CE2BR,CAAA,IVzBc,GUyBd,CF3BkB,EE2BH,CF3BM,CACjB,ARCkB,GAAG,SAAS,CAAC,CAAD,CAAT,CQDrB,ARCkC,CQDlC,AE0BJ,GVzByB,CAAkB,GQDvC,CAAe,KADE,CREuB,CQAxC,ARAuC,EAAE,cQAzC,CAAA,OAAA,CAAe,OAFE,EAGjB,gBAAA,CAAA,OAAA,CAAe,OAHE,EAIjB,gBAAA,CAAA,OAAA,CAAe,OAJE,CAAnB;AFLI,ANO4C,aMPrC,INOqC,CAAC,CAAC,IMPtC,ANOoC,CMPrC,EAAU,ENOsC,eAAA,CAAA,0BAAX;AQKhD,AFZ0B,ANO2D,OQKlE,ERLI,CAAjB,CQKa,EAAA,EFZO,CEYP,AFZQ,CEYR,AFZS,EEYT,SFZO,GEYP,GAAA,UAAnB,EAAmB,EAAA,GAAA,YAAA,CAAA,MAAnB,EAAmB,EAAA,EAAnB,EAA+B;AAA1B,AFZkC,ANQjC,OMRF,CEYO,IAAI,ARJH,GQIG,ERJE,GAAG,MAAM,CQIX,ARJY,CQIZ,EAAA,CAAV,GRJe,CAAe,QAAS,CAAC,MAAV,CAAiB,MAAhC,EAAwC,IAAxC,CAA6C,UAAC,EAAD,EAAY;AQK3E,AF3BF,IE2BE,CAAC,CAAC,QRL+D,GQKjE,CAAc,ARLmD,GAAA,EAAA,CAAA,CAAA,EQK1C,CAAC,CAAD,EAAI,IAAJ,CAAvB;AACD,AFZF,CAjBD,aNuB2E,GAAA,GAAA,EAAA,CAAA,CAAA;AAAS,iBAAA,GAAG,CAAC,KAAJ,KAAc,eAAA,CAAA,YAAd;AQQlF,AFZF,ANI8G,OMJ9G,CAAA,CEYS,ARRa,CQQpB,ARRM,CAH8B,CAK9B,GMNR,GAAe,eAAf;AEaC,CAhBD;ARUQ,QAAA,KAAK,CAAC,IAAN,GAAa,KAAK,CAAC,IAAN,CAAW,MAAX,CAAkB,UAAC,GAAD,EAAI;AQQ3C,ARPoB,OQOpB,CAAA,OAAA,ERPoB,CQOL,ERPQ,CAAC,GAAJ,CAAQ,MAAR,CAAgB,GQOpC,KRP6C,CAAC,EAA1B,MAAkC,KAAM,CAAC,CAAD,CAAxC;AAA2C,SAD1C,CAAb;AAIA,eAAO,KAAP;AACD,OAXM,CAAP;AAYD;;AACD,WAAO,WAAP;AACD,GAhBD;;AAkBA,SAAO,UAAC,IAAD,EAAgB;AACrB,WAAO,wBAAwB,CAAC,QAAD,CAAxB,CAAmC,IAAnC,CAAP;AACD,GAFD;AAGD,CAtBD;;AAmC2F,OAAA,CAAA,sBAAA,GAAA,sBAAA;;AAX3F,IAAM,uBAAuB,GAAG,SAA1B,uBAA0B,CAAC,IAAD,EAAgB;AAC9C,MAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,WAAD,EAAqC,CAArC,EAA8C;AAC7D,QAAI,CAAC,KAAK,CAAV,EAAa;AACX,aAAO,WAAP;AACD;;AACD,WAAO,WAAW,CAAC,MAAZ,CAAmB,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,aAAA,CAAC,KAAK,CAAN;AAAO,KAApC,CAAP;AACD,GALD;;AAOA,SAAO,wBAAwB,CAAC,QAAD,CAAxB,CAAmC,IAAnC,CAAP;AACD,CATD;;AAWmH,OAAA,CAAA,uBAAA,GAAA,uBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AFvDnH,ADAA,ICAA,ADAA,KCAA,ADAA,GCAA,ADAA,ICAA,ADAA;;;;AKGA,IAAA,SAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AYHA,ADAA,AVAA,ADIA,AJCA,ADLA,IiBAA,ADAA,AVAA,ADIA,AJCA,ADLA,KiBAA,ADAA,AVAA,GWAA,ADAA,AVAA,CDIA,AJCA,ADLA,GiBAA,ADAA,AVAA,ADIA,AJCA,ADLA,OKIA,AJCA,ADLA,CKIA,AJCA,ADLA,WCKA,CIDA,AJCA,CIDA,QLJA,CAAA;;AKMA,AJQA,ADLA,IKHA,AJQM,ADLA,IAAI,EKHV,CLGa,cCKc,GAAG,CDL9B,QCKM,qBAAwB,GAAA;AIR9B,AJQ8B,ADJ9B,IAAM,KCIwB,MDJb,GCIa,ADJV,CCIU,GDJ9B,ECI8B,EAAA,KAAA,CAAA,EAAU,OAAV,EAAiB,YAAA;AIR/C,YAAA;AASE,ALHF,IAAM,OKGJ,ILHe,EKGf,CAAa,ALHK,EKGlB,EAA6B,KLHzB,SKGJ,EAAqD,ALHnC,GAAA;AiBXpB,ADAA,AVCA,ADSU,ALER,IiBZF,ADAA,AVCA,KDSU,ALED,GMXT,EWDA,AZUU,CCTV,EWDA,AZU6C,CWV7C,GAAA,ChBYoB,EiBZpB,CAAA,CZUU,ALED,EgBZT,CAAA,AhBYwB,CMXxB,CAAA,KNWS,EMXT,CAAA,ANWgC,MgBZhC,CAAA,IhBYE,MMXF,CAAA,CWDA,AXCA,CWDA;AZeI,ALFH,CAFD,QKIS,EAAL,GAAU,EAAV;AYdJ,ADAA,AVEA,ADaI,AJFa,IgBbjB,ADAA,AVEM,KDaG,QJFQ,CKXG,ADahB,AJFa,GebjB,AVEuB,ADaF,GWfrB,CCAA,GAAA,EXEM,KWFN,AZemC,CYfnC,AZeoC,GWfpC,AXeqB,CWfrB,AXewC,ICbjB,CAAO,EUF9B,CAAA,CVEuB,CDakB,CCbI,MDaL,EAAQ,mBWfhD,CAAA,CCAA,ADAA,CCAA;AXE6C,ADaQ,AJFpC,ADCjB,IAAM,KMZuC,IDaQ,IAAI,CCbZ,CAAA,ANYxB,GKCgC,ALD7B,CKC0D,CCbrC,EAAA,IDaQ,CCbR,ADaQ,ALD/C,CMZuC,EAAG,OAAH,EAAU,GNY/B,CAAO,KAAP,EAA6B,CMZE,ONY/B,EAAuD;AiBb/E,ADAA,AXc0F,AJFzE,ADC8D,IiBb/E,ADAA,CXcqB,CAAjB,GLD2E,GCDxD,GgBZvB,GAAA,AjBa+E,CAAA,ECDxD,CAAA,CeZvB,ChBa+E,EgBb/E,AhBa+E,KAAA,CAAA,CiBb/E,AhBYuB,CgBZvB,AjBakF,CCDjE,CAAA,KgBZjB,ADAA,AhBa+E,CiBb/E,ADAA,ChBayF,MgBbzF,CAAA,KhBayF,kBiBbzF,CAAA,CAAA,ODAA,CAAA,CAAA;AXeI,SAAK,gBAAL,GAAwB,cAAc,CAAC,GAAf,CAAmB,UAAC,CAAD,EAAE;AYbjD,ADDA,AVCQ,ADa8C,IYbtD,ADDA,EVCQ,IAAI,GAAG,ADauC,CYbtD,AZasD,GYbtD,AXAmB,GAAJ,EUDf,AVCQ,GUDR,OCCA,CAAA,OAAA,ADDA,CCCA,ADDA,OAAA,CAAA,WCCA,CAAA,CAAA,kBDDA,CAAA,CAAA;AVEQ,ADY+C,AJH/C,KIGoB,CCZpB,ADYJ,IJHI,MAAM,GAAG,CKTK,CLSL,CAAA,CKTQ,GLSR,CKTY,CAAC,ALStB,GKTiB,CAAS,UAAC,GAAD,EAAI;AWAtC,ADDA,AVC2C,ADaxC,AJHmB,ADCZ,IiBXV,ADDA,QAAA,GAAA,AVC2C,ELUrB,ADCZ,CMXoC,ALUxB,ADCZ,CMXqC,CWA/C,GAAA,EXA2C,KUD3C,CAAA,OCCA,ADDA,CCCA,ADDA,OCCA,CAAA,aDDA,CAAA,CAAA,MCCA,CAAA,CAAA;AXAqD,ADenD,AJLoB,ADCZ,OMXe,CAAjB;AWCR,ADAA,AVCE,ALQoB,ADCZ,IiBVV,ADAM,EVCJ,IAAI,CAAC,CLQqB,ADCZ,KAAK,CMTnB,ANSuB,CMTV,CWDf,ChBS4B,CAAA,CgBT5B,GDA4B,GAAG,AVCf,ANSoB,KAAE,IiBVtC,ADAM,CCAN,CXCe,EAAc,ALQD,CKRb,ALQkC,EKRnB,CWD9B,CAAA,EhBSuD,CAAC,ADC/B,GAA8B,CCDN,CAAY,CAAZ,CAArB,CAAN,CAAA,CeTS,CAAO,ChBUiB,CAAA,GgBVxB,EAAsB,EhBU5B,EiBVzB,CAAA,AjBU8D,CiBV9D,QjBUyB,GAA+C,KAAK,CAAC,EAArD,GAAuD,GAAvD,GAA2D,QAAQ,CAAC,EAAxE,CAAX,CAAA;AgBV2C,AVEjD,SUFiD,MVEjD,GUFiD,CAAA,KAAA,EAAA,AVEtC,CAAC,IUFqC,CAAA,EAAG,AVEpD,CAAoB,MUF6B,EAAU,EVEtC,KAAD,EAAQ,CAAR,EUFuC,AVE9B;AWAjC,AXCM,ADYJ,EAAA,EYbI,IAAI,AZaR,CAAA,EYbW,MXCP,CDYJ,CAAA,CYbI,EXCK,CAAC,CWDC,GAAA,AXCP,CAAW,EDYf,GAAA,ECZI,CAAmB,ODYV,CAAb,ECZwB,ADYW,CCZZ,ADYvB,ECZyB,ADYqB,CAA9C,EAAuD;AYb5C,AXEL,ADYJ,AJPI,ADCN,SiBRW,AZcJ,CJPD,MKLM,CAAC,ANMb,CiBRW,AZcT,ALNF,CiBRW,AZcM,CCZD,ADYd,AJPc,CKLC,CAAC,ADYE,CAAlB,AJPkB,CgBPT,CXEK,ALKI,CgBPT,AXEW,ALKF,CIOK,CAAvB,EJPkB,CgBPT,CAAA,AhBOL,CKLU,CWFL,AXEmB,CAAd,CAAV,CADmB,CAGnB,CWJK,CAAA,EAAA,YAAA;AZeV,AJPY,ADAb,GKKA,cJLa,CAAA;AKHP,ALGO,ADAb,YAAQ,EAAA,CAAA,CMHE,CAAC,CAAC,CNGJ,CMHF,CNGC,CMHS,ANGkF,IAA3F,EAAP,CAAA;AMFQ,ADWD,AJTM,EISN,MAAA,CAAA,GJTY,EKFX,IAAI,ADWL,CCXM,ADWN,AJTmB,CAAC,EKFnB,CAAS,ALEE,CKFD,ALEa,CKFZ,EAAX,KAAkB,ELEe,CAAC,CKFZ,ADWvB,CCXwB,EDW/B,AJT+B,CKFL,ALEqB,CKFZ,CAAC,CAAC,ALEN,CAAoB,CKFzB,EAAe,EDWf,ECXmB,CDW7C,EAAqC,AJTe,GAAD,EKFN,ALEU,CKFV,OAAJ,CAAW,CAAC,CAAC,EAAb,EAAiB,cAAjB,CAAf,CAAlB;AACA,ADWN,AJTA,QISI,KAAK,KCXG,CLEL,CKFO,GAAG,GLEH,CKFO,ALEN,CKFO,CDWlB,CAAsB,AJTnB,CKFU,ALEE,CKFO,CAAC,ADWvB,CCXwB,ADW5B,ECXiB,ADWe,CCX1B,ALEmB,CAAC,IAAP,CAAY,GAAZ,CAAgB,UAAC,GAAD,EAAI;AKDjC,ADWJ,AJTA,GDHyE,CAAA,SKYlE,CCXH,EAAE,CAAC,CDWK,GJTL,OKFH,CAAe,CAAf,ALEG,CAAA,CKFe,CAAlB,CDWG,CCXkB,ADWI,CCXzB,EDWG,CAAP,OJTO,CAAgB,GAAhB,EAAqB,GAArB,CAAP;AeXE,AVUC,ADWJ,AJTA,ADFJ,CAFD,SgBRQ,GfUe,CAAZ,CAAP,IeVa,GAAG,QAAQ,CAAC,cAAT,CAAwB,mBAAxB,CAAZ;AVWD,ALEJ,WKXG,ALO2B,CKP3B,ALOe,CAAN,CAAA;AgBPA,ADDP,AVUA,ADYJ,ALKK,OAAA,CKLC,ALKD,CM3BL,CUAI,AVAJ,CDsBS,GAAG,CWtBH,ECCE,CAAA,ADDC,CXsBK,ILKZ,GAAA,EKLO,CAAe,GAAf,EAAoB,CWtBpB,KXsBA,CAA2B,ALKlC,UKLmC,GAAD,EAAM,CAAN,EAAO;AYrBnC,ADDS,AVWnB,ADWkD,OCvBrD,KUCsB,CXsB+B,GAAG,GAAG,EWtB3B,CAAC,GXsBgC,CAAC,KWtB5C,GAAuB,CXsBc,CWtBrC,AXsBsD,CAAjB,CAAN;AYrBxC,ADDoC,AVcjD,ADQ8E,AJdxE,ADGR,IAAM,CKWU,EAAkE,CAAlE,CAAZ,CJdI,CeRA,CCCc,CXapB,CAAA,ALNU,CDGK,ECHF,CDGK,CCHL,CAAA,IgBPO,AhBOP,EAAP,CDGF,WAAc,GAAA;AiBVE,AXapB,ADSE,AJVgB,ADFA,SKYX,ALZW,QCEA,CAAA,ADFA,CiBVE,AjBUF,KAAA,CKYhB,CAAsB,ALZN,EiBVE,CAAA,AZsBlB,ELZgB,CAAA,CKYa,CYtBX,AjBUQ,EiBVR,AZsBlB,KYtBkB,AjBUF,CiBVE,CjBUe,CiBVf,KAAA,CAAA,EAAA,GjBUe,SiBVf;ADCpB,AVYA,ADWE,AJZgB,QKCX,EUZP,CXuBS,CCXT,CAAA,CDWE,CWvBG,IAEL;AXsBC,AJbiB,GIIX,SJJiB,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAgB,UAAC,GAAD,EAAI;AeRxD,AfQ6D,GKlBlB,CAAA,MUU3C,SAAU,AfQmD,CeRlD,QfQkD,CAAA,EeR7D,CAAuB,QAAA,CAAA,OAAA,AfQsC,CAAoB,CeRjF,EfQ6D,CAAA;AeLvD,AVOP,ADaC,AJfqF,ADDvE,CMjBhB,CDiCE,MAAA,CAAA,CWpBM,CfK8B,CAAZ,CeLf,AfKS,CAAA,EeLN,ChBIE,CAAA,GgBJG,CAAC,CXoBlB,CAAW,EWpBC,CAAW,GXoBZ,CAAA,CWpBiB,CAAC,OAAN,AXoBvB,CWpBqC,CXoB1B,KWpBY,EAAX,EACT,IADS,AXoBZ,CWnBQ,CXmBc,aWnBd,CAAA,iBAAA,CAAkB,KAAlB,CADI,EAET,KAFS,CAEH,CAFG,EAEA,KAAK,CAAC,UAFN,CAAN,EAIN;ACTc,AjBSA,SKgBd,eAAA,GYzBc,CAAA;AAAA,ADUd,AVIF,ADWE,ALhBc,OMKhB,CAAA,EDWE,ELhBoB,GMKtB,ADWE,EWfA,AhBDyB,CgBCzB,AVIa,ADWb,ALhB6B,IKgB7B,OLhBwC,GMK1C,ENL4C,SAAb,GAAuB,SAAA,CAAA,OAAvB,GAA8B,SAAlC,CAAX,CAAA;AiBTA,ADUd,AfAM,UAAA,SAAS,GgBVK,AhBUF,EAAA,CAAA,IAAA,EAAZ,CgBVc,CAAA,qBAAA,EAAN,CAEZ;AAFY,ADUd,AXgBE,AJdF,YeFM,CXgBG,IJdT,CIcc,AJdd,CeFa,CAAC,CCVA,EDUR,CAAY,GAAG,CAAC,GAAJ,CAAQ,EXgBjB,CAAsB,MAAtB,CWhBwB,AXgBK,CWhBZ,EAAQ,OXgBK,GAAD,EAAM,CAAN,EAAS,CAAT,EAAU;AWhBd,AXgBmB,AJdrD,ADHO,eKiB8C,ELjB9C,CKiBiD,ALjBjD,CgBC2B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","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["import SpeedrunId from '../models/SpeedrunId'\r\n\r\nconst GAME_ID: SpeedrunId = 'o1y9j9v6'\r\nconst GAME_NAME = 'Celeste'\r\n\r\nexport { GAME_ID, GAME_NAME }\r\n","import { GAME_ID } from './constants/celeste'\r\nimport SpeedrunApiResponse from './models/SpeedrunApiResponse'\r\nimport SpeedrunCategory from './models/SpeedrunCategory'\r\nimport SpeedrunId from './models/SpeedrunId'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\nimport SpeedrunLevel from './models/SpeedrunLevel'\r\nimport SpeedrunUser from './models/SpeedrunUser'\r\nimport SpeedrunVariable from './models/SpeedrunVariable'\r\n\r\nconst HREF = 'www.speedrun.com'\r\nconst API_VERSION = 'v1'\r\n\r\nconst getBasePath = () => {\r\n  return `https://${HREF}/api/${API_VERSION}`\r\n}\r\n\r\nconst fetchLevelBoard = async (level: SpeedrunLevel, category: SpeedrunCategory): Promise<SpeedrunApiResponse<SpeedrunLeaderboard>> => {\r\n  return (await fetch(`${getBasePath()}/leaderboards/${GAME_ID}/level/${level.id}/${category.id}`)).json()\r\n}\r\n\r\nconst fetchLevels = async (): Promise<SpeedrunApiResponse<SpeedrunLevel[]>> => {\r\n  return await (await fetch(`${getBasePath()}/games/${GAME_ID}/levels`)).json()\r\n}\r\n\r\nconst fetchLevelCategories = async (level: SpeedrunLevel): Promise<SpeedrunApiResponse<SpeedrunCategory[]>> => {\r\n  return await (await fetch(`${getBasePath()}/levels/${level.id}/categories`)).json()\r\n}\r\n\r\nconst fetchLevelVariables = async (level: SpeedrunLevel): Promise<SpeedrunApiResponse<SpeedrunVariable[]>> => {\r\n  return await (await fetch(`${getBasePath()}/levels/${level.id}/variables`)).json()\r\n}\r\n\r\nconst fetchUser = async (user: SpeedrunId): Promise<SpeedrunApiResponse<SpeedrunUser>> => {\r\n  return await (await fetch(`${getBasePath()}/users/${user}`)).json()\r\n}\r\n\r\nexport { fetchLevelBoard, fetchLevels, fetchLevelCategories, fetchLevelVariables, fetchUser }\r\n","import SpeedrunApiResponse from './models/SpeedrunApiResponse'\r\nimport SpeedrunCategory from './models/SpeedrunCategory'\r\nimport SpeedrunLevel from './models/SpeedrunLevel'\r\nimport SpeedrunVariable from './models/SpeedrunVariable'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\nimport { fetchLevelCategories, fetchLevelBoard, fetchLevels, fetchLevelVariables } from './wrapper'\r\n\r\ninterface RawDataCollection {\r\n    categories: SpeedrunApiResponse<SpeedrunCategory[]>,\r\n    levels: SpeedrunApiResponse<SpeedrunLevel[]>,\r\n    grid: SpeedrunApiResponse<SpeedrunLeaderboard>[][],\r\n    variables: SpeedrunApiResponse<SpeedrunVariable[]>[]\r\n}\r\n\r\nconst getRawLeaderboardData = async (): Promise<RawDataCollection> => {\r\n  const levels = await fetchLevels()\r\n  const categories = (await fetchLevelCategories(levels.data[0]))\r\n  const grid = await Promise.all(categories.data.map((cat) => {\r\n    return Promise.all(levels.data.map((lvl) => {\r\n      return fetchLevelBoard(lvl, cat)\r\n    }))\r\n  }))\r\n  const variables = await Promise.all(levels.data.map((lvl) => fetchLevelVariables(lvl)))\r\n\r\n  return {\r\n    categories,\r\n    levels,\r\n    grid,\r\n    variables\r\n  }\r\n}\r\n\r\nexport { getRawLeaderboardData }\r\n","const COLLECTIBLES_VARIABLE_NAME = 'Full Clear / ARB / HC'\r\nconst FC_RUN_VALUE = 'Full Clear'\r\n\r\nexport { COLLECTIBLES_VARIABLE_NAME, FC_RUN_VALUE }\r\n","import { COLLECTIBLES_VARIABLE_NAME, FC_RUN_VALUE } from './constants/subcategories'\r\nimport LevelGrid from './models/LevelGrid'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\nimport SpeedrunVariable from './models/SpeedrunVariable'\r\n\r\n/** function that transforms a LevelGrid in some way */\r\ntype gridTransformationFunction = (grid: LevelGrid) => LevelGrid;\r\n\r\n/** returns a gridTransformationFunction, using the given callback function in grid.map */\r\nconst getGridMapTransformation = (func: (levelColumn: SpeedrunLeaderboard[], i: number) => SpeedrunLeaderboard[]): gridTransformationFunction => {\r\n  return (grid: LevelGrid): LevelGrid => {\r\n    return grid.map((levelColumn, i) => func(levelColumn, i))\r\n  }\r\n}\r\n\r\n/** remove Collectibles category from the grid entirely */\r\nconst removeCollectiblesCategory = (grid: LevelGrid): LevelGrid => {\r\n  return grid.filter((_, i) => i !== 1)\r\n}\r\n\r\nconst getFilterFullClearRuns = (variables: SpeedrunVariable[][]): gridTransformationFunction => {\r\n  const callback = (levelColumn: SpeedrunLeaderboard[], i: number) => {\r\n    if (i === 1 /* only filter runs in the collectibles column */) {\r\n      return levelColumn.map((level, i) => {\r\n        // find the 2 relevant IDs based on variable name and run value label\r\n        const variable = variables[i].find((x) => x.name === COLLECTIBLES_VARIABLE_NAME)\r\n        const value = Object.entries(variable!.values.values).find(([_key, val]) => val.label === FC_RUN_VALUE)\r\n\r\n        // throw out if run is of not of given subcategory\r\n        level.runs = level.runs.filter((run) =>\r\n                    run.run.values![variable!.id] === value![0]\r\n        )\r\n\r\n        return level\r\n      })\r\n    }\r\n    return levelColumn\r\n  }\r\n\r\n  return (grid: LevelGrid): LevelGrid => {\r\n    return getGridMapTransformation(callback)(grid)\r\n  }\r\n}\r\n\r\nconst removeFarewellObsoletes = (grid: LevelGrid): LevelGrid => {\r\n  const callback = (levelColumn: SpeedrunLeaderboard[], i: number) => {\r\n    if (i === 0) {\r\n      return levelColumn\r\n    }\r\n    return levelColumn.filter((_, i) => i !== 8)\r\n  }\r\n\r\n  return getGridMapTransformation(callback)(grid)\r\n}\r\n\r\nexport { gridTransformationFunction, getGridMapTransformation, removeCollectiblesCategory, getFilterFullClearRuns, removeFarewellObsoletes }\r\n","import SpeedrunRankedRun from '../speedruncom/models/SpeedrunRankedRun'\r\n\r\ntype scoringFunction = (r: SpeedrunRankedRun) => number\r\n\r\nconst eliteScoring = (run: SpeedrunRankedRun): number => {\r\n  if (run.place === 1) { return 100 }\r\n  if (run.place === 2) { return 97 }\r\n  return Math.max(0, 98 - run.place)\r\n}\r\n\r\nexport { scoringFunction, eliteScoring }\r\n","import SpeedrunId from '../../speedruncom/models/SpeedrunId'\r\nimport SpeedrunRankedRun from '../../speedruncom/models/SpeedrunRankedRun'\r\nimport RankingGrid from './RankingGrid'\r\nimport { fetchUser } from '../../speedruncom/wrapper'\r\nimport { eliteScoring, scoringFunction } from '../scoring'\r\n\r\nexport default class Player {\r\n  id: SpeedrunId\r\n  timesPage: RankingGrid\r\n\r\n  private _pointsPerColumn: number[]\r\n  private _name: string | null | undefined = undefined\r\n\r\n  static scoringFn: scoringFunction = eliteScoring\r\n\r\n  constructor (id: SpeedrunId, gridDimensions: number[]) {\r\n    this.id = id\r\n    this.timesPage = gridDimensions.map((colSize) => new Array<SpeedrunRankedRun>(colSize))\r\n    this._pointsPerColumn = gridDimensions.map((_) => 0)\r\n  }\r\n\r\n  /** register run r in the grid at position i, j */\r\n  registerRun (r: SpeedrunRankedRun, i: number, j: number) {\r\n    this.timesPage[i][j] = r\r\n  }\r\n\r\n  public getPointsOfColumn (col: number): number {\r\n    if (this._pointsPerColumn[col]) {\r\n      return this._pointsPerColumn[col]\r\n    }\r\n\r\n    const val = this.timesPage[col].reduce((sum, r) => sum + Player.scoringFn(r), 0)\r\n    this._pointsPerColumn[col] = val\r\n\r\n    return val\r\n  }\r\n\r\n  public get totalPoints () {\r\n    return this._pointsPerColumn.reduce((sum, _, i) => sum + this.getPointsOfColumn(i), 0)\r\n  }\r\n\r\n  /**\r\n   * this getter should be used with caution, preferably when absolutely certain that the name of\r\n   * a player is already loaded\r\n   *\r\n   * otherwise use the async version getName\r\n   */\r\n  public get name () {\r\n    if (this._name) {\r\n      return this._name\r\n    }\r\n\r\n    fetchUser(this.id).then(val => {\r\n      const n = val.data.names.international\r\n      this._name = n\r\n\r\n      return n\r\n    })\r\n\r\n    return ''\r\n  }\r\n\r\n  public async getName () {\r\n    if (this._name) {\r\n      return this._name\r\n    }\r\n\r\n    try {\r\n      const n = await (await fetchUser(this.id)).data.names.international\r\n      this._name = n\r\n    } catch {\r\n      this._name = `UNLOADED: ${this.id}`\r\n    }\r\n\r\n    return this._name\r\n  }\r\n}\r\n","import LevelGrid from '../speedruncom/models/LevelGrid'\r\nimport SpeedrunId from '../speedruncom/models/SpeedrunId'\r\nimport Player from './models/Player'\r\n\r\nconst buildPlayerMap = async (grid: LevelGrid): Promise<Map<SpeedrunId, Player>> => {\r\n  const pMap = new Map<SpeedrunId, Player>()\r\n  const gridDimensions = grid.map((col) => col.length)\r\n\r\n  grid.forEach((levelColumn, i) =>\r\n    levelColumn.forEach((board, j) =>\r\n      board.runs.forEach((r) => {\r\n        const p = r.run.players[0]\r\n\r\n        // skip players without id (deleted users)\r\n        if (p.id) {\r\n          pMap.has(p.id) || pMap.set(p.id, new Player(p.id, gridDimensions))\r\n          const pl = pMap.get(p.id)!\r\n          pl.registerRun(r, i, j)\r\n        }\r\n      })\r\n    )\r\n  )\r\n\r\n  return pMap\r\n}\r\n\r\nexport default buildPlayerMap\r\n","/* eslint-disable no-unused-vars */\r\nenum AppEvent {\r\n    UPDATE_STATE = 'updateState',\r\n}\r\n\r\nexport default AppEvent\r\n","/* eslint-disable no-unused-vars */\r\nenum TableSelection {\r\n    TOTAL = 'Total',\r\n    A_SIDES = 'A-Sides',\r\n    B_SIDES = 'B-Sides',\r\n    C_SIDES = 'C-Sides',\r\n}\r\n\r\nexport default TableSelection\r\n","import Player from '../../modules/rankings/models/Player'\r\nimport TableSelection from '../models/TableSelection'\r\n\r\nconst getPointsGetter = (sel: TableSelection) => {\r\n  switch (sel) {\r\n    case TableSelection.TOTAL:\r\n      return (p: Player) => p.totalPoints\r\n\r\n    case TableSelection.A_SIDES:\r\n      return (p: Player) => p.getPointsOfColumn(0)\r\n\r\n    case TableSelection.B_SIDES:\r\n      return (p: Player) => p.getPointsOfColumn(1)\r\n\r\n    case TableSelection.C_SIDES:\r\n      return (p: Player) => p.getPointsOfColumn(2)\r\n\r\n    default:\r\n      return (p: Player) => p.totalPoints\r\n  }\r\n}\r\n\r\nexport default getPointsGetter\r\n","/**\r\n * collection of functions to help transform the player array based on user input\r\n */\r\n\r\nimport Player from '../../modules/rankings/models/Player'\r\nimport AppState from '../models/AppState'\r\nimport getPointsGetter from './points-getter'\r\n\r\nconst getSorterFunction = (s: AppState) => {\r\n  const getter = getPointsGetter(s.tableSelection)\r\n  return (a: Player, b: Player) => getter(b) - getter(a)\r\n}\r\n\r\nexport { getSorterFunction }\r\n","import AppEvent from '../../models/AppEvent'\r\nimport AppState from '../../models/AppState'\r\nimport TableSelection from '../../models/TableSelection'\r\n\r\nconst getCallback = (s: AppState, type: TableSelection) => {\r\n  return () => {\r\n    s.tableSelection = type\r\n    document.dispatchEvent(new CustomEvent<AppState>(AppEvent.UPDATE_STATE, { detail: s }))\r\n  }\r\n}\r\n\r\nconst getButton = (s: AppState, type: TableSelection) => {\r\n  const btn = document.createElement('button')\r\n  btn.innerHTML = type\r\n  btn.disabled = (type === s.tableSelection)\r\n  btn.addEventListener('click', getCallback(s, type))\r\n  return btn\r\n}\r\n\r\nconst getControlButtons = (s: AppState) => {\r\n  const l = document.createElement('li')\r\n  l.classList.add('control-buttons')\r\n\r\n  const selections = [\r\n    TableSelection.TOTAL,\r\n    TableSelection.A_SIDES,\r\n    TableSelection.B_SIDES,\r\n    TableSelection.C_SIDES\r\n  ]\r\n\r\n  for (const type of selections) {\r\n    l.appendChild(getButton(s, type))\r\n  }\r\n\r\n  return l\r\n}\r\n\r\nexport default getControlButtons\r\n","const htmlToElement = (html: string): Node => {\r\n  const template = document.createElement('template')\r\n  html = html.trim()\r\n  template.innerHTML = html\r\n  return template.content.firstChild as Node\r\n}\r\n\r\nexport default htmlToElement\r\n","import Player from '../../../modules/rankings/models/Player'\r\nimport AppState from '../../models/AppState'\r\nimport htmlToElement from '../html-helper'\r\nimport getPointsGetter from '../points-getter'\r\n\r\nconst getTableElement = (\r\n  place: string | number,\r\n  name: string,\r\n  points: string | number\r\n) => {\r\n  return htmlToElement(`\r\n        <tr>\r\n            <td>${place}</td>\r\n            <td>${name}</td>\r\n            <td>${points}</td>\r\n        </tr>\r\n    `)\r\n}\r\n\r\nconst getTableHeader = (\r\n  place: string,\r\n  name: string,\r\n  points: string\r\n) => {\r\n  return htmlToElement(`\r\n        <tr>\r\n            <th>${place}</th>\r\n            <th>${name}</th>\r\n            <th>${points}</th>\r\n        </tr>\r\n    `)\r\n}\r\n\r\nconst getLeaderboardTable = (s: AppState, arr: Player[]) => {\r\n  const t = document.createElement('table')\r\n  const getter = getPointsGetter(s.tableSelection)\r\n  t.classList.add('leaderboard-table')\r\n\r\n  const head = getTableHeader('Place', 'Name', 'Points') as HTMLElement\r\n  t.appendChild(head)\r\n\r\n  arr.forEach((p, i) => t.appendChild(getTableElement(\r\n    i + 1,\r\n    p.name,\r\n    getter(p)\r\n  )))\r\n\r\n  return t\r\n}\r\n\r\nexport default getLeaderboardTable\r\n","import AppEvent from '../../models/AppEvent'\r\nimport AppState from '../../models/AppState'\r\n\r\nconst getLoadMoreButton = (s: AppState, max: number) => {\r\n  if (s.tableState >= max) {\r\n    return document.createElement('div')\r\n  }\r\n\r\n  const d = document.createElement('div')\r\n  d.classList.add('center')\r\n\r\n  const btn = document.createElement('button')\r\n  btn.innerHTML = 'Load 50 more ...'\r\n\r\n  btn.addEventListener('click', () => {\r\n    s.tableState = (s.tableState + 50)\r\n    document.dispatchEvent(new CustomEvent<AppState>(AppEvent.UPDATE_STATE, { detail: s }))\r\n  })\r\n\r\n  d.appendChild(btn)\r\n  return d\r\n}\r\n\r\nexport default getLoadMoreButton\r\n","import htmlToElement from '../html-helper'\r\n\r\nconst getLoader = () => {\r\n  return htmlToElement('<div class=\"loader center\">Loading...</div>')\r\n}\r\n\r\nexport default getLoader\r\n","import AppState from '../models/AppState'\r\nimport { getSorterFunction } from './array-helper'\r\nimport getControlButtons from './components/control-buttons'\r\nimport getLeaderboardTable from './components/leaderboard-table'\r\nimport getLoadMoreButton from './components/load-more-button'\r\nimport getLoader from './components/loader'\r\n\r\nconst renderDynamicContainer = async (state: AppState): Promise<void> => {\r\n  const container = document.getElementById('dynamic-container')\r\n  const reset = () => { container!.innerHTML = '' }\r\n\r\n  reset()\r\n\r\n  // add loader as arranging array might include loading player names\r\n  container!.appendChild(getLoader())\r\n\r\n  // arrange data based on state\r\n  const arr = Array.from(state.players.values())\r\n    .sort(getSorterFunction(state))\r\n    .slice(0, state.tableState)\r\n\r\n  // load all names\r\n  await Promise.all(arr.map(async (p) => await p.getName()))\r\n\r\n  // remove loader again\r\n  reset()\r\n\r\n  // render dynamic container based on state\r\n  container!.appendChild(getControlButtons(state))\r\n  container!.appendChild(getLeaderboardTable(state, arr))\r\n  container!.appendChild(getLoadMoreButton(state, state.players.size))\r\n}\r\n\r\nexport default renderDynamicContainer\r\n","import LevelGrid from '../modules/speedruncom/models/LevelGrid'\r\nimport { getRawLeaderboardData } from '../modules/speedruncom/get-data'\r\nimport { getFilterFullClearRuns, gridTransformationFunction, removeCollectiblesCategory, removeFarewellObsoletes } from '../modules/speedruncom/grid-transformation'\r\nimport buildPlayerMap from '../modules/rankings/build-map'\r\nimport AppState from './models/AppState'\r\nimport AppEvent from './models/AppEvent'\r\nimport renderDynamicContainer from './ui/render-dynamic'\r\nimport TableSelection from './models/TableSelection'\r\n\r\nconst main = async () => {\r\n  const pMap = await (async () => {\r\n    // fetch data\r\n    const raw = await getRawLeaderboardData()\r\n\r\n    // remove .data ApiResponse\r\n    const variables = raw.variables.map((variable) => variable.data)\r\n    let grid: LevelGrid = raw.grid.map((categoryRow) => categoryRow.map((levelBoard) => levelBoard.data))\r\n\r\n    // transform grid\r\n    const transformations: gridTransformationFunction[] = [\r\n      removeFarewellObsoletes,\r\n      getFilterFullClearRuns(variables), // this is currently unused because collectibles are removed entirely\r\n      removeCollectiblesCategory\r\n    ]\r\n    transformations.forEach((tFunc) => { grid = tFunc(grid) })\r\n\r\n    // build and return player map\r\n    return await buildPlayerMap(grid)\r\n  })()\r\n\r\n  const initialState: AppState = {\r\n    players: pMap,\r\n    tableSelection: TableSelection.TOTAL,\r\n    tableState: 100\r\n  }\r\n\r\n  document.addEventListener(AppEvent.UPDATE_STATE, ((e: CustomEvent<AppState>) => {\r\n    renderDynamicContainer(e.detail)\r\n  // eslint-disable-next-line no-undef\r\n  }) as EventListener)\r\n\r\n  await renderDynamicContainer(initialState)\r\n}\r\n\r\nexport default main\r\n","import main from './app/main'\r\n\r\nmain()\r\n"]}