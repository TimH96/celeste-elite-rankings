{"version":3,"sources":["../models/AppEvent.ts","../models/TableSelection.ts","../../modules/speedruncom/constants/celeste.ts","../../modules/speedruncom/wrapper.ts","../../modules/speedruncom/get-data.ts","../../modules/speedruncom/grid-transformation.ts","../../modules/rankings/scoring.ts","../../modules/rankings/models/Player.ts","../../modules/rankings/build-map.ts","../../modules/rankings/get-map.ts","../ui/util/points-getter.ts","../ui/util/array-helper.ts","../ui/components/control-buttons.ts","../ui/util/html-helper.ts","../ui/components/subtexts.ts","../ui/components/leaderboard-table.ts","../ui/components/load-more-button.ts","../ui/components/loader.ts","../ui/components/main-page.ts","index.ts"],"names":[],"mappings":";AWAA;;;;ATGA,AGGA,ALNA,ACAA,ICGM,OAAO,GAAe,UAA5B;AICA,AJwBS,AY5BT,ADAA,IPIM,AQJA,ADAA,GX4BG,CAAA,OAAA,AY5BQ,CRIC,COJC,CX4BV,AY5BW,CRIC,COJC,KX4Bb,EY5BH,CRIA,COJA,SCAc,CAAC,CRIA,CAAC,COJA,CAAC,CPIF,EAAuB,AQJxB,CDAE,CCAc,CDAD;APKjC,AJDF,AGGA,ALNA,ACAA,AaAE,ADAA,IXGI,AGGA,ALND,ACAA,EKIC,AQJE,ADAA,CCAC,ERIA,CAAC,AQJE,EdAZ,CEGe,CWHC,CPIV,CJDY,CWHC,CZAnB,AaAoB,CAAC,CRID,CAAlB,EAAqB,EJDvB,AWH2B,CAAC,ERME,GAAG,CSNrB,CAAuB,MAAvB,ADAO,CRMb,ASNJ,ADAwC,UAAvB,CAAjB,aRM+B,CAAC,IAAD,EAA+E;ACFvF,AJuBP,AGpBhB,ASNA,ADAA,ECAA,ADAA,CCAC,CAAC,EDAE,CX0BY,CAAA,CGpBT,AQNA,EPGuB,EQH9B,ADAW,CPGY,AQHX,ADAA,GX0BI,AY1BhB,CAAgB,ADAT,CRMC,CHoBQ,AW1BhB,GRMO,EAAgB,IHoBP,AY1BhB;ARGmC,AJCrC,AGGI,ALRJ,ACAA,AaEE,ADAA,CbFF,ACAA,CaEE,ADAA,CCAC,CZGG,AYHF,MDAM,CRMC,ALRN,ACAA,AYEM,ECAT,ETMa,CAAC,ASNA,GTML,ALRX,CKQoB,AQNlB,CbFW,EcEX,ADAqB,EZFvB,EAAmB,AYEjB,GXG8B,AGGX,GHHc,QGGf,EAAc,CAAd,EAAe,UHHnC;AAsB6B,AGnBW,ALPpC,ACAA,AaEF,ADAA,EbFE,ACAA,KC0ByB,CAAA,CYxBpB,ADAA,CbFL,AcEF,CdFE,EKOoC,GJPpC,CIOwC,AJPxC,AYEa,CRK4B,AQL3B,MZFd,CDAA,ACAA,AYEK,CbFL,AaEsB,EZFtB,CIOwC,ALPxC,EKOsD,CAAd,CAAJ,CHmBX,CD1BzB,CYEF,CXwB2B,KF1BzB,qBE0ByB;AItB3B,AJCF,AGE4D,ALN3D,ACAG,AaEH,ADAA,CbJD,AcDA,ADAA,CZGI,CDFC,CEMC,CGEK,CCHL,ADGF,GCHK,CAAC,CNLG,IMKP,CJCY,AFNb,ACED,CAAA,ECIiB,CIDD,CAAlB,EAAqB,CNLV,ECET,CDFS,ACET,EDFS,CAAb,ACEI,CCIJ,QDJI;AKGqB,AJsBgC,AGlBtD,AJNC,AWJJ,AGEA,ACFA,ACAA,APCA,ETGI,CIIF,CORF,AGEA,ACFA,ACAA,APCA,GR2ByD,CAAA,GItBzB,EAAP,CMNzB,AIAA,EfII,CAAA,AWJJ,AGEA,ACFA,ACAA,Gf4ByD,Aa1BzD,AEFA,APCA,GR2ByD,AQ3BzD,QTGI,CAAA,AWJJ,AIAA,CJAA,AIAA,Ed4ByD,ADxBrD,AcFJ,AEFA,CFEA,AEFA,EPCA,CAAA,CEDA,AIAA,CJAA,AIAA,EDEA,AEFA,CFEA,AEFA,EPCA,CAAA,ETGI,eWJJ,AIAA,CJAA,AGEA,ACFA,ACAA,CLAA,AGEA,ACFA,ACAA,CFEA,AEFA,SPCA,CAAA,CAAA;AJKoC,AJGpC,AGEC,ALND,ACAI,AayBK,ADvBT,CRAA,CJFI,ECIC,GFJL,AcyBS,ADvBT,CbFA,AcyBS,ADvBT,MXEA,CFJA,AaEA,CZFI,CAAA,CDAW,AaEA,CCuBN,GAAA,IdzBT,ACAI,CAAA,GAAA,CYEJ,ECuBS,MbzBL;AACA,AWJJ,AGCA,ACAA,ACDA,APCA,ETGI,EWJJ,AGCA,ACAM,ACDA,APCA,SODS,GhBIX,AgBJc,ChBId,EcHJ,ALAqB,CEDrB,CICuB,CDAvB,ALAwB,CEDxB,CIC0B,CCDpB,ChBIF,CAAA,GAAA,CSHE,EMAA,CCDY,GFClB,AEDkB,CLAlB,AGCA,CdGI,AWJJ,MGCA,CHDA,AGCA,ALAwB,CEDxB,AFCyB,GMAC,ANAF,CMAG,CAAD,ANAkB,EMAJ,GAAd,EAAyB,UDAnD,CAAA,CAAA,KHDA,CAAA,CAAA;ANKE,AJEF,AGmBqC,AJrBpC,AeHC,ACDA,AHIF,AHDA,ADFE,CRKF,ADRA,EAAK,CaMC,AHDN,EKFM,CXwB+B,AWxB9B,CXwB8B,AWxB7B,CVGC,AWJA,CPCC,CRKL,EIFQ,AIHX,CJGY,GAAL,ALNU,CKMD,AUHZ,CVGG,AKDT,ELCqB,AJErB,AYFuB,CbNlB,AeGiB,ACDb,ANGT,CTGe,AeNN,CHIiB,CEHxB,CVGwB,CUHC,EVGE,CAAC,AWJrB,CAAc,CZyBc,CSrB/B,ERAG,ADqB4B,CCrBnC,ALNiB,CUKnB,CAAA,CVLmB,EAAA,CAAnB,GUKA,CAAA,IGC0B,CAAC,OAAD,CTqBW,CSrBK,GHD1C,CAAA,CAAA,WMHS,CAAP;AXKD,AJEG,AUNJ,AGAA,ACCI,ACDH,AHIC,AJHE,CJDJ,AWFA,CfQI,EUNE,AGAN,EDIQ,CAAC,EJHA,CIGG,CEHD,CdKP,CAAA,CaNJ,CHAiB,EGAjB,CHAoB,AEIA,CEHD,AFGE,CEHD,EdKhB,CAAA,CaNJ,CAAA,ALCS,CRKL,AQLK,CEDH,KEIM,CZER,AcLO,AFGwB,AJH1B,CMAyB,ANAV,GKDxB,CHAoB,AGApB,CHAqB,AICV,AFGC,AJHR,CEDgB,AIChB,AFGF,EFJgC,IAAd,EAAkC;AVOlD,AGEJ,AJJA,AWJE,AICC,AFGD,AHDF,ADFM,ERKF,AYFF,CAAC,CTIG,ASJF,AHDE,GVCN,CAAA,CWJS,GVML,CAAA,AYFF,AJHW,CIGC,CbAd,CIIkB,CSJhB,CbAa,AaAG,CTIG,EORZ,ADGc,EDFT,CCEY,ADFb,EAAU,CRKnB,CAAA,AGEE,CSJJ,EZEE,CDFJ,CUDM,ONKe,CAAC,IHFlB,AGEiB,EAAkB,GAAlB,AMLK,CAAC,CNKuB,AMLxB,EAAY;ALEZ,AJEtB,AGEF,AORE,AGAJ,AEAA,AHIE,AHDA,ADH0B,ERMxB,AYFF,CAAC,CFJC,AGAE,ADIF,CFJC,CAAC,ADGE,CLCkB,AWJ1B,CXI0B,AWJ1B,CZQS,GHFL,ASHU,CTGV,AGES,ASJX,CTIY,CYRd,ANGiB,ADHW,CIIZ,AJJa,CAAC,COAf,CFAM,CTIK,ADIjB,AORL,CPQiB,CHFjB,AaNoB,CTIE,AJEtB,AUNmB,AEIrB,GZEE,CUNA,AKAJ,CPA4B,ECGX,CNKK,AURhB,AJGW,CNKI,EHFjB,AGEqB,CCJC,ADIL,EAAK,CMLT,CAAgB,CAAC,CAAC,KIHX,CACtB,KADsB,EAEtB,CJCe,CAAf,IIHsB,EAGtB,MAHsB,EAGC;AbIrB,AGC2B,AOP3B,AGIF,ACHA,AFGA,AHDA,ADJuC,EROrC,EUNA,EGII,ACHA,CAAC,ANFH,EKKK,ADAF,AHDA,CKFG,CXMmB,CHD3B,AGC4B,AOPpB,AGIE,CbEV,AUNS,IPOwB,CWNjB,CAAC,ALEX,CNIqB,AMJtB,ETGL,ASHiB,CTGjB,ASHK,EICK,AJDgB,CTG1B,AUNA,AGIU,CHJa,IAAI,CICnB,CDGE,ACHqB,CdK/B,AaFwB,ICHhB,CAAV,CFGkC,EFJT,CAA0B,IEI5C,GAAkC,GFJU,CAAA,KEInD,EFJmD,CAAS,YAAnC,EAAiD,oCGM7C,KAFH,GAEQ,yBAFR,GAGV,MAAM,CAAC,IAHG,GAGC,yBAHD,GAIV,MAJU,GAIJ,GAJI,GAIA,UAAA,CAAA,MAAA,CAAO,IAAP,CAJA,GAIY,4BAJ1B,CAAZ;AbGD,AGAuC,AOPsC,AGW5E,ACTA,AFGD,AHFkC,CTDnC,AYFA,CCWE,ACTA,CdAG,AGKI,AWLN,CXKD,AWLE,CDSC,CHXyE,AGWxE,KJR6B,CCHiD,CVErE,AcAb,CJFoF,AIExE,GAAZ,ALCuC,CTDpC,AcAa,ALCwB,CAAD,CAAN,EIQjC,CAAqB,AJRwB,GKD7C,EdAa,CSCsC,CIQnD,AJRoD,CTDvC,ASCsC,CIQrB,AJRG,CTDpB,CAAf,UaSgC;AVH/B,AOR2E,AGYxE,ACRF,ALDsD,ADFpD,CLKJ,EMHE,CISE,CHZuB,CAAvB,AIII,GAAG,ANHF,CKWC,CAAC,CCRG,GDQV,CAAY,ICRM,CAAC,INHd,CAAA,OAAA,CMGK,ANHU,CMGa,MNHjC,CKWoC,CCR1B,CAAZ,IDQ4C,CAAC,EAA3C,EAAiD,QAAjD,EAA4D,KAA5D;AbSmE,AUpBpE,AGYA,ACRD,AFEF,AHHC,ADFK,CCDN,CKIE,CJPA,AGaA,CDJI,CEFD,CAAC,CdgBiE,CAAA,EYd3D,GAAG,AJLF,EMGX,GdgBqE,AchBrD,GdgBqD,CYdjE,CJLQ,CAAD,EAAU,EIKR,CAAC,EZcuD,KchBrE,CFEa,EAA0B;AZEzC,AGY+D,AOnB9D,AGYC,ACPA,AFAc,AJLY,CEL5B,CIUE,EdEG,CcFA,CAAC,AFAU,CTc+C,CAAA,CUPtD,GAAP,EDPc,CJLY,CRO5B,AQP6B,CAAC,EIKd,CTc+C,EWd7D,CXc6D,AWdxC,CFAP,CAAA,EAAA,GEAd,EAA8B,ENLJ,CLmBmC,AKnBf,CAApB,CAAA,OMKI;ADQ/B,ACPG,AFDY,AHDP,ADJyC,CKHlD,GCSI,AFDY,CECX,CAAC,CLFG,ADJH,CCIG,IGCO,GAAA,CECZ,GAAgB,CAAC,AFDL,CECM,ILFb,GAAA,GKEW,GAAe,EAA/B,SLFK;ATGT,AGCA,AONA,AIKI,AFFqC,CZEzC,GGCM,AONA,AIKF,OdAC,CcAO,CJLG,AIKF,GJLK,OVKlB,EAAiB,AULX,CIKF,CXCyB,AWDF,GXCK,CWDD,GJLb,CAAC,CAAD,EAAc,CPM1B,GONY,AIKS,CAA0B,CJLD,SIKC,CAAA,OAAA,CXCrB,AWD8B,CXC7B,IAAD,EAAgB,KWDrB,EAAiD;AdCxE,AGCF,AONA,AGYF,ACR8E,ANL1E,ERMA,EaOE,EVNE,AONA,AIIsE,GJJnE,AFDF,GECK,AIIsE,EdChF,AGCY,AWFsE,CdClF,EGCe,CUMC,CbPhB,CAAA,AULkB,CAAC,AGYA,EbPnB,EQNK,CLOD,AKPC,IKaH,GLbG,CLOU,AONL,AFDU,CLOJ,AONiB,GVKjC,KULU,CAAZ,AGYqB,CACrB,CVPiB,AKPf,ELOoD,CAArC,CUMI,CVN0C,CUQ/D,IAFqB,EAGrB,MAHqB,EAGP;AbTZ,AGCA,AONF,AGgBA,ACb0E,AFD1E,AJHI,ERMF,AULF,GAAG,AIGsB,CJHrB,AIGF,EXGI,CAAC,AUUA,ADdA,IJHI,CRMT,AGCU,CHDV,AGCA,AONF,EPMe,ASJA,CFFC,CVKd,CAAA,AYHgB,EFFlB,AGgBO,CbXL,AaWK,ALjBK,CAAD,EAAU,IKiBd,CAAc,EbXnB,IYHiC,CAAC,KAAD,CAApB,GAA8B,WAAW,CAAC,KAAD,CAAxD,GCgBgB,KAFK,GAEA,yBAFA,GAGL,IAHK,GAGD,yBAHC,GAIL,MAJK,GAIC,4BAJf,CAAP;AbVE,AGCE,AONJ,AGsBD,ACnBE,AFDF,AJJ2B,CKY5B,ADVA,CZKI,AULF,CIAA,EJAG,CAAC,OPMO,CHDT,AULF,CVKE,AQPwB,CAAC,CEEX,AFFY,ERO1B,CAAA,CULkB,EVKlB,CGCE,EONqB,CAAC,CAAC,MFFD,CAAoB,CAApB,CAAA,IROxB,CULF;AVME,AGCC,AONH,AIIA,ANPgD,ERQ9C,AULF,AIIA,CAAC,CAAC,CJJC,CAAC,CFHA,ORQF,CAAA,AcDF,CAAc,GdCZ,AcDF,CdCE,EULF,CVKE,AULmB,OAArB,EAA8B,KVK5B,MULuC,CAAC,CAAD,EAAI,IAAJ,CAAzC;AVME,AULF,AGsBF,AClBE,AFUoB,EZTlB,EaiBE,GDRgB,CAAA,CFdb,AIIA,CAAP,EJJA,EVKE,AYSkB,CZTlB,EYSkB,EZTlB,CAAA,GAAA,AaiBqB,ADRH,GCQM,SAAtB,GbjBF,gBaiBwB,CAAC,CAAD,EAAc,GAAd,EAA2B;AbhBnD,AGAA,AOLH,AGsBC,AClBD,ANPG,CEHJ,AIRA,CdmBI,IaiBI,CAAC,ELzBA,CKyBG,CVjBD,GHAP,CAAA,GaiBgB,CbjBhB,AaiBiB,CbjBjB,EGAkB,CHAlB,AGAmB,EKRd,CAAA,GLQE,CAAmB,EUiBlB,CAAuB,ALzB1B,CAAe,CRQpB,KGA2B,AUiBnB,CVjBkB,AUiB5B,ALzBE,ELQ8B,CAAJ,EAAK;AHC/B,AGDoC,AUkBtC,ADtBF,AJHM,ERQF,EYLE,ECsBE,GDtBG,GCsBG,ADtBA,CTI0B,AKP3B,CRQT,AGDqC,CHCrC,AaiBa,IbjBb,AGD0C,CHC1C,AGDoC,CSJlC,EZKF,AQRU,CAAD,EIGC,AJHS,CIGR,EAAD,CCsBG,CAAA,ADtBU,IZKvB,GaiBa,CAAgB,ADtBnB,CCsBoB,CAAC,ADtBiB,cCsBnC,CAAf;AbhBE,AGF2C,AOH/C,AGsBE,AClBF,AFL2B,AJHC,ERSxB,AaiBF,CAAC,CHtBG,AGsBF,CVnBO,CAAP,ASJuB,CEK3B,CAAA,KDkBE,CbjBE,AaiBU,ADvBa,CZMvB,AcDJ,ANR4B,CAAC,CK0B3B,AL1B4B,CK0BZ,AClBH,CdCX,AYNuB,CZMvB,CULmB,EVKnB,CULsB,AEDC,CAAA,EAAA,EZMvB,IULE,CFJsB,CMQ5B,ANRgD,CAApB,CK0B1B,AL1B0B,aEIF,CAAC,CAAD,EAAY;AVMlC,AGFD,AOHD,AGuBA,ADzByB,AJHuB,ERU9C,CGPF,CSAyB,EFEnB,AGuBA,CHvBC,AFLH,GEKM,AGuBA,EDzBe,CCyBZ,CblBX,CAAA,AYPuB,GFEP,CVKhB,AULiB,CVKjB,AYPuB,GZOvB,IakByB,CAAC,IHvBlB,CVKR,AUL+B,EGuBN,EHvBjB,AGuB2B,CHvBrC,KGuB2B,EAAkB,QAAlB,CAA3B;AbjBD,AULC,AGuBA,AD1BkD,CZFpD,CUKE,AGuBA,Cb5BG,AUKF,AGuBA,CHvBC,AGuBA,SHvBF,CAAY,CVLG,Aa4Bf,CAAc,CHvBd,CAAgB,EVLb,Aa4BH,Yb5Be,GAAA,AUKf,EVLe,CAAjB;AGSE,AOFA,AGuBA,AL7BE,EK6BF,GAAG,CHvBG,AGuBF,GVrBG,AKRA,IK6BP,CAAY,EHvBI,GAAG,CACjB,IGsBW,CAAD,AL7BL,CAAA,CK6BS,CAAJ,EAAK,GVrBc,AKRxB,CLQyB,AKRV,EEOpB,CAAA,IFPA,CLQ6B,CAAxB,CAAmC,AODxC,CAAe,GPCV,CAAP,COFmB,EAEjB,gBAAA,CAAA,OAAA,CAAe,OAFE,EAGjB,gBAAA,CAAA,OAAA,CAAe,YAHE,EAIjB,gBAAA,CAAA,OAAA,CAAe,OAJE,EAKjB,gBAAA,CAAA,OAAA,CAAe,OALE,CAAnB;AVKiF,AGFlF,AUoBuB,AD3BtB,AJDI,CLDN,MHWmF,CAAA,CYT1E,EC2Be,CAAC,CAAC,AL5Bb,IICI,GZSkE,AYT/D,GZS+D,AQVrE,CK4BU,AL5BX,CK4ByB,CL5Bf,SRU4D,EYT9C,CAAC,EC2Be,AD3BhB,CC4BjC,AD5Ba,CC4BZ,ED5BuC,CC4BpC,CAD6C,EAEjD,CAFiD,EAGjD,ID9BmD,CAAC,CC8B9C,CAAC,AD9B4C,CC8B7C,AD9BR,CC2BmD,CAA7B,CAAA;AHftB,AGmBE,AD9BH,AJF2B,CIA5B,EC4BE,IHfmB,IAAA,EAAA,EFbO,CEaP,AFbQ,CEaR,AFbS,EEaT,YAAA,GAAA,AFbO,CAAoB,CAApB,CAAA,OEa1B,EAAmB,EAAA,GAAA,YAAA,CAAA,MAAnB,EAAmB,EAAA,EAAnB,EAA+B;APH4C,AOGtE,AGqBL,ALlCgD,OLU2B,AKVvE,CLUuE,AOGhE,CGqBJ,CAAP,EHrBe,GAAA,YAAA,CAAA,EAAA,CPH4D,AOGtE,GPHsE,uBAAA;AOIzE,AGqBH,ADvB6B,CCQ9B,GHNI,CAAC,CAAC,CEFwB,CAAA,KAAA,GAAA,CFE1B,CAAc,GEFY,MFEH,CAAC,CAAD,EAAI,IAAJ,CAAvB;AACD,AFbC;AKmCJ,ADjCA,AJDM,IICA,GCiCN,CAAA,KLlCa,CICG,CCiChB,EDjCmB,CCiCJ,KLlCD,CAAD,EICP,AJDiB,UICJ,CCiCnB,ADjCoB,CAAD,EAAY,QAAZ,EAAqC;AFatD,AEb6B,AJDH,MICG,GFatB,CAAP,IEb6B,CJDH,CAAC,CAAC,EICC,KAAA,CAAA,EAAA,CJDH;AEe3B,AEd8B,AJDU,CEFzC,GEG+B,GJDzB,KICyB,GAAA,KAAA;AAAyB,AJlBtD,GIkBsD,CACtD;AFeF,AFfC,CApBD,MEmCA,CAAA,OAAA,GAAe,iBAAf;;AEdE,AJCF,MIDQ,CJCR,CAAA,CIDW,GAAG,GJCd,GAAe,GIDP,GAAM,CAAC,CAAD,EAAU,KJCxB;AID+B,WAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,CAAC,CAAC,CAAC,GAAG,EAAL,IAAW,GAAX,GAAiB,EAAlB,IAAwB,EAAxB,GAA6B,CAAhD,KAAsD,IAA7D;AAAmE,GAAhG;;AACA,MAAM,OAAO,GAAG,GAAG,CAAC,CAAD,CAAnB;AAEA,SAAO,QAAQ,GAAG,iBAAiB,CAAC,OAAD,CAApB,GAAgC,WAAW,CAAC,OAAD,CAA1D;AACD,CAND;;AAQqC,OAAA,CAAA,UAAA,GAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AV9BrC,ADAA,ICAA,ADAA,KCAA,ADAA,GCAA,ADAA,ICAA,ADAA;;;;AIGA,IAAA,SAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;ACHA,ACAA,AFIA,AHCA,ADLA,AeAA,ACAA,IXAA,ACAA,AFIA,AHCA,ADLA,AeAA,ACAA,KXAA,ACAA,ASAA,ACAA,GXAA,ACAA,ASAA,ACAA,CZIA,AHCA,ADLA,GKAA,ACAA,AFIA,AHCA,ADLA,AeAA,ACAA,OZIA,AHCA,ADLA,CIIA,AHCA,ADLA,WCKA,CGDA,AHCA,CGDA,QJJA,CAAA;;AIMA,AHAA,ADGA,IIHA,AHAA,ADGM,IAAI,EIHV,CJGa,ECHb,GAAA,OAAA,CAAA,KDGA,gBCHA,CAAA;AGAA,AJIA,IAAM,WAAW,GAAG,IAApB;AIJA,AHSA,IAAM,QGTN,aHS2B,GAAG,SAAxB,qBAAwB,GAAA;AGA5B,AHA4B,ADH9B,IAAM,KCGwB,EGA5B,IJHe,EIGf,CAAa,AHAe,ADHV,CCGU,CGA5B,EAA6B,EHAD,EAAA,CDHxB,ICGwB,CAAA,EAAU,EGAtC,EAAqD,AJHnC,GCGU,ADHV,ECG2B,YAAA;AIb/C,ACFA,AFWU,AJER,AeZF,ACAA,IXCA,ACFA,ASCA,ACAA,KZUU,AJED,GKXT,ECFA,AFWU,AYVV,CXCA,ECFA,AFW6C,AYV7C,CDAA,GAAA,CfYoB,EMbpB,CAAA,CFWU,AJED,EeZT,CfYwB,AeZxB,CVCA,CAAA,CWDA,CAAA,GhBYS,EKXT,CAAA,ALWgC,CgBZhC,CAAA,SVDA,ANaE,CMbF,ASCA,CAAA,IVCA,CAAA,CAAA,GWDA,CAAA,CAAA;AZeI,AJFH,CAFD,QIIS,EAAL,GAAU,EAAV;ACZJ,ACHA,AFgBI,AWfJ,ACAA,IXEM,ACHN,ASCA,ACAA,KZeS,SCbW,ADahB,EYfJ,CXEuB,ADaF,AWfrB,ECAA,CDAA,CTDA,GAAA,EDGM,KCHN,AFgBmC,CEhBnC,AFgBoC,EYfpC,CZeqB,AWfrB,ACAA,CZewC,AWfxC,IVEuB,CAAO,CWF9B,CDAA,ACAA,CDAA,CVEuB,CDakB,CCbI,MDaL,EAAQ,QWfhD,CAAA,CAAA,GTDA,CAAA,AUCA,CAAA,CAAA;AXE6C,ADaQ,AJDrD,IAAM,KKZuC,IDaQ,IAAI,CCbZ,CAAA,ALYxB,GICgC,AJD7B,CIC0D,CCbrC,EAAA,IDaQ,CCbR,ADaQ,AJD/C,CKZuC,EAAG,OAAH,EAAU,GLY/B,CAAO,KAAP,EAA6B,CKZE,OLY/B,EAAuD;AMb/E,AFc0F,AHDzE,ADA8D,Aeb/E,ACAA,IVAA,ASAA,ACAA,CZcqB,CAAjB,GJD2E,IgBb/E,EVAA,CUAA,CfaiB,CKbjB,ALaiB,ADA8D,CAAA,Ieb/E,Cfa+E,EAAA,Aeb/E,Kfa+E,AgBb/E,ChBa+E,AgBb/E,CVAA,CAAA,ANakF,KgBblF,CAAA,CVAA,ANa+E,Aeb/E,CTAA,ASAA,CfayF,MebzF,CAAA,KTAA,ANayF,CMbzF,CAAA,cSAA,CAAA,ACAA,CDAA,ACAA,CAAA;AZeI,AHFa,SGER,gBAAL,GAAwB,cAAc,CAAC,GAAf,CAAmB,UAAC,CAAD,EAAE;ACbzC,ACAR,AFasD,AHFrC,AcZjB,ACAA,IVCM,ASDN,ACAA,EXCQ,IAAI,EJWW,CIXR,ADauC,CAAA,CYdtD,CVCkB,CDAC,CWDnB,CVCqB,CDAN,CJWQ,CIXf,AJWe,AcZvB,GAAA,GTCM,KLWiB,AeZvB,CAAA,CfYiB,CAAA,IKXI,ASDrB,CAAA,ACAA,CAAA,CVCqB,KSDrB,CAAA,oBAAA,CAAA,ACAA,CDAA,ACAA,CAAA;AXEQ,ACDa,AFakC,KAA3B,CCZpB,ADYJ,GEbiB,SAAA,CAAA,CDCC,GAAG,CCDJ,EAAA,CDCQ,CAAC,GAAL,ACDJ,CDCa,ACDb,EAAA,KAAA,CAAA,EDCc,ACDd,GDCa,EAAI,OCDjB;ADCsB,ADaxC,AJFO,AeZV,ACCA,IDDA,ACCM,IAAI,GAAG,CDDb,GVC2C,AUD3C,EfYU,CKXoC,ALWpC,CKXqC,CWAzC,IAAO,CXA8B,EWA9B,GDDb,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;AVCqD,ADenD,AHLM,ADCE,AgBXG,OXAY,CAAjB,CWAK,CfUL,MAAM,EeVD,CfUI,AeVJ,EfUI,CAAA,EeVJ,EfUI,AeVJ,EfUL,GeVK,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;AXEX,AJSoB,ADAZ,AeVV,IAAM,EVCJ,IAAI,CAAC,CLSS,KCAM,ADAD,CKTnB,AJSoB,ADAG,AeVL,CVCL,EUDQ,QVCP,ALSoB,CeV9B,IfUgC,MKTvB,EAAc,CAAd,CUDQ,CVCO,AUDA,KfUL,AeVF,EAAwB,CfUQ,CeVhC,EAAkC,MfUF,CAAA,OAA9B,GAAqC,SAArC,GAA+C,KAAK,CAAC,EAArD,GAAuD,GAAvD,GAA2D,QAAQ,CAAC,EAAxE,CAAX,CAAA;AKRN,AJQkB,AcVmC,SAAA,MVErD,GUFqD,CAAA,KAAA,EVE1C,AUF0C,CVEzC,IUFyC,CAAA,EVErD,AUFwD,CVEpC,MUFiC,EAAU,EVE1C,KAAD,EAAQ,CAAR,EAAS,AUFkC;AVG7D,ACHQ,AFeZ,AHLoB,EGKpB,MAAA,CAAA,GHL0B,KIPtB,ACHQ,CAAA,AFeZ,CAAA,EHL0B,CIPjB,AJOiB,CIPhB,IAAN,CAAW,EDYf,GAAA,ECZI,CAAmB,MJOG,CGKb,AHLkC,CGK/C,ECZwB,ADYW,CCZZ,ADYvB,ECZyB,ADYqB,AHLO,CGKrD,AHLsD,EGKC,EHLR,CAAY,CAAZ,CAArB,CAAN,CAAA;AINd,ACJM,AFgBV,AJNF,SIMO,OCZK,CAAC,ALMb,CIME,AJNF,CIMiB,CCZD,ADYd,CCZe,CAAC,ADYE,CAAlB,ECZc,CAAM,CDYG,CAAvB,KCZc,CAAc,CAAd,CAAV,CADmB,CAGnB;ACNM,AFiBX,AJPD,AgBVM,GZeN,OYfM,EVAY,OUAH,GVAG,AUAA,CVAA,kBUAZ,GVAY,EAAN,CAAA;ADON,AJGA,ADAN,AgBRa,UfQP,EDAE,EAAA,CAAA,CKHE,CAAC,AWLE,CXKD,AWLC,ChBQL,CKHF,AJGU,CDAT,CKHS,ALGkF,CCA9E,EAAA,CAAA,ADAb,EAAP,CAAA,CCAoB,EAAd;AIFE,ADWD,AHRW,AeTL,EZiBN,MAAA,CAAA,KCXC,GJGU,CIHN,ADWL,AHRW,CIHL,ADWN,GCXC,CAAS,CAAC,CAAC,EAAX,KAAkB,IAAI,ADWvB,CCXwB,EDW/B,CCX0B,CAAS,CAAC,CAAC,EAAX,EAAe,EDWf,ECXmB,CDW7C,EAAqC,KCXQ,CAAA,OAAJ,CAAW,CAAC,CAAC,EAAb,EAAiB,cAAjB,CAAf,CAAlB;AACA,ACTF,AFoBJ,AHTgB,AeTL,QZkBP,EEpBA,EUEa,CVFV,AFoBE,GEpBC,EDSE,ACTF,CAAA,CDSI,CWPG,CAAA,CXOA,ACTP,EAAN,EDSiB,CAAC,CDWlB,AYlBa,CZkBS,CCXT,AWPN,CXOe,AWPf,CXOgB,ADWvB,CCXwB,ADW5B,ECXiB,ADWe,CCX1B;AACA,ACTJ,AFoBA,AHVc,GDF2D,CAAA,MMRzE,ELUoB,CGUb,CCXH,ACTA,EDSE,CAAC,ACTW,CFoBN,CHVe,CKVN,ALUO,CKVN,ELUF,CAAY,CKVd,CAAS,EDSvB,CAAe,ACTD,CDSd,ACT2B,ALUO,CAAC,CIDjB,CAAlB,CDWG,CCXkB,ADWI,AHVG,CID5B,AJCwC,EGUrC,CAAP,AHVgC,CKVA,ALUgB,UAAC,CKVlB,EAAY,ALUK,EAAI;AIAjD,ACV6C,AFqBjD,AHX0D,ADA9D,AeVO,CfQR,SeRQ,STA8C,ALUS,AcV9C,GAAG,MdU2C,CAAA,CKVE,ASArC,CTAsC,ASArC,GTAyB,CAAgB,UAAC,ASAnD,CAAwB,EdUmB,AcV3C,CdU+D,AcV3E,GdUuD,CAAA,EKVO,EAAW;ADW1E,ACX+E,ALUC,AeT/E,UAAA,CXCF,AJQgC,CIRhC,AJQoB,CAAN,CAAA,AeTR,GAAG,EAAA,CAAA,CVDuE,GUCvE,EAAP,KVDwF,CAAC,IAAX;ADW9E,ACX6F,AFuBjG,AJeF,AerCM,ACEA,OhBmCN,CIfQ,AJeR,CKrCE,CAAA,AUAI,ACEA,CZoBK,EEvByC,CAAA,AFuBtC,CWtBH,GAAG,CXsBK,GYpBD,ChBmClB,EgBnC+B,ChBmC/B,EIfc,CAAe,GAAf,EAAoB,CWtBpB,KXsBA,CAA2B,AJezC,UIf0C,GAAD,EAAM,CAAN,EAAO;ACX7C,ACZiG,AFuB/C,AWtB/B,ACGpB,OXJF,ICAsB,CAAlB,ASCkB,ACGpB,CZmBmD,GAAG,GAAG,AYnBlD,EDHuB,ACGrB,CDHsB,GXsBgC,AYpBlC,CZoBmC,KWtB5C,GAAuB,CXsBc,CAAiB,AWtBtD,CXsBqC,CAAN;ACRrD,ACZM,AFoBwE,AHbxE,ADER,AeXmD,ACI/C,IhBOE,CIWU,EAAkE,CAAlE,CAAZ,CEpBI,ALOA,CcTA,CCIJ,CXUF,CAAA,KJLe,GAAG,EAAA,CKPG,ALOH,CeLF,EVFsC,AUEpC,CVDhB,ALMgB,EAAZ,ADEyB,GAAG,SAA9B,CgBPc,CAAA,KVDhB,CAAA,CUCgB,CAAe,KAFF,YhBSG,CAClC,GMVsD,CAAhD,CNS4B,EAElC,QAFkC,EAGlC,KAHkC,EAIlC,GAJkC,EAInB;AKDf,ACTA,AFkBE,AHbW,ADKE,AgBVb,SZkBK,AJRQ,CMVf,EUAE,KfKW,CAAA,ADKE,CAAA,GgBVH,EhBUG,AgBVD,CVAC,AFkBb,CElBc,AFkBQ,AJRT,GIQb,EJRa,CAAA,CMVf,AFkB+B,CElBP,ANWvB,EIOC,KJRa,EACP,CMXiB,KAAD,EAAM,INWtB;AKFR,ACTqC,AFoBnC,AHfW,AcRb,ACA+B,QXYxB,EUZP,CXuBS,AYvBH,CXYN,ACTqC,CDSrC,CDWE,CWvBG,CTGoC,GAAG,ASD5C,KTCiD,CAAC,IAAD,CAAZ;AAAoB,AFqBxD,AHhBY,AeFb,GZSO,OYTP,CVHA,CLKmB,MeFX,CfEkB,AeFjB,CfEkB,GAAR,CAAY,UAAU,CAAC,AeF1C,CAA0B,GfEK,CAAgB,GAAhB,CAAoB,EeFzB,CAAA,OfE0B,AeF1B,CAAS,EfEgB,EAAI,QeFvD,EAAkD,UAAC,CAAD,EAAyB;AVApE,ALGL,AcNF,ACIE,GXdyC,CAAA,MUU3C,ECIE,KVDK,CAAA,CLGE,AcNC,CAAC,GCIT,CAAA,EfEc,CAAC,GAAR,CAAY,AcNrB,ACIE,CDJqB,ACIN,CAAC,CAAC,GfEQ,CAAC,EcNL,ACIrB,CDJqB,CdMF,AeFM,CfEM,GAAZ,CAAgB,CcNd,EAAvB,CCIE,EADyE,CAE3E,GfCsC,GAAD,EAAM,CAAN,EAAO;AII7C,ACPQ,AFoBP,AHhBI,ADKI,AeTF,ACGL,CXhBH,CDiCE,MAAA,CAAA,CWpBM,CCAN,EDAS,GAAG,CfSJ,CCLA,ADKA,GCLG,AcJM,CdIL,AcJM,CXoBlB,CAAW,EHhBH,AcJI,CAAW,GXoBZ,CAAA,AHhBU,CcJO,CAAC,OXoB7B,AHhBqB,AcJE,CdIF,AcJgB,CXoB1B,KWpBY,EAAX,EdIS,AcHlB,CdG6B,GGgBhC,AWpBY,CACJ,CXmBc,OHhBd,IAAwC,EcHxC,CdG2C,AcH3C,CdG4C,IAAJ,KAAa,OcHrD,CAAkB,CdGmC,CAAA,GcHrD,CADI,EAET,KAFS,CdIiD,AcFpD,CdEiE,AcJ9D,EdIR,AcFQ,EdEkE,GcF7D,CAAC,UAFN,CAAN,EAIN;ATJO,ALKD,ADIE,AgBJR,SZeA,GEpBa,KUKb,CAAA,KVLa,CAAA,AFoBb,OEpBa,CAAe,IAAf,CAAN,CAAA;ADST,ADWE,AHdM,ADGE,AeJR,ACAA,OXIF,CAAA,EDWE,EJXc,GKAhB,ADWE,EJXmB,AeJnB,CVIa,ADWb,AJXuB,AeJvB,EdCY,EGcZ,MHdoB,CDGc,ECHX,CIGzB,ELAsC,MCHJ,CAAC,CAAD,CAAT,CAAa,IAAb,CAAkB,CDGlB,GCHA,ADG8B,CCHP,QDGO,CAAA,CCHN,CAAD,EAAE,GDGzB,GAAqC,SAArC,GAA+C,KAAK,CAAC,EAArD,GAAuD,GAAvD,GAA2D,QAAQ,CAAC,EAApE,GAAsE,OAAtE,GAA8E,KAA9E,GAAmF,GAAnF,GAAuF,GAA3F,CAAX,CAAA;ACH6C,AcDrD,ACAA,YAAM,WAAA,CAAA,CfC+C,CAAC,CAAC,IAAF,AeD/C,CAAe,IfC2C,QeD1D,CfC0D,CAAA,AeD7B,SAA7B,CAAN,CAAA,efCqD;AKPrD,AFsBE,AHfwF,AcD1F,YAAM,CXgBG,IHfc,CGeT,AHfR,CcDO,CAAC,GAAR,CAAY,GAAG,CAAC,GAAJ,CAAQ,EXgBjB,CAAsB,MAAtB,CAA6B,AWhBL,CAAP,EAAQ,OXgBK,GAAD,EAAM,CAAN,EAAS,CAAT,EAAU;AErBhD,AFqBqD,AHd/C,ADEN,AeJkC,eXgBmB,EErBrD,ANSA,CMTA,AFqBwD,AJZxD,CeJkC,CdEtB,CGc+C,IHd1C,CGc8C,CAAC,CHd5C,AcFc,CAAA,KdER,AcFQ,CdEP,CcFO,KAAA,CdEd,AcFc,CdEC,CGcwB,AWhBzB,CXgBgD,CAAvB,CAAN,EWhBnB,CAAA,CdEU,CAAC,AcFX,MdEC,CAAiB,KcFlB,CdEd,EAAwC,IAAxC,CAA6C,UAAC,EAAD,EAAY;AKP7E,AFqBoF,AJZpF,AeJkC,ACAlC,OZgBS,EAA6E,CAA7E,AYhBT,CZgBE,CYhBF,CAAA,IAAA,IDAkC,CdEiC,IAAA,GAAA,EAAA,CAAA,AcFjC,CdEiC,AcFjC,IAAA,EAAA,UAAA,EAAA,EAAA;ATLlC,AFsBC,AJbD,KIWsB,OEpBf,ANSC,EMTD,ANSC,CMTD,ANSC,IMTD,ANSC,EMTR,ANSO,CMTP,ALOyE,ADE6C,GCF7C,CDElE,ECFkE,ADEzE,CAAA,CCFyE,CAAA,CAAA;AAAS,oBGa5D,KHb4D,GAAG,CAAC,KAAJ,KAAc,SAAA,CAAA,YAAd;AAA0B,AcFrE,iBdEnB,CAAd,ScFiC,CAAA;AXejB,AHXhB,AcJiC,GTjBpB,AFgCnB,AJbe,CMnBI,ANmBJ,mBCEF,SAAA,CAAA,2BAAA,CAA4B,GAA5B,EAAiC,GAAjC,EAAsC,QAAS,CAAC,EAAhD,EAAoD,KAAM,CAAC,CAAD,CAA1D,CAAP;AKRP,AF6BC,AHpBK,ADAN,AeLwC,CTjBzC,ANeA,CI2BE,MAAA,CAAA,aWzB6C,CXyB7C,AWzB8C,CXyBnC,AWzBoC,MXyBpC,CAAA,AWzBkC,EAAN,CAAA,MXyBvC,EAAW,MAAX,EAAe;AANf;AErBF,ALQM,ADmBJ,GgBzCW,CAAA,GVcb,AN2BE,CM3BF,AN2BE,OM3BF,GAAe,GLQF,SKRb,ALQa,CAAA,IDmBX,GAAA,QCnBW,CAAgB,GAAhB,EAAqB,GAArB,CAAP,SDmBJ;AClBG,AcPoC,ACCxC,CAjBD,YfcuB,CAAZ,CAAP,YcEqC,CAAA;AdQtC,ADDH,AePyC,IfOnC,OCV2B,CAAZ,CAAN,CAAA,CDUE,GAAG,SAAd,WAAc,GAAA;AAAA,AePqB,ACGzC,IAAI,KhBIgB,SAAA,CAAA,GePqB,EfOrB,AePqB,CAAA,CfOrB,GePqB,EfOrB,AePqB,CfOrB,AePqB,EfOX,OAAV,EAAiB,YAAA;;ACV7B,SG4BN,CH5BM,IAAI,CcGwB,CAAA,CdHrB,EAAA,CAAA,IG4Bb,AH5Ba,EAAP;AG4BN,AHfA,UGeA,GWzBkC,CAAA,CXyBlC,EHfA,CGeA,AHfA,IGeA;AHfA,ADFc,AeR0C,WAAtC,CAAZ,CAAN,CAEA,GfMc,CAAA;AIkBZ,AHhBF,ADFc,AeRd,UX0BM,CW1BN,CdUO,GGgBI,KAAT,EAAgB;AACd,AHhBF,ADHY,YCGZ,ADHkB,GImBT,EJnBc,CAAI,EImBb,EHhBJ,EAAA,CGgBR,IJnBoC,KCEjC,ADFmC,SAAb,GAAuB,SAAA,CAAA,OAAvB,GAA8B,SAAlC,CAAX,CAAA;AIoBX,AHhBD,YAAA,MAAM,EAAA,MAFD;AAGL,AcdF,YdcE,IAAI,EAAA,IAHC;AGoBL,AHhBA,ADNK,AeRP,MX8BE,IW9BF,EdcE,AcdF,CAAA,EX8BE,CAAA,CJtBK,AeRP,CfQ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","file":"pages.77de5100.js","sourceRoot":"..\\src\\app\\pages","sourcesContent":["/* eslint-disable no-unused-vars */\r\nenum AppEvent {\r\n    UPDATE_STATE = 'updateState',\r\n}\r\n\r\nexport default AppEvent\r\n","/* eslint-disable no-unused-vars */\r\nenum TableSelection {\r\n    TOTAL = 'Total',\r\n    A_SIDES = 'A-Sides',\r\n    COLLECTIBLES = 'Collectibles',\r\n    B_SIDES = 'B-Sides',\r\n    C_SIDES = 'C-Sides',\r\n}\r\n\r\nexport default TableSelection\r\n","/* eslint-disable no-unused-vars */\r\nimport SpeedrunId from '../models/SpeedrunId'\r\n\r\nconst GAME_ID: SpeedrunId = 'o1y9j9v6'\r\nconst GAME_NAME = 'Celeste'\r\n\r\nconst COLLECTIBLES_VARIABLE_NAME = 'Full Clear / ARB / HC'\r\nconst FC_RUN_VALUE = 'Full Clear'\r\n\r\nenum Categories {\r\n    A_SIDES = 'Clear',\r\n    COLLECTIBLES = 'Collectibles',\r\n    B_SIDES = 'B-Side',\r\n    C_SIDES = 'C-Side',\r\n}\r\n\r\nenum ChapterNames {\r\n    C1 = 'Forsaken City',\r\n    C2 = 'Old Site',\r\n    C3 = 'Celestial Resort',\r\n    C4 = 'Golden Ridge',\r\n    C5 = 'Mirror Temple',\r\n    C6 = 'Reflection',\r\n    C7 = 'The Summit',\r\n    C8 = 'Core',\r\n    C9 = 'Farewell',\r\n}\r\n\r\nexport { GAME_ID, GAME_NAME, COLLECTIBLES_VARIABLE_NAME, FC_RUN_VALUE, Categories, ChapterNames }\r\n","import { GAME_ID } from './constants/celeste'\r\nimport SpeedrunApiResponse from './models/SpeedrunApiResponse'\r\nimport SpeedrunCategory from './models/SpeedrunCategory'\r\nimport SpeedrunId from './models/SpeedrunId'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\nimport SpeedrunLevel from './models/SpeedrunLevel'\r\nimport SpeedrunUser from './models/SpeedrunUser'\r\nimport SpeedrunVariable from './models/SpeedrunVariable'\r\n\r\nconst HREF = 'www.speedrun.com'\r\nconst API_VERSION = 'v1'\r\n\r\nconst getBasePath = () => {\r\n  return `https://${HREF}/api/${API_VERSION}`\r\n}\r\n\r\nconst fetchLevelBoard = async (level: SpeedrunLevel, category: SpeedrunCategory): Promise<SpeedrunApiResponse<SpeedrunLeaderboard>> => {\r\n  return (await fetch(`${getBasePath()}/leaderboards/${GAME_ID}/level/${level.id}/${category.id}`)).json()\r\n}\r\n\r\nconst fetchLevelBoardWithVariable = async (\r\n  level: SpeedrunLevel,\r\n  category: SpeedrunCategory,\r\n  varId: SpeedrunId,\r\n  val: SpeedrunId\r\n): Promise<SpeedrunApiResponse<SpeedrunLeaderboard>> => {\r\n  return (await fetch(`${getBasePath()}/leaderboards/${GAME_ID}/level/${level.id}/${category.id}?var-${varId}=${val}`)).json()\r\n}\r\n\r\nconst fetchLevels = async (): Promise<SpeedrunApiResponse<SpeedrunLevel[]>> => {\r\n  return await (await fetch(`${getBasePath()}/games/${GAME_ID}/levels`)).json()\r\n}\r\n\r\nconst fetchLevelCategories = async (level: SpeedrunLevel): Promise<SpeedrunApiResponse<SpeedrunCategory[]>> => {\r\n  return await (await fetch(`${getBasePath()}/levels/${level.id}/categories`)).json()\r\n}\r\n\r\nconst fetchLevelVariables = async (level: SpeedrunLevel): Promise<SpeedrunApiResponse<SpeedrunVariable[]>> => {\r\n  return await (await fetch(`${getBasePath()}/levels/${level.id}/variables`)).json()\r\n}\r\n\r\nconst fetchUser = async (user: SpeedrunId): Promise<SpeedrunApiResponse<SpeedrunUser>> => {\r\n  return await (await fetch(`${getBasePath()}/users/${user}`)).json()\r\n}\r\n\r\nexport {\r\n  fetchLevelBoard,\r\n  fetchLevelBoardWithVariable,\r\n  fetchLevels,\r\n  fetchLevelCategories,\r\n  fetchLevelVariables,\r\n  fetchUser\r\n}\r\n","import SpeedrunApiResponse from './models/SpeedrunApiResponse'\r\nimport SpeedrunCategory from './models/SpeedrunCategory'\r\nimport SpeedrunLevel from './models/SpeedrunLevel'\r\nimport SpeedrunVariable from './models/SpeedrunVariable'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\nimport { fetchLevelCategories, fetchLevelBoard, fetchLevels, fetchLevelVariables, fetchLevelBoardWithVariable } from './wrapper'\r\nimport { Categories, ChapterNames, COLLECTIBLES_VARIABLE_NAME, FC_RUN_VALUE } from './constants/celeste'\r\n\r\ninterface RawDataCollection {\r\n    categories: SpeedrunApiResponse<SpeedrunCategory[]>,\r\n    levels: SpeedrunApiResponse<SpeedrunLevel[]>,\r\n    grid: SpeedrunApiResponse<SpeedrunLeaderboard>[][],\r\n    variables: SpeedrunApiResponse<SpeedrunVariable[]>[]\r\n}\r\n\r\nconst getRawLeaderboardData = async (): Promise<RawDataCollection> => {\r\n  const levels = await fetchLevels()\r\n  const categories = (await fetchLevelCategories(levels.data[0]))\r\n  const variables = await Promise.all(levels.data.map((lvl) => fetchLevelVariables(lvl)))\r\n  const grid = await Promise.all(categories.data.map((cat) => {\r\n    return Promise.all(levels.data.map((lvl, i) => {\r\n      if (cat.name === Categories.COLLECTIBLES && lvl.name !== ChapterNames.C9) {\r\n        // find the 2 relevant IDs based on variable name and run value label\r\n        const variable = variables[i].data.find((x) => x.name === COLLECTIBLES_VARIABLE_NAME)\r\n        const value = Object.entries(variable!.values.values).find(([_key, val]) => val.label === FC_RUN_VALUE)\r\n\r\n        return fetchLevelBoardWithVariable(lvl, cat, variable!.id, value![0])\r\n      }\r\n      return fetchLevelBoard(lvl, cat)\r\n    }))\r\n  }))\r\n\r\n  return {\r\n    categories,\r\n    levels,\r\n    grid,\r\n    variables\r\n  }\r\n}\r\n\r\nexport { getRawLeaderboardData }\r\n","import LevelGrid from './models/LevelGrid'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\n\r\n/** function that transforms a LevelGrid in some way */\r\ntype gridTransformationFunction = (grid: LevelGrid) => LevelGrid;\r\n\r\n/** returns a gridTransformationFunction, using the given callback function in grid.map */\r\nconst getGridMapTransformation = (func: (levelColumn: SpeedrunLeaderboard[], i: number) => SpeedrunLeaderboard[]): gridTransformationFunction => {\r\n  return (grid: LevelGrid): LevelGrid => {\r\n    return grid.map((levelColumn, i) => func(levelColumn, i))\r\n  }\r\n}\r\n\r\nconst removeColumn = (grid: LevelGrid, col: number): LevelGrid => {\r\n  return grid.filter((_, i) => i !== col)\r\n}\r\n\r\nconst removeFarewellObsoletes = (grid: LevelGrid): LevelGrid => {\r\n  const callback = (levelColumn: SpeedrunLeaderboard[], i: number) => {\r\n    if (i === 0) {\r\n      return levelColumn\r\n    }\r\n    return levelColumn.filter((_, i) => i !== 8)\r\n  }\r\n\r\n  return getGridMapTransformation(callback)(grid)\r\n}\r\n\r\nexport { gridTransformationFunction, getGridMapTransformation, removeColumn, removeFarewellObsoletes }\r\n","import SpeedrunRankedRun from '../speedruncom/models/SpeedrunRankedRun'\r\n\r\ntype scoringFunction = (r: SpeedrunRankedRun) => number\r\n\r\nconst eliteScoring = (run: SpeedrunRankedRun): number => {\r\n  if (run.place === 1) { return 100 }\r\n  if (run.place === 2) { return 97 }\r\n  return Math.max(0, 98 - run.place)\r\n}\r\n\r\nexport { scoringFunction, eliteScoring }\r\n","import SpeedrunId from '../../speedruncom/models/SpeedrunId'\r\nimport SpeedrunRankedRun from '../../speedruncom/models/SpeedrunRankedRun'\r\nimport RankingGrid from './RankingGrid'\r\nimport { fetchUser } from '../../speedruncom/wrapper'\r\nimport { eliteScoring, scoringFunction } from '../scoring'\r\n\r\nexport default class Player {\r\n  id: SpeedrunId\r\n  timesPage: RankingGrid\r\n\r\n  private _pointsPerColumn: number[]\r\n  private _name: string | null | undefined = undefined\r\n\r\n  static scoringFn: scoringFunction = eliteScoring\r\n\r\n  constructor (id: SpeedrunId, gridDimensions: number[]) {\r\n    this.id = id\r\n    this.timesPage = gridDimensions.map((colSize) => new Array<SpeedrunRankedRun>(colSize))\r\n    this._pointsPerColumn = gridDimensions.map((_) => 0)\r\n  }\r\n\r\n  /** register run r in the grid at position i, j */\r\n  registerRun (r: SpeedrunRankedRun, i: number, j: number) {\r\n    this.timesPage[i][j] = r\r\n  }\r\n\r\n  public getPointsOfColumn (col: number): number {\r\n    if (this._pointsPerColumn[col]) {\r\n      return this._pointsPerColumn[col]\r\n    }\r\n\r\n    const val = this.timesPage[col].reduce((sum, r) => sum + Player.scoringFn(r), 0)\r\n    this._pointsPerColumn[col] = val\r\n\r\n    return val\r\n  }\r\n\r\n  public get totalPoints () {\r\n    return this._pointsPerColumn.reduce((sum, _, i) => sum + this.getPointsOfColumn(i), 0)\r\n  }\r\n\r\n  /**\r\n   * this getter should be used with caution, preferably when absolutely certain that the name of\r\n   * a player is already loaded\r\n   *\r\n   * otherwise use the async version getName\r\n   */\r\n  public get name () {\r\n    if (this._name) {\r\n      return this._name\r\n    }\r\n\r\n    fetchUser(this.id).then(val => {\r\n      const n = val.data.names.international\r\n      this._name = n\r\n\r\n      return n\r\n    })\r\n\r\n    return ''\r\n  }\r\n\r\n  public async getName () {\r\n    if (this._name) {\r\n      return this._name\r\n    }\r\n\r\n    try {\r\n      const n = await (await fetchUser(this.id)).data.names.international\r\n      this._name = n\r\n    } catch {\r\n      this._name = `UNLOADED: ${this.id}`\r\n    }\r\n\r\n    return this._name\r\n  }\r\n}\r\n","import LevelGrid from '../speedruncom/models/LevelGrid'\r\nimport SpeedrunId from '../speedruncom/models/SpeedrunId'\r\nimport Player from './models/Player'\r\n\r\nconst buildPlayerMap = async (grid: LevelGrid): Promise<Map<SpeedrunId, Player>> => {\r\n  const pMap = new Map<SpeedrunId, Player>()\r\n  const gridDimensions = grid.map((col) => col.length)\r\n\r\n  grid.forEach((levelColumn, i) =>\r\n    levelColumn.forEach((board, j) =>\r\n      board.runs.forEach((r) => {\r\n        const p = r.run.players[0]\r\n\r\n        // skip players without id (deleted users)\r\n        if (p.id) {\r\n          pMap.has(p.id) || pMap.set(p.id, new Player(p.id, gridDimensions))\r\n          const pl = pMap.get(p.id)!\r\n          pl.registerRun(r, i, j)\r\n        }\r\n      })\r\n    )\r\n  )\r\n\r\n  return pMap\r\n}\r\n\r\nexport default buildPlayerMap\r\n","import { getRawLeaderboardData } from '../speedruncom/get-data'\r\nimport { gridTransformationFunction, removeFarewellObsoletes } from '../speedruncom/grid-transformation'\r\nimport LevelGrid from '../speedruncom/models/LevelGrid'\r\nimport buildPlayerMap from './build-map'\r\n\r\nconst getPlayerMap = async () => {\r\n  // fetch data\r\n  const raw = await getRawLeaderboardData()\r\n  let grid: LevelGrid = raw.grid.map((categoryRow) => categoryRow.map((levelBoard) => levelBoard.data))\r\n\r\n  // transform grid\r\n  const transformations: gridTransformationFunction[] = [\r\n    removeFarewellObsoletes\r\n  ]\r\n  transformations.forEach((tFunc) => { grid = tFunc(grid) })\r\n\r\n  // build and return player map\r\n  return await buildPlayerMap(grid)\r\n}\r\n\r\nexport default getPlayerMap\r\n","import Player from '../../../modules/rankings/models/Player'\r\nimport TableSelection from '../../models/TableSelection'\r\n\r\nconst getPointsGetter = (sel: TableSelection) => {\r\n  switch (sel) {\r\n    case TableSelection.TOTAL:\r\n      return (p: Player) => p.totalPoints\r\n\r\n    case TableSelection.A_SIDES:\r\n      return (p: Player) => p.getPointsOfColumn(0)\r\n\r\n    case TableSelection.COLLECTIBLES:\r\n      return (p: Player) => p.getPointsOfColumn(1)\r\n\r\n    case TableSelection.B_SIDES:\r\n      return (p: Player) => p.getPointsOfColumn(2)\r\n\r\n    case TableSelection.C_SIDES:\r\n      return (p: Player) => p.getPointsOfColumn(3)\r\n\r\n    default:\r\n      return (p: Player) => p.totalPoints\r\n  }\r\n}\r\n\r\nexport default getPointsGetter\r\n","/**\r\n * collection of functions to help transform the player array based on user input\r\n */\r\n\r\nimport Player from '../../../modules/rankings/models/Player'\r\nimport AppState from '../../states/AppState'\r\nimport getPointsGetter from './points-getter'\r\n\r\nconst getSorterFunction = (s: AppState) => {\r\n  const getter = getPointsGetter(s.tableSelection)\r\n  return (a: Player, b: Player) => getter(b) - getter(a)\r\n}\r\n\r\nexport { getSorterFunction }\r\n","import AppEvent from '../../models/AppEvent'\r\nimport AppState from '../../states/AppState'\r\nimport TableSelection from '../../models/TableSelection'\r\n\r\nconst getCallback = (s: AppState, type: TableSelection) => {\r\n  return () => {\r\n    s.tableSelection = type\r\n    document.dispatchEvent(new CustomEvent<AppState>(AppEvent.UPDATE_STATE, { detail: s }))\r\n  }\r\n}\r\n\r\nconst getButton = (s: AppState, type: TableSelection) => {\r\n  const btn = document.createElement('button')\r\n  btn.innerHTML = type\r\n  btn.disabled = (type === s.tableSelection)\r\n  btn.addEventListener('click', getCallback(s, type))\r\n  return btn\r\n}\r\n\r\nconst getControlButtons = (s: AppState) => {\r\n  const l = document.createElement('li')\r\n  l.classList.add('control-buttons')\r\n\r\n  const selections = [\r\n    TableSelection.TOTAL,\r\n    TableSelection.A_SIDES,\r\n    TableSelection.COLLECTIBLES,\r\n    TableSelection.B_SIDES,\r\n    TableSelection.C_SIDES\r\n  ]\r\n\r\n  for (const type of selections) {\r\n    l.appendChild(getButton(s, type))\r\n  }\r\n\r\n  return l\r\n}\r\n\r\nexport default getControlButtons\r\n","const htmlToElement = (html: string): Node => {\r\n  const template = document.createElement('template')\r\n  html = html.trim()\r\n  template.innerHTML = html\r\n  return template.content.firstChild as Node\r\n}\r\n\r\nexport default htmlToElement\r\n","const getMiniText = (content: string) => {\r\n  const x = document.createElement('span')\r\n  x.classList.add('mini-text')\r\n  x.innerHTML = content\r\n  return x\r\n}\r\n\r\nconst getMiniTextString = (content: string) => {\r\n  const x = document.createElement('span')\r\n  x.classList.add('mini-text')\r\n  x.innerHTML = content\r\n  return `<span class=\"mini-text\">${content}</span>`\r\n}\r\n\r\nconst getPts = (asString: boolean = false) => {\r\n  return asString ? getMiniTextString('pts') : getMiniText('pts')\r\n}\r\n\r\nconst getMs = (ms: string, asString: boolean = false) => {\r\n  return asString ? getMiniTextString(ms) : getMiniText(ms)\r\n}\r\n\r\nconst getOrdinal = (n: number, asString: boolean = false) => {\r\n  // taken from https://stackoverflow.com/a/39466341\r\n  const nth = (x: number) => { return ['st', 'nd', 'rd'][((x + 90) % 100 - 10) % 10 - 1] || 'th' }\r\n  const ordinal = nth(n)\r\n\r\n  return asString ? getMiniTextString(ordinal) : getMiniText(ordinal)\r\n}\r\n\r\nexport { getMiniText, getPts, getMs, getOrdinal }\r\n","import Player from '../../../modules/rankings/models/Player'\r\nimport AppState from '../../states/AppState'\r\nimport htmlToElement from '../util/html-helper'\r\nimport getPointsGetter from '../util/points-getter'\r\nimport { getPts } from './subtexts'\r\n\r\nconst getTableElement = (\r\n  place: string | number,\r\n  player: Player,\r\n  points: string | number\r\n) => {\r\n  const ele = htmlToElement(`\r\n        <tr class=\"hover-highlight\">\r\n            <td class=\"bold\">${place}</td>\r\n            <td>${player.name}</td>\r\n            <td>${points} ${getPts(true)}</td>\r\n        </tr>\r\n    `)\r\n  ele.addEventListener('click', () => {\r\n    window.open(`./player.html?player=${player.id}`, '_blank')!.focus()\r\n  })\r\n  return ele\r\n}\r\n\r\nconst getTableHeader = (\r\n  place: string,\r\n  name: string,\r\n  points: string\r\n) => {\r\n  return htmlToElement(`\r\n        <tr>\r\n            <th>${place}</th>\r\n            <th>${name}</th>\r\n            <th>${points}</th>\r\n        </tr>\r\n    `)\r\n}\r\n\r\nconst getLeaderboardTable = (s: AppState, arr: Player[]) => {\r\n  const t = document.createElement('table')\r\n  const getter = getPointsGetter(s.tableSelection)\r\n  t.classList.add('leaderboard-table')\r\n\r\n  const head = getTableHeader('Place', 'Name', 'Points') as HTMLElement\r\n  t.appendChild(head)\r\n\r\n  arr.forEach((p, i) => t.appendChild(getTableElement(\r\n    i + 1,\r\n    p,\r\n    getter(p)\r\n  )))\r\n\r\n  return t\r\n}\r\n\r\nexport default getLeaderboardTable\r\n","import AppEvent from '../../models/AppEvent'\r\nimport AppState from '../../states/AppState'\r\n\r\nconst getLoadMoreButton = (s: AppState, max: number) => {\r\n  if (s.tableState >= max) {\r\n    return document.createElement('div')\r\n  }\r\n\r\n  const d = document.createElement('div')\r\n  d.classList.add('center')\r\n\r\n  const btn = document.createElement('button')\r\n  btn.innerHTML = 'Load 50 more ...'\r\n\r\n  btn.addEventListener('click', () => {\r\n    s.tableState = (s.tableState + 50)\r\n    document.dispatchEvent(new CustomEvent<AppState>(AppEvent.UPDATE_STATE, { detail: s }))\r\n  })\r\n\r\n  d.appendChild(btn)\r\n  return d\r\n}\r\n\r\nexport default getLoadMoreButton\r\n","import htmlToElement from '../util/html-helper'\r\n\r\nconst getLoader = () => {\r\n  return htmlToElement('<div class=\"loader center\">Loading...</div>')\r\n}\r\n\r\nexport default getLoader\r\n","import AppState from '../../states/AppState'\r\nimport { getSorterFunction } from '../util/array-helper'\r\nimport getControlButtons from './control-buttons'\r\nimport getLeaderboardTable from './leaderboard-table'\r\nimport getLoadMoreButton from './load-more-button'\r\nimport getLoader from './loader'\r\n\r\nconst renderMainPage = async (state: AppState, id: string): Promise<void> => {\r\n  const container = document.getElementById(id)\r\n  const reset = () => { container!.innerHTML = '' }\r\n\r\n  reset()\r\n\r\n  // add loader as arranging array might include loading player names\r\n  container!.appendChild(getLoader())\r\n\r\n  // arrange data based on state\r\n  const arr = Array.from(state.players.values())\r\n    .sort(getSorterFunction(state))\r\n    .slice(0, state.tableState)\r\n\r\n  // load all names\r\n  await Promise.all(arr.map(async (p) => await p.getName()))\r\n\r\n  // remove loader again\r\n  reset()\r\n\r\n  // render dynamic container based on state\r\n  container!.appendChild(getControlButtons(state))\r\n  container!.appendChild(getLeaderboardTable(state, arr))\r\n  container!.appendChild(getLoadMoreButton(state, state.players.size))\r\n}\r\n\r\nexport default renderMainPage\r\n","import AppState from '../states/AppState'\r\nimport AppEvent from '../models/AppEvent'\r\nimport TableSelection from '../models/TableSelection'\r\nimport getPlayerMap from '../../modules/rankings/get-map'\r\nimport renderMainPage from '../ui/components/main-page'\r\n\r\nconst main = async () => {\r\n  const CONTAINER = 'dynamic-container'\r\n\r\n  const pMap = await getPlayerMap()\r\n\r\n  const initialState: AppState = {\r\n    players: pMap,\r\n    tableSelection: TableSelection.TOTAL,\r\n    tableState: 100\r\n  }\r\n\r\n  document.addEventListener(AppEvent.UPDATE_STATE, ((e: CustomEvent<AppState>) => {\r\n    renderMainPage(e.detail, CONTAINER)\r\n  // eslint-disable-next-line no-undef\r\n  }) as EventListener)\r\n\r\n  await renderMainPage(initialState, CONTAINER)\r\n}\r\n\r\nmain()\r\n"]}