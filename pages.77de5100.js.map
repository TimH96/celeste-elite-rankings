{"version":3,"sources":["../states/AppState.ts","../models/AppEvent.ts","../models/TableSelection.ts","../../modules/speedruncom/constants/celeste.ts","../../modules/speedruncom/wrapper.ts","../../modules/speedruncom/get-data.ts","../../modules/speedruncom/grid-transformation.ts","../../modules/rankings/models/Player.ts","../../modules/rankings/scoring.ts","../../modules/rankings/build-map.ts","../../modules/rankings/get-map.ts","../ui/util/points-getter.ts","../ui/util/array-helper.ts","../ui/components/control-buttons.ts","../ui/util/html-helper.ts","../ui/components/subtexts.ts","../ui/components/leaderboard-table.ts","../ui/components/load-more-button.ts","../ui/components/loader.ts","../ui/components/main-page.ts","index.ts"],"names":[],"mappings":";AYAA;;;;AXAA,ACAA;ACGA,AGGA,ANHA,AkBHA,AJAA,IXGM,AHAM,AkBHN,AJAA,OXGO,EeHE,CfGa,EeHV,CJAC,EdGnB,CcHsB,IXGtB,CeHM,IJAA,KIAY,GAAA,KJAI,CAAC,IAAD,EAAa;ANInC,AL6BE,AFhCF,ACAA,AaDA,ADCE,INGI,APHD,ACAA,AaDC,EDCE,CXgCN,CAAA,IFhCF,EaAgB,CXgCd,AYjCe,CPIC,CMHC,CXgCjB,ADhCF,AaDoB,CPIC,ML6BnB,AWhCyB,CAAC,CCDtB,CPIA,UOJc,CAAC,ADCF,CNGE,AMHqB,CNGpB,GAAD,EAAuB,AOJxB,EAAgB,EDCjB,CAAjB;ANIA,ALDF,AGGA,ANJA,AeFE,ADCA,CdCF,CcDE,EXEI,AGGA,EEFA,AOJE,ADCF,CCDG,EPIA,AMHA,CNGC,AOJE,CfEA,EGCG,AWFF,CAAC,CNGR,CLDY,EYHE,ADCX,CCDY,CPID,AMHlB,CNGA,EAAqB,ELDvB,CHDA,EMI8B,ANJH,GMIM,CSNrB,CAAuB,MAAvB,CTMN,ASNJ,wBTM+B,CAAC,IAAD,EAA+E;AEFvF,AL6BvB,AG1BA,ALPF,ACAA,AFGI,AkBHF,AHCA,ADCA,CbFF,ACAA,CFGI,AeFF,ADCA,CCDC,CAAC,EGDI,CfiCN,AejCO,CfiCP,CG1BO,CYPG,AJEF,CNEsB,APJ3B,ACAA,AYEM,ECDT,CPGuB,AOHX,GZgCZ,AH9BE,AeFF,CfEE,AkBHgB,AHCF,CTMR,ALPV,AiBAqB,CfiCnB,AW/BA,CbFW,EKOJ,AQLc,ERKE,AJPzB,EAAmB,AYEjB,EX+BA,AYhCA,GGDU,ClBGR,AkBH+B,ClBG/B,IkBHQ,CAAV,ElBGE,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AQCiC,ALCrC,AGGI,ALPA,ACAA,AFGA,AeFF,AHEF,AEDE,EbFE,ACAA,AFGA,AeFF,CAAC,CZGG,AYHF,AHEJ,KEDS,CbFL,CKOO,ALPP,EcCF,CHEF,CNIe,CAAC,AJPZ,AaCY,CbDZ,AFGA,AYAJ,AEDiB,CdCb,AcDc,CRKP,CAAS,GSNlB,CbDE,AUGJ,CXHI,ACAA,AUGJ,AEDS,CbFL,AaEsB,EZFtB,CDAA,CEI4B,AGGX,GHHc,AHD/B,CAAA,CEHA,CYEF,KRKkB,CLPhB,CKO8B,ANJ9B,CMIgB,ANJhB,EMI+B,CNJ/B,CAAA,AYAJ,CZAI,AYAJ,GZAI,IGCJ,KHDI;AG8BF,AG1BsC,ALNvC,ACAG,AFGH,AkBJC,AHEA,ADCD,CbJD,ADEA,AcHA,CZGI,CDFC,ADEO,AkBDV,EAAA,EfiCA,CAAA,AejCA,CAAC,AHEM,CGFL,AHEF,CdHW,EKQ2B,GLRnC,ACED,CIMwC,AJNxC,CIMyC,ANNlB,CkBDzB,ElBCU,AkBDE,GjBDD,AiBCX,CAAe,ChBCb,CDFS,ACET,CFAQ,CMMgC,ALR/B,ADED,CCFZ,ACEI,AgBDF,CZOwD,AYPzC,CZO2B,CAAJ,AYPtC,CfiCA,CejCmB,CAAC,CfiCpB,EDhCE,KFAQ,AkBDS,EAAW,GlBCpB,KkBDS,CAAnB,ClBCU,CAAA,MGgCV,SHhCU,GAAe,EAAf,CAAZ;AQGE,ALCF,AGE4D,AJLxD,AWJJ,AGCA,ACDA,AFKC,AHCD,CGNA,CbII,ECGE,AUPN,AGCA,ACDA,ALMA,CNGW,CEHL,AFGF,GEHK,CAAC,IKNV,AGCA,ACDA,CTMM,CLCY,ADHd,CAAA,AWJJ,AGCA,ACDA,EdOqB,ASDrB,CJAoB,CAAlB,CIAF,CJAuB,CQLvB,CAAA,IJKA,CAAA,CTCA,ADHI,CAAA,AWJJ,AIAA,CJAA,AIAA,EfII,KWJJ,AIAA,CJAA,AIAA,MLMA,CILA,AJKA,CVFI,AcHJ,eHDA,AIAA,CJAA,AIAA,CJAA,AIAA;ATMyB,AL8BvB,AG1BC,ALLH,ACAI,AFCH,AkBHC,AJIF,AHNA,ETII,AgBFF,CZKA,AYLC,CAAC,APFJ,GRmCE,AF/BF,AaEA,CX6BE,AF/BF,AaEA,GNDgC,EAAP,AUHvB,EjBEF,AaEA,CZFI,AgBFY,ChBEZ,CDAW,AaEA,EX6Bb,AQnCF,GRmCE,AQnCF,GVIA,ACAI,CAAA,EgBFF,ChBEE,CYEJ,IX6BE,GQnCF,CTII,ASJJ,OAAA,CAAA,6BAAA,CAAA,CAAA;AHKoC,ALEpC,AGGC,AJLG,AWJJ,AGAA,ACCA,ACCE,AH0BO,AHtBT,CNDA,CJDI,ECEE,AUNN,AGAA,ACCM,ALKA,GGsBG,CAAA,CG1BA,CAAP,IFFF,EdII,CCEe,ADFf,AcJJ,ED4BS,CZtBa,AUNtB,CICuB,ALKA,CGsBd,CF5BT,CIC0B,ALKA,EVFtB,CAAA,GAAA,EcJJ,CAAA,ACCM,AF2BG,AHtBH,ITAN,CUNA,CXII,AWJJ,CGAA,CAAA,KHAA,CAAA,GIC0B,ALKA,CKLC,ALKA,CKLD,ALKA,EKLc,ALKF,GKLZ,EAAyB,KDDnD,CAAA,CAAA,UHAA,CAAA,CAAA;AVmCE,AD9BD,AeHC,ACCD,ANIC,ADNF,CTFA,AgBDA,EhBCK,GeGC,ALKA,CT4BJ,AcjCK,ALKA,CT4BL,AcjCM,ALKA,CDNQ,QTFG,CeGb,GdiCJ,CDpCG,AeGiB,CLKhB,CT4BJ,AQlCF,CMCE,AND+B,EMCN,CLKC,ADN5B,EAAoD,MTFjC,CCoCjB,CS5B0B,CVRT,AUQS,EVRT,CAAnB,YUQ4B,CAAgB,KAA1C,EAAiD;AJFjD,ALGF,AGkBqC,AOxBrC,AGDA,ACEI,AFEJ,AHGI,ADNF,IRMI,AUNA,AGDN,ADIM,GTqB+B,CAAA,AMlB3B,CJHD,CGHC,CMCC,ETEE,AGHX,CHGY,CKHG,CDMD,CJHP,AQJT,CRIkB,AKHE,CLGX,ASFU,ALKA,CIPnB,ACEoB,CTEC,AOAE,GAAG,CZGC,CKHD,CKHpB,CVMwB,CKHD,CAAC,EFqBO,CWvB1B,AFEL,CEF4B,ALKf,CJHV,AFqB4B,AUzBrC,AJOmB,CJHjB,AQJF,EHCoB,CAAC,AICV,CdKX,AUNoB,AIChB,EJD8B,CGDlC,CAAA,EHCoB,EAAkC,EEG5B,AHGP,CGHQ,AHGQ,CAAC,CAAC,KGHX,CTqBW,CSrBK,KCJ1C,CAAA,CAAA,AJOmB,CAAf;AJFH,AL8BC,AD7BF,AWJE,AICC,ACCH,AHCE,AHGE,ADNA,CHDJ,KOIQ,CZ8BN,AD7BF,AgBFA,AHCS,CZ8BP,AD7BF,AgBFA,CLFS,AFAA,CIGG,CHGD,IVFX,AgBFA,GhBEe,AgBFA,AHCK,CAAC,EFHZ,ADMG,CAAD,EAAY,CAAZ,ADNF,CAAA,COET,ANIgC,ET2B9B,GAAA,AD7BF,AaDY,CAAuB,AJH1B,CAAe,KIGZ,AJHR,CIGF,aZ8BA;AA3BF,AGEA,AOPI,AGFJ,ADKE,AHEmC,ADL/B,EIGJ,CAAC,CZEG,AGEA,AOPF,AGFJ,ADKI,CFHC,CAAC,OEGJ,AHEmC,ADLxB,CIGC,ETII,CSJhB,CAAgB,CTIG,AUTrB,CHEI,CVKmB,ASAoB,CIP3C,AJO4C,CCLrB,ADKoB,ADL7B,CRKY,ASAW,ADLxB,EAAU,CEAnB,ADK6C,CNE3C,CHFN,AaPA,ADKE,CCLF,KJOuD,CAAC,CAAD,CAAlB,ENEhB,CAAC,IAAD,EAAkB,GAAlB,EAA6B,CUTlD,CAAA;ARc0B,ALqBxB,AGzBA,AOPE,AICF,AFEA,AHCwD,ADL9B,EII1B,CAAC,CFHC,AEGA,CHCA,CKHI,CTUkB,ALqBxB,Ac/BO,CTUiB,ALqBxB,CGzBO,CWNG,EJDA,CPOC,AOPA,AEGX,CTIY,CKRc,CIIZ,AJJa,CAAC,CMEV,CAAC,CTUK,AFJjB,CAAY,EEIK,AORxB,EZ6BA,CUhCE,CAAuB,CVgCzB,AQjC0B,GLQN,AOPS,CPOV,AWNT,CAAuB,CXMV,CEIC,AFJL,EAAK,CWNd,CAAV,GJDyB,CAA0B,EVgCnD,QUhCmD,CAAA,OAAA,CAAS,YAAnC,EAAiD;AVM5E,AGC+B,AOP+C,AGF9E,ACIE,AFEA,AHCC,ADNsC,EMGvC,CAAC,ALAD,CTIG,AaRL,ACII,EJF0E,CFDxE,EIKG,AHCA,ENEsB,CAAC,AOPoD,CIElF,CdIF,AUNsF,AGFtF,ACIc,GXKuB,AUTrC,ACIE,CAAgB,EXKa,IUT/B,CAAA,CCIE,WDJF,CAAA,EDMoC,OAA3B,GAAkC,SAAzC;APDF,AFIwC,AOPoC,AII1E,AFCD,AHCG,CGNJ,ETOS,CEJH,AFIJ,COPyB,CAAvB,AIII,ELEE,CKFC,GAAG,ILEE,GAAG,CKFG,CTDC,ASCA,GTDG,SAApB,CSCQ,ALEK,CKFkB,ALElB,QKFL,CAAZ,MTDwB,CAAC,AIGR,CAAiB,CAAC,CAAC,GJHZ,EAAe,SIGtB,CAAf;AJFF,ALEF,AGEC,AOPE,AGDH,ACKE,ALEE,ADNA,CRKJ,AGAA,CWDE,CJPA,CGEI,CCKD,CAAC,GTDG,AGHA,ERKJ,ASCM,IKFT,GAAgB,CTDR,AQJW,CRIZ,CLET,ASCY,CJHkB,AQJN,AJOb,CTDI,CSCQ,CAAZ,ADNF,CAAA,CCMuB,IIP1B,ELCG,CAAe,EMItB,KNJE,KKDoB,CACtB,KADsB,EAEtB,MAFsB,EAGtB,MAHsB,EAItB,OAJsB,EAID;ARCnB,ALEF,AULD,AGIC,ACCA,AFAF,AHCM,ADNA,CELN,CVUE,AcAA,EFAI,CEAD,CDDG,ACCF,ETFI,CAAC,AQCA,CDCC,AHCA,EJHE,ALEZ,AaDY,AJEA,CJHC,ALEb,AYAa,AJLF,CHGG,CIGC,EJHH,CAAM,ILElB,AcAA,AFAI,CPFQ,ALEZ,AcAqB,ALCA,ADNT,CHGY,AIGF,ADNX,CKIC,AJES,CTDrB,AaDY,AJER,ADNiB,EIKR,CAAC,CEAd,EAA8B,CTF5B,ALEF,AaDY,CAAc,GDCb,EAA0B,KEAT,0DDCP,KAFG,GAEE,mBAFF,GAGhB,MAAM,CAAC,IAHS,GAGL,mBAHK,GAIhB,MAJgB,GAIV,GAJU,GAIN,UAAA,CAAA,MAAA,CAAO,IAAP,CAJM,GAIM,0EAJN,GAKmC,OAAO,CAAC,CAAD,CAL1C,GAK6C,gBAL7C,GAK8D,OAAO,CAAC,CAAD,CAAP,CAAW,OAAX,CAAmB,CAAnB,CAL9D,GAKmF,kCALnF,GAKoH,OAAO,CAAC,CAAD,CAAP,CAAW,OAAX,CAAmB,CAAnB,CALpH,GAKyI,mCALvJ,CAAZ;ARCE,ALCF,AGa6D,AUN7D,ACPE,AFDY,AHEV,ADPsB,ERM1B,AaOA,ECPE,CDOC,ACPA,CDOC,ACPA,AFDU,CTc+C,CAAA,EMZnD,CJFD,CLCT,ASCY,CTDZ,CYDc,CPAD,AIEE,ADPW,CHKZ,ASCZ,ANNyB,CAAC,EHKnB,ASCS,AFDJ,CPAI,AFc2C,AWb1C,CTDV,ASCW,CDOpB,CRRqB,AFcwC,AUNxC,AJNA,CGFP,AHEQ,CGFR,AHEO,CAAjB,CJFqB,ALCzB,AYDc,CPAY,ALC1B,EaOA,CbPA,AcAkB,CDOY,CRRT,CAAW,ASCC,ANNP,CHKO,AFc4B,AKnBf,CMM5C,ANNwB,CAAA,EHKW,IAAI,CAAC,AQQZ,CbP9B,EKDqC,CAAS,CAAC,IAAI,CAAC,CAAL,GAAS,CAAV,KAAgB,CAAC,GAAG,MAAJ,GAAa,CAA7B,IAAkC,CAA3C,CAAL,IAAsD,IAAjE,CAAZ,CAAP;AACD,ALCD,AULF,AGYI,ACPA,AFFY,AHGV,ADR4C,EROhD,CKLA,CKAI,AGYF,ACPA,AFFY,GJLV,GKcI,AJNA,CIMC,AJNA,CTDT,AcAU,AFFI,CZEd,AULa,AIKF,ALCA,CAAC,CIMV,ADTY,AHGH,CCNK,AGYF,AJNN,IGHM,AHGI,CAAC,CTDnB,CAAA,ASCqB,CAAC,CCNlB,ADMiB,CTDrB,AcAE,ALCE,CKDqB,CLCC,GKDG,GdA7B,AULgB,CAAC,ADMgB,CCNjB,CDMmB,CCNL,ADMM,CAAD,CAAF,ECNjB,AGYsB,ACPb,CAA0B,ALCV,CCNS,CDMP,CAAC,CAAD,CIMC,AJNlB,CIMmB,EAA3C,EAAiD,ACPA,CAAA,ODOjD,ACPiD,CAAS,CDOE,KAA5D,MCPuB,EAAiD;ATA3E,ALCC,AGAF,AOLE,AGYC,ACR2E,AFFrC,AHInC,CJRN,CLOE,CaKA,CVLI,EOLE,AIIsE,GJJnE,GVKT,AULY,AIIsE,CdClF,ASCY,CKFwE,CLEtE,CAAC,CAAD,CAAF,ECNQ,CAAC,ADMD,CTDpB,CAAA,ASCsB,CAAC,CAAD,CTDtB,ASCW,CNDgB,GAAG,AMCA,EAAE,CAAC,CTDjC,AULY,ADMoB,CCNG,ADML,GAAQ,CNDlC,CMCoC,CAAC,CAAD,CCN5B,ADMD,CCNX,ADMI,kBND0B,CAAC,IAAD,EAAgB;AHC/C,AGAC,AOLA,AGaA,ACV0E,ALGvE,ADRD,CREJ,CUAE,CVAG,EUAA,AIGsB,ALFvB,CNII,AOLF,AIGF,GDUK,ALfA,GKeP,Cbba,CGKC,COLd,EPKiB,CHLd,AUAa,IAAhB,GFFO,CLOD,AKPC,EREM,GAAA,EAAA,AQFN,CRET,AGKmB,AKPK,CLOJ,WAAD,AKPf,ELOoD,CAArC,EAA8C;AEAzB,AFCpC,AOLF,AGaD,ACVE,AFFD,AHKC,ADRG,CKLN,CHOE,CIAA,EJAG,CAAC,CLIkC,CAAA,AFChC,CAAC,ASJA,IJHI,CLOC,AOLZ,CPKE,EAAa,AOLC,AECD,GAAG,CFDE,EFFR,CAAD,CHM2B,CKJb,AFFJ,CEEK,CLIY,AKJX,SECQ,CAAC,IFDpC,CECmC,CAApB,CPGuB,EOHO,WAAW,CAAC,KAAD,CAAxD;AZyBA,AGpBI,AOLJ,AIIA,AFHD,AHKA,ADT2B,CIE5B,AHNA,CCOE,AIIA,CAAC,CAAC,CJJC,CAAC,CVyBJ,CAAA,KGpBW,EWDX,ANP0B,CMOZ,ANPa,CAAC,CR4B5B,CcrBA,EdqBA,CUzBA,CAAqB,CPKjB,MOLJ,CVyBA,CUzB8B,EFHJ,CAAoB,CAApB,CAAA,MEGe,CAAC,CAAD,EAAI,IAAJ,CAAzC;AVKF,AGCK,AOLH,AGeF,ACXE,ANRgD,IRQ7C,AaWC,GLnBA,EEIG,AIIA,CAAP,EJJA,IVIF,EaWoB,GAAG,SAAjB,cAAiB,CAAC,GAAD,EAA+B;AHdrD,AGeC,ACXD,AFSqB,AHPb,CCZT,AIRA,KD6BQ,CDFc,AHPb,CGOa,AHPb,IISK,EDFQ,CCEL,EDFK,MCEG,ADFH,CCEI,CJTjB,GAAA,SISQ,CAAuB,IAAvB,CAAf,EJTO;ATHT,AGEI,AKRA,CRMJ,QQNS,ERMJ,AGEM,WAAW,CHFtB,AGEuB,EHFN,AQNR,CAAA,GLQE,CAAmB,GKRrB,CAAe,MLQO,CAAD,AKR1B,ELQ8B,CAAJ,EAAK;AHDjC,AGCsC,AOHxC,AGcE,ACVF,AFLA,AJHM,ERMJ,EUFI,AEDA,GCeY,ACVlB,CAAA,CFLW,ECeO,CDfJ,CTI0B,AUWtB,ALlBL,CRMX,AGCuC,CHDvC,AcEF,CDUkB,CAAA,CCVH,CdFb,AGC4C,AUW5B,CbZhB,AGCsC,COHjB,AEDjB,EZGJ,AQNY,CEIY,AGcR,ALlBL,EIGC,AJHS,CKkBL,ADfH,EAAD,CCeZ,CDfyB,CCeT,CHdZ,CGcY,CCVlB,EDUkB,CbZhB,CYHY,EAAsC,CCelC,CAAA,MAAhB,CHdwB,CAAC,AGcT,CHdQ,CGcR,CHdoB,CGcpC,EAAqB;AbXrB,AGA6C,AOF7C,AGaK,ADfoB,AJHC,ERO1B,GGAS,CAAP,AOFI,AEFmB,CFElB,CGaI,CAAC,CHbF,EGaE,EbXZ,AYJyB,CZIzB,AQP0B,CAAC,CKkBf,ALlBgB,CEKV,AGaN,CbXZ,AUFmB,AEFM,CZIzB,AaWY,CAAP,EbXL,CYJyB,CAAA,EAAA,KFEf,CVEV,AUFiC,CFLP,CAAoB,CAApB,CEKhB,AFLgB,CEK1B;AVGA,AGAC,AOFD,AGaE,ADhBuB,AJHuB,ERQhD,AUFA,CPHA,AOGC,CAAC,AEHuB,GJHrB,CKmBI,EAAE,EDhBe,CFGzB,AGaa,CbXb,AUFY,CVEZ,AYLyB,EFGzB,CAAgB,CVEhB,CAAA,AYLyB,CCgBJ,CAAC,CbXtB,YUFA,AGaa,CAAuB,IAAvB,CbXb,AaWE;AbVF,AUDA,AGYE,ADjBgD,EZMlD,IUDM,EGYA,CAAC,CAAC,CAAD,CAAD,EbXN,CAAA,CUDgB,AGYF,GbXd,AUDmB,CVCnB,AUAE,AGWA,EAAkB,CbXpB,AaWqB,CAAC,CAAD,CAAD,CAAM,EAAN,OHXlB,CVAF,AUAE,OAAA,CAAe,KADE,EAEjB,gBAAA,CAAA,OAAA,CAAe,OAFE,EAGjB,gBAAA,CAAA,OAAA,CAAe,YAHE,EAIjB,gBAAA,CAAA,OAAA,CAAe,OAJE,EAKjB,gBAAA,CAAA,OAAA,CAAe,OALE,CAAnB;AVEA,AGAA,AUWE,ALnBA,ERQF,EaWE,EAAE,CAAC,EVXE,AKRA,KRQP,CAAA,CaWE,GbXF,AaWiB,CbXjB,GAAA,EQRO,CAAA,GKmBkB,CAAC,CAAC,CAAD,CVXK,AUWd,ALnBV,CLQyB,AKRV,EKmBO,EbX7B,GQRE,CLQ6B,CAAxB,CAAmC,AUWxC,IVXK,CAAP;AHCA,AGAD,AOKC,AGME,ADlBF,AJDI,CLDN,CHSE,EaWE,GHNiB,EEZZ,CCkBC,CHNW,AGMV,EHNU,AFbR,CRQX,CAAA,CUKmB,CAAA,AEZJ,EZOf,AUKmB,CVLnB,AYPkB,ECkBhB,CbXF,AaWqB,ALnBT,CAAD,CKmBT,CLnBmB,KEaF,GAAA,CVLnB,EYPmC,CAAC,EAAD,CAApB,GFYf,AEZ0C,EFYvB,EAAA,GAAA,IEZkC,CAAC,EAAD,CAArD,IFYmB,CAAA,MAAnB,EAAmB,EAAA,EAAnB,EAA+B;AVJ/B,AUIK,AGOJ,ADlBF,AJF2B,CIA5B,CZSE,MUIW,IAAI,EVJf,CAAA,AUIe,AFbW,CAAC,CAAC,ERS5B,CAAA,GAAA,IUIe,CAAA,EAAA,CAAV,GFbqB,CRS1B,AQT8C,CAApB,CAAA;ARU1B,AGA2E,AOIzE,AFd8C,ERUhD,EUIE,CAAC,CAAC,CPJuE,AKVvE,CLUuE,MHA3E,CAAA,EUIE,CAAc,CVJhB,CAAA,GAAA,IUIyB,CAAC,CVJ1B,AUIyB,EPJkD,AOI9C,GPJ8C,COIlD,CAAvB,qBPJyE;AHC3E,AUIC,AGMD,ADT4B,EZD5B,KYC4B,CAAA,CCSrB,IDTqB,CZD5B,CAAA,AaUA,CDT4B,GZD5B,CAAA,CYC4B,EZD5B,UAAA;AACD,AaUA,ALpBG,CRAJ,AaWA,EbXK,YAAY,KAAZ,YAAY,GAAA,EAAA,CAAjB;AUeE,AEbF,AJDM,IICA,KFaG,CAAP,GFdW,CICG,GAAG,MJDL,CAAD,EICP,AJDiB,UICJ,CAAC,CAAD,EAAY,QAAZ,EAAqC;AZmBtD,AULD,AGMD,ADpB+B,AJDH,CEF5B,KEG+B,CZmB7B,CAAA,CaCO,KDpBsB,CJDH,CAAC,CAAC,EICC,CZmB7B,GAAA,CYnB6B,CAAA,ECoB/B,ADpB+B,CCoBF,ALrBD,CKqB5B,EAA0C,IbDxC,AaCF,EAA+D;AAC7D,ADrB6B,AJDU,IICV,GJDzB,EKsBG,GDrBsB,GAAA,ICqBrB,CDrBqB,CCqBtB,EAAgB;AHLzB,AGMI,ADtBoD,AJlBtD,GIkBsD,CCsBpD,ADrBF,GFeF,CAAA,GGMW,CAAC,GHNZ,AGMI,CAAY,EHND,KGMX,EAAqB,CAAC,CAAC,QHN3B,OGMI,EAAwC,IAAxC;ALrBH;AKsBG,QAAI,IAAI,KAAK,CAAC,CAAC,eAAf,EAAgC;AAC9B,ADtBJ,AJrBF,MK2CM,ADtBE,CJrBR,CK2CQ,AL3CR,CK2CS,ADtBE,GAAG,MCsBR,CAAa,EDtBX,CCsBF,CAAiB,AL3CvB,CIqBc,CAAC,CAAD,AJrBd,EIqBwB,QCsBlB,KL3CN;AK4CK,ADvB0B,WAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,CAAC,CAAC,CAAC,GAAG,EAAL,IAAW,GAAX,GAAiB,EAAlB,IAAwB,EAAxB,GAA6B,CAAhD,KAAsD,IAA7D;AAAmE,AJClG,GIDE,MJCc,gBAAhB,CAAkC,GAAlC,EAAqD;AKuBjD,ALtBF,IKsBE,EAAE,CAAC,GLtBG,GAAR,UKsBE,CAAoB,O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CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAP;AACjB,AFeF,IAAM,EEfE,GAAG,GAAG,MAAM,CAAC,MAAP,AFea,CEfC,EFeE,QEfD,CAAD,AFetB,EEf0B,CAAJ,EAAK,gBFeH,GAAA;AI5B9B,ACFA,AHesC,AFeR,ADjB9B,AeZA,ACDA,IXEA,ACFA,ANaM,AeZN,ACDA,Kf8B8B,EEfQ,CEbtC,AFauC,EGfvC,AUAA,CXEA,AFa0C,AHFzB,CGEqB,CGftC,AUAA,Cf8B8B,ADjBV,AeZpB,Cd6B8B,Ec7B9B,GTDA,AL8B8B,Ae9B9B,CVAA,AL8B8B,Ae9B9B,Ef8B8B,ADjBxB,CeZN,CAAA,CVCA,CAAA,CJ4B8B,CAAA,EAAU,GI5BxC,ALWoB,CKXpB,ELWoB,CCiBU,EAAiB,Ce9B/C,CAAA,IVAA,CAAA,ASCA,CAAA,IVCA,AJ4B+C,CI5B/C,CAAA;AFa2C,AHDzC,GGCY,EAA+B,CAA/B,CAAZ,EHDO,aAAW,IAAX,GAAe,OAAf,GAAuB,WAA9B;AKXF,ACFA,AHeE,AHDD,AebD,ACDA,ChBYA,GKVA,ACFA,ASCA,ACDA,EbeM,KAAK,EEbX,CWFA,EXEA,AFagB,CAAd,AafF,EbemB,EYdnB,EVCA,CAAA,AUDA,CTDA,CHe0B,CAAC,CGf3B,AHe0B,EAAI,Eaf9B,Cbe0B,Aaf1B,EXEA,ACFA,AHemC,CEbnC,ACFA,EHe0B,CAAP,AYdnB,CAAA,ACDA,CAAA,MDCA,CAAA,aCDA,CAAA,CAAA,IDCA,CAAA,CAAA,GTDA,CAAA;AHgBE,MAAM,IAAI,GAAG,MAAM,CAAC,MAAP,CAAc,UAAC,CAAD,EAAI,CAAJ,EAAK;AEZlC,ACFA,AHcuC,AHAvC,AedA,ACDA,IXGM,ACFN,ANcM,AedN,ACDA,ObeuC,CAAC,GGdxC,AHc2C,CAAC,EEZxB,ACFpB,CHc+C,AHA1B,CGAkB,AafvC,CXGuB,CLYC,CedxB,ACDA,GDCA,IVEM,CLYA,EMdN,CAAA,IUDA,CAAA,EVCA,ASAA,CTAA,ASAA,EVEuB,CAAO,CLYN,AgBfxB,ChBgBE,AgBhBF,EXGuB,AUFvB,CAAA,CVE6C,CLYrB,EAEtB,CMhBF,CAAA,CAAA,KNcwB,EAEI,OehB5B,CAAA,CAAA,ACDA,CAAA,CAAA;AXG6C,AFYG,AFc/B,ADZW,GGFb,EAAmC,CAAnC,CAAb,EEZ2C,ALcjB,QCYX,CI1B4B,AJ0B5B,ADZW,CKdiB,ALcjB,KKdiB,ALcjB,CKdiB,ALcjB,EKdiB,ALcjB,KKdiB,ALcjB,CKdiB,ALcjB,EKdoB,ALe7C,OKf0C,ALcjB,EKd2B,ALe7C,YKf6C,ALe7C;AMfV,AHaE,AFae,Ac3BjB,ACDA,IVEM,ASDN,ACDA,EbeQ,GAAG,GAAG,Cafd,EbeiB,CGbC,AUFlB,EbeoB,CGbC,GSDrB,CZcE,EYdF,GTCM,GUFN,CAAA,OAAA,CVEqB,ASDrB,ACDA,CDCA,ETCqB,KSDrB,CAAA,oBAAA,CAAA,CAAA,CCDA,CAAA,CAAA;AVEqB,AHcnB,AFYe,MEZT,GGda,CHcT,EFYW,CEZR,IAAI,CGdE,CAAA,CHcC,CFYC,CAAA,CEZE,CGdJ,CAAA,CHcO,CGdP,EHcC,GGdD,AHca,CGdb,AL0BE,EK1BF,AL0BJ,CAAA,CEZf,GGdmB,CAAA,EAAA,YAAA;ADCb,AFcN,AYfF,ACDA,IDCA,ACDA,EXEQ,AFcA,IEdI,AFcA,EYfZ,CVCe,AFcA,EYff,ACDA,EXEmB,AFcA,CAAC,AahBpB,EXEe,EAAP,AFcO,CAAU,IAAI,GYf7B,CZeiC,AYfjC,ECDA,CAAA,EbgBsC,EYftC,CZeyC,AYfzC,CZe6B,CAAd,AahBf,CbgBE,AahBF,ODCA,CAAA,CAAA,mBCDA,CAAA,CAAA;AXGQ,AFcN,AHCE,MKfI,AFcA,MAAM,GAAG,EHCb,CAAA,CGDiB,CEdC,GAAG,AFcR,GAAW,CEdC,CAAC,EFcE,CEdP,AFcQ,CEdC,GFcN,CAAU,KAAV,CEdO,AFcjC,GEdgC,EAAI;AAAK,AFezC,AFSM,ADTJ,AefJ,ACFA,IDEM,ACFN,KbiBS,CAAC,AFSF,Ee1BR,GXE2C,AFelC,AajBT,Cf0Bc,CETG,CEf6B,AUA1B,CVA2B,AJwB9B,CETR,CFSQ,AcxBM,CZeD,AFSL,GIxB0B,CJwB1B,EETR,AFSD,CETN,CYfI,ACFN,CAAA,OAAA,CAAA,KDEuB,CAAO,KAAP,EAAwB,SAAxB,EAA8C,CCFrE,CAAA,CAAA;AXEqD,AFgBpD,AFSoB,ADVjB,AefiE,OVA5C,CAAjB,CUA6D,Gfe3D,KCUW,ADVN,CCUM,ADTZ,AehB4D,CAAA,KAAA,CAAA,EAAA,EfgBjD,GehBiD,CAAA,CfgB/C,CehBkD,OAAH,EAAU,MfgBtE,GAA8B,GehBwC,MfgBxC,CAAA,OAA9B,GAAqC,SAArC,GAA+C,KAAK,CAAC,EAArD,GAAuD,GAAvD,GACD,QAAQ,CAAC,EAFF,CAAX,CAAA;AKbF,ACFY,ALyBO,AezBrB,IAAM,EXEJ,EWFQ,EXEJ,CAAC,AWFM,MVAC,CDEZ,ACFY,CDEC,CWFT,IAAO,GAAA,EXEG,WAAD,EAAc,CAAd,EAAe;AAC1B,ACHU,AHkBd,AFOqB,AezBR,IbkBb,KalBa,CbkBb,EFO2B,GItBvB,GWHS,CAAA,EfyBc,CAAA,EezBd,CAAA,CXGE,CAAC,AWHH,KAAA,CAAA,CXGT,CAAoB,AWHX,KAAA,CAAA,CfyBc,CAAqB,AezBnC,EXGY,IJsB6B,CItB9B,AJsB+B,EItBvB,CAAR,CJsBwB,CItBf,AJsB2B,AezB/C,CfyBmC,CAArB,CAAN,CAAA;AIrBf,ACJQ,AHkBd,AHJE,YMdkB,EDIR,EAAE,CLUZ,CAAA,CKVe,GCJG,CAAA,KDIH,CAAA,eCJG,EDIH,ACJH,CDIqB,ACJrB,KDI0B,CAAC,IAAN,CAAW,CAAX,EAAc,GAAd,CAAkB,KAAlB,CAAwB,SAA1C,CAAX;AAEA,AFYN,AHJE,UKRI,EFYN,GEZW,CAAC,IAAN,CAAW,OAAX,CAAmB,UAAC,CAAD,EAAE;AACnB,AFoBN,AFFM,ADXN,AebM,UdwBA,AcxBA,CZ0BN,CHZE,EAAA,CAAA,AedS,CVMC,CAAC,AFoBb,CAAa,AY1BC,CfcZ,CKRc,AFoBhB,AFFgB,CIlBC,ALOV,CKPW,AFoBW,AHP3B,CCKiB,EIlBH,AJkBG,CIlBG,AJkBH,ADXZ,EAAP,CAAA,CCWmB,EAAb,CIlBU,CAAc,CAAd,AUNF,CVMR,AFoBN,CErByB,CAGnB,AFkB+C;AG3B/C,AHwBE,AFEU,AczBI,SZuBd,CGxBF,ESCgB,CTDb,GAAG,CL0BM,CK1BN,AL0BM,CK1BN,ESCoB,CAAC,CTDrB,AHwBJ,EGxBF,CHwB0C,IAAxC,CYvBc,GAAuB,EAAvB;AVShB,ACTF,AHwBI,AFCU,AczB+B,ACA3C,SbwBE,CGxBJ,AUAE,CDAA,GTAE,AHwBA,EEfE,CAAC,ACTW,AHwBqB,CEf/B,CWTG,CXST,ACTmB,CAAC,CDSV,AWTE,GVAI,CAAS,AHwBvB,GGxBc,CAAa,AUAT,CAAC,SVAS,KUAlB,CAAwB,KVAP,EAAY,YUA7B,CAAZ;AXUE,ACV4C,AH2BlD,AFFgB,AevBlB,GhBS0B,CAAA,KGgBnB,CazBP,CbyBE,CFFsB,EIfhB,AFiBI,EAAV,EEjBU,CAAC,ACVuC,ALyBrB,AevBrB,CfuBsB,AevBrB,EXQH,CAAS,AJeO,CIfN,AJgBhB,CIhBiB,EAAX,GCVuD,AL0BvD,CK1BwD,AL0BvD,AexBT,CXQ0B,AWRH,EVF6B,CAAgB,AL0BlE,CIhB4B,AJgBhB,CIhBiB,EJgB7B,CIhBwB,AJgBR,AexBK,CXQY,AWRZ,CXQa,CAAC,EAAX,ACV2C,EDU5B,CWRlB,EfwBJ,AexBnB,CXQ6C,EJgB3B,EK1BkD,AL0B9C,EK1ByD,EDUlC,CAAA,OAAJ,CAAW,CAAC,CAAC,EAAb,EAAiB,cAAjB,CAAf,CAAlB;AACA,ACX4E,AH4BlF,AFFyB,ADN5B,AelBC,ACEa,ChBKf,QGmBS,CY1BP,KAAK,ECEQ,CXOC,AFiBZ,AaxBW,CfsBc,ActB3B,CVOgB,CCXoE,AH4BjE,EEjBA,IAAI,CAAC,AJeG,CAAA,EIfR,ACX2E,CDWlE,ACXmE,CDWlE,CAAC,CFiBG,CEjBd,ACXiE,AH4BlD,CEjB1B,EFiBW,CAAmB,QFFX,CAAoB,CEER,EFFZ,CAAA,IEEW,EAAQ;AEhBtC,ACZ2F,AH4BhD,AFFA,AetBtC,WfsBX,CADsB,CKzB4B,AH4BD,AFHjC,CIbV,ACZ4C,ALyBlC,EIbR,CAAC,AFgB4C,KAAJ,CAAqC,KEhBhF,CAAe,CAAf,AFgB2C,EEhBzB,AFgBuE,EEhBrE,CAAC,CAAD,AFgBuB,CEhB3C,AFgB8F,EEhBrE,CAAzB,CFgB2C,CEhBf,AFgBe,CEhB3C;AACD,ACb6F,AH4BO,AHsC3G,Ae7DA,ACDa,KbwBM,CAAjB,CHsCF,CAAA,Ee7DA,CTLsB,CAAlB,AUIe,ODCT,CAAC,CCDQ,CAAA,ChB8DnB,GAAA,GgB9DmB,EDCnB,ACDa,CDCU,ACDV,QDCU,Cf6DvB,Ae7DuB,OAAA,EAAvB;AVSK,ACXC,AH0BJ,AYrBI,SZqBC,CG1BD,ASKA,CVHF,EUGK,GAAG,KAAK,CAAC,GTLG,AH0BnB,CYrBU,CAAW,CTL+B,AH0B5B,CGzBxB,GSI0B,CAAC,OAAN,CAAc,CZqBG,CAAC,GAAf,CAAmB,AYrBtB,EAAX,CTJV,CAAA,ASKC,IADS,CACJ,CZoBsC,CAAD,EAAE,UYpBvC,CAAA,GTN8C,CAAhD,aSME,CAAkB,KAAlB,CADI,EAET,KAFS,CAEH,CAFG,EAEA,KAAK,CAAC,UAFN,CAAN,EAIN;AVGG,ACTH,AHuBoD,AFJ9C,ADHR,IAAM,KKpBF,CAAA,ACIF,ALmBM,GEI8C,CAAA,KFJrC,GAAG,EAAA,CKnBH,ALmBG,CKnBF,GLmBE,EAAZ,CDH0B,CMhBhC,CAAwB,CNgBW,SMhBV,ANgBrB,KMhBoB,EAAM,qBNgBK,CACnC,KADmC,EAEnC,QAFmC,EAGnC,SAHmC,EAGH;AKV5B,ACTiC,AHuBgB,AFDxC,ADHmB,AeZhC,ACTM,KbyBoB,CAAxB,CE5BF,ELwBgC,CgBrB1B,EVE+B,EUF3B,EVE+B,CLsB5B,Acfb,ACTa,CfwBA,ADHmB,AeZhC,CTP4C,ANmBZ,AgBrBnB,CAAA,IVEoC,ANmBjB,AgBrBnB,CVEqC,ANmBlB,CgBrB1B,ChBqB0B,EMnBiB,CAAZ,ENmBL,CAAA,EAC/B,OAD+B,EACxB,YAAA;AKRR,ACZyD,AHwBvD,AFFW,Acfb,ACPM,SbwBC,CaxBD,CVAN,EDYA,CAAA,QWZkB,GAAa,EbwB7B,GAA0B,cAAc,CAAC,GAAf,CAAmB,UAAC,CAAD,EAAE;AEZjD,ACTO,AHqB+C,AFFzC,Acfb,ACNE,YfqBiB,Acfb,ACNJ,CbuBoD,IGrB/C,AHqB+C,CGrB/C,CLmBmB,Acfb,ACNJ,CfqBkB,Acfb,CCNH,EfqBQ,Acfb,CdgBJ,AchBgB,CCPa,EDOV,CAAC,GAAJ,CAAQ,EdgBd,CAAC,IAAX,CAAgB,EchBe,CdgB/B,AchBwB,CdgBJ,CchBY,SdgBX,GAAD,EAAI;AIX1B,ACTO,AHqBmD,AFAtD,AcjB8B,ACLhC,KbsB0B,CAA1B,EEZK,IAAP,AWVE,CXUF,MJYW,AcjBuB,OdiBhB,AetBF,CfsBG,CcjBe,ACLhB,CDKgB,CdiBvB,CACL,GclB4B,CAAA,EdkBtB,AclBsB,CdkBrB,IAAP,AclB4B,CdkBhB,AclBgB,CCLhB,CDKgB,ACLhB,CfuBZ,CAAgB,GclBY,CAAA,CCLhB,CDKgB,ACLD,IfuBV,CezBQ,EfyBT,EAAM,CAAN,EAAO,AclBK;ATJ3B,AHsBN,AFCO,AcnB0B,ACJhC,YVAW,AUAX,MfuBU,GAAG,AcnBmB,CdmBlB,AevBJ,CVAC,CAAA,AUAC,EfuBF,Ce1BmB,IVGlB,ALuBY,CKvBG,ASIM,CAAA,GTJrB,CAAN,ASI2B,CTJ3B,CSI2B,CdmBT,CAAA,QcnBS,EdmBT,AcnBS,CdmBE,CcnBF,WdmB1B,EAA0C;AEClD,AFAU,ADNJ,AgBjBJ,GXbyC,CAAA,ML8BrC,EgBjBJ,QfuBY,GAAG,CAAC,ADNE,GAAG,AgBjBN,CfuBH,CevBK,IfuBQ,GDNK,CAC7B,EgBlBgB,ChBiBI,AgBjBJ,ChBkBZ,CCKoB,CAAA,QDLnB,CAAD,EAAE,CCKkB,AevBR,CfuBqB,AevBL,EfuBzB,EAAkC,OAAO,SAAA,CAAA,eAAA,CAAgB,GAAhB,EAAqB,GAArB,CAAP;AId7C,AJgBW,ADPI,AgBtBiB,CXTjC,UWSQ,QhBsBQ,CCOE,QDPK,CCOE,ADPD,CAAC,ECOG,QDPZ,CCOqB,CAAC,CAAD,ADPF,CCOvB,EDPI,GAAuB,CAAC,CAAC,OAAzB;AMpBd,AL4BU,ADRsC,AefT,ACAvC,UAAA,ChBcuB,EAEpB,IAFoB,CAEf,AgBhBA,CAAC,CfuBO,CDTO,CAAjB,KediC,CAAA,CduBd,GAA0B,EAAzC,CevBV,CAA0B,UAAA,CAAA,OAAA,CAAS,YAAnC,EAAkD,UAAC,CAAD,EAAyB;AXQ7E,ACZE,AHyBA,AHHE,AelBqC,ACCrC,EboBF,KEbF,CAAA,AFaE,CAAA,GapBE,GXOJ,ECZE,ANsBE,CKVW,ACZb,AHyBA,AHHE,CGGF,IapBE,CAAA,MboBF,CapBE,CXOJ,AWPmB,CboBjB,AapBkB,CAAC,MAAjB,EAAyB,CboBd,CAAb,EAAmC,CAAnC,EAA8C,CAA9C,CapBE,CboBuD,CAAzD,AarB2E,CAE3E,CbmBkE;AGzBlE,AH0BE,AFGQ,ADPR,AelBqC,ACGtC,QbmBO,CAAC,EatBT,CbsBY,QFGI,EczB6B,CAAC,CAAC,OAAF,CdyBjB,CczBW,CAAA,CdyBR,SAAf,YAAe,CACnB,OADmB,EAEnB,QAFmB,EAEH;AK/B5B,AH2BI,AFMQ,ADXV,AgBbF,MbkBI,KAAK,CG3BF,ANsBC,CGKG,CG3BJ,AH2BK,CG3BL,AH2BM,EHLA,AgBbb,ChBcO,AgBdP,CVTO,CH0BK,CG1BZ,CAAA,ONuBkB,KAAE,gBAAb,GAA8B,SAAA,CAAA,OAA9B,GAAqC,SAArC,GAA+C,KAAK,CAAC,EAArD,GAAuD,GAAvD,GACD,QAAQ,CAAC,EADR,GACU,GADV,GAEC,cAHK,CAAX,CAAA;AGME,AFMQ,AezBZ,MbmBI,GAAG,EAAE,CAAC,CAAC,GAFC,MFQM,QAAQ,GAAG,SAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,UAAC,CAAD,EAAE;AEL7C,AFKkD,Ac9Bf,ACKvC,MboBI,KAAK,CapBH,CboBK,UapBL,CAAA,GfyBgD,Ac9Bf,Cd8BgB,Ac9BhB,Cd8BiB,EezBlD,CAAe,CfyBiC,KAAW,MezB3D,CfyBgD,CezBnB,SAA7B,CAAN,CAAA;AbiBY,AFQ4D,ADbxE,AejBuC,GThBpB,CAAA,CHsCjB,YHLF,CAAA,CCa6B,CAAjB;AKjCb,AH8BG,AFIU,ADdZ,AejBuC,CThBzC,QH2CS,SAAL,CAAe,CAAf,EAAkB,AFIF,Ac/BqB,CZ2BrC,CY3BqC,CAAA,EZ2Bd,AFIF,CEJrB,CY3BqC,Cd+Bb,Cc/Ba,CAAA,Id+BP,CAAC,OAAP,CAAe,QAAS,CAAC,MAAV,CAAiB,MAAhC,EAAwC,IAAxC,CACZ,UAAC,EAAD,EAAS;AEJtB,AHXD,AgBZA,GbgBA,OahBA,EhBaE,AgBbF,CAAA,ChBaE,CAAA,EgBbF,EhBaE,EADK,CAM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","file":"pages.77de5100.js","sourceRoot":"..\\src\\app\\pages","sourcesContent":["import Player from '../../modules/rankings/models/Player'\r\nimport TableSelection from '../models/TableSelection'\r\n\r\nexport enum rankingCriteria{\r\n    point = 0,\r\n    average = 1\r\n};\r\n\r\nexport default interface AppState {\r\n    players: Map<string, Player>,\r\n    tableSelection: TableSelection,\r\n    tableState: number,\r\n    rankingCriteria: rankingCriteria\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nenum AppEvent {\r\n    UPDATE_STATE = 'updateState',\r\n}\r\n\r\nexport default AppEvent\r\n","/* eslint-disable no-unused-vars */\r\nenum TableSelection {\r\n    TOTAL = 'Total',\r\n    A_SIDES = 'A-Sides',\r\n    COLLECTIBLES = 'Collectibles',\r\n    B_SIDES = 'B-Sides',\r\n    C_SIDES = 'C-Sides',\r\n}\r\n\r\nexport default TableSelection\r\n","/* eslint-disable no-unused-vars */\r\nimport SpeedrunId from '../models/SpeedrunId'\r\n\r\nconst GAME_ID: SpeedrunId = 'o1y9j9v6'\r\nconst GAME_NAME = 'Celeste'\r\n\r\nconst COLLECTIBLES_VARIABLE_NAME = 'Full Clear / ARB / HC'\r\nconst FC_RUN_VALUE = 'Full Clear'\r\nconst ARB_RUN_VALUE = 'All Red Berries'\r\n\r\nconst CORE_FC_VARIABLE_NAME = 'Full Clear'\r\nconst CORE_FC_RUN_VALUE = 'Yes'\r\n\r\nenum Categories {\r\n  A_SIDES = 'Clear',\r\n  COLLECTIBLES = 'Collectibles',\r\n  B_SIDES = 'B-Side',\r\n  C_SIDES = 'C-Side',\r\n}\r\n\r\nenum ChapterNames {\r\n  C1 = 'Forsaken City',\r\n  C2 = 'Old Site',\r\n  C3 = 'Celestial Resort',\r\n  C4 = 'Golden Ridge',\r\n  C5 = 'Mirror Temple',\r\n  C6 = 'Reflection',\r\n  C7 = 'The Summit',\r\n  C8 = 'Core',\r\n  C9 = 'Farewell',\r\n}\r\n\r\nexport {\r\n  GAME_ID,\r\n  GAME_NAME,\r\n  COLLECTIBLES_VARIABLE_NAME,\r\n  FC_RUN_VALUE,\r\n  ARB_RUN_VALUE,\r\n  CORE_FC_VARIABLE_NAME,\r\n  CORE_FC_RUN_VALUE,\r\n  Categories,\r\n  ChapterNames\r\n}\r\n","import { GAME_ID } from './constants/celeste'\r\nimport VariableValueIdPair from './models/VariableValueIdPair'\r\nimport SpeedrunApiResponse from './models/SpeedrunApiResponse'\r\nimport SpeedrunCategory from './models/SpeedrunCategory'\r\nimport SpeedrunId from './models/SpeedrunId'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\nimport SpeedrunLevel from './models/SpeedrunLevel'\r\nimport SpeedrunUser from './models/SpeedrunUser'\r\nimport SpeedrunVariable from './models/SpeedrunVariable'\r\n\r\nconst HREF = 'www.speedrun.com'\r\nconst API_VERSION = 'v1'\r\n\r\nconst getBasePath = () => {\r\n  return `https://${HREF}/api/${API_VERSION}`\r\n}\r\n\r\nconst fetchLevelBoard = async (\r\n  level: SpeedrunLevel,\r\n  category: SpeedrunCategory\r\n): Promise<SpeedrunApiResponse<SpeedrunLeaderboard>> => {\r\n  return (\r\n    await fetch(\r\n      `${getBasePath()}/leaderboards/${GAME_ID}/level/${level.id}/${\r\n        category.id\r\n      }`\r\n    )\r\n  ).json()\r\n}\r\n\r\nconst fetchLevelBoardWithVariables = async (\r\n  level: SpeedrunLevel,\r\n  category: SpeedrunCategory,\r\n  variables: VariableValueIdPair[]\r\n): Promise<SpeedrunApiResponse<SpeedrunLeaderboard>> => {\r\n  const variableString = variables\r\n    .map((x) => `var-${x.variableId}=${x.valueId}`)\r\n    .join('&')\r\n  return (\r\n    await fetch(\r\n      `${getBasePath()}/leaderboards/${GAME_ID}/level/${level.id}/${\r\n        category.id\r\n      }?${variableString}`\r\n    )\r\n  ).json()\r\n}\r\n\r\nconst fetchLevels = async (): Promise<SpeedrunApiResponse<SpeedrunLevel[]>> => {\r\n  return await (await fetch(`${getBasePath()}/games/${GAME_ID}/levels`)).json()\r\n}\r\n\r\nconst fetchLevelCategories = async (\r\n  level: SpeedrunLevel\r\n): Promise<SpeedrunApiResponse<SpeedrunCategory[]>> => {\r\n  return await (\r\n    await fetch(`${getBasePath()}/levels/${level.id}/categories`)\r\n  ).json()\r\n}\r\n\r\nconst fetchLevelVariables = async (\r\n  level: SpeedrunLevel\r\n): Promise<SpeedrunApiResponse<SpeedrunVariable[]>> => {\r\n  return await (\r\n    await fetch(`${getBasePath()}/levels/${level.id}/variables`)\r\n  ).json()\r\n}\r\n\r\nconst fetchUser = async (\r\n  user: SpeedrunId\r\n): Promise<SpeedrunApiResponse<SpeedrunUser>> => {\r\n  return await (await fetch(`${getBasePath()}/users/${user}`)).json()\r\n}\r\n\r\nexport {\r\n  fetchLevelBoard,\r\n  fetchLevelBoardWithVariables,\r\n  fetchLevels,\r\n  fetchLevelCategories,\r\n  fetchLevelVariables,\r\n  fetchUser\r\n}\r\n","import SpeedrunApiResponse from './models/SpeedrunApiResponse'\r\nimport SpeedrunCategory from './models/SpeedrunCategory'\r\nimport SpeedrunLevel from './models/SpeedrunLevel'\r\nimport SpeedrunVariable from './models/SpeedrunVariable'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\nimport {\r\n  fetchLevelCategories,\r\n  fetchLevelBoard,\r\n  fetchLevels,\r\n  fetchLevelVariables,\r\n  fetchLevelBoardWithVariables\r\n} from './wrapper'\r\nimport {\r\n  ARB_RUN_VALUE,\r\n  Categories,\r\n  ChapterNames,\r\n  COLLECTIBLES_VARIABLE_NAME,\r\n  CORE_FC_RUN_VALUE,\r\n  CORE_FC_VARIABLE_NAME,\r\n  FC_RUN_VALUE\r\n} from './constants/celeste'\r\nimport VariableValueIdPair from './models/VariableValueIdPair'\r\n\r\ninterface RawDataCollection {\r\n  categories: SpeedrunApiResponse<SpeedrunCategory[]>;\r\n  levels: SpeedrunApiResponse<SpeedrunLevel[]>;\r\n  grid: SpeedrunApiResponse<SpeedrunLeaderboard>[][];\r\n  variables: SpeedrunApiResponse<SpeedrunVariable[]>[];\r\n}\r\n\r\nconst getRawLeaderboardData = async (): Promise<RawDataCollection> => {\r\n  const levels = await fetchLevels()\r\n  const categories = await fetchLevelCategories(levels.data[0])\r\n  const variables = await Promise.all(\r\n    levels.data.map((lvl) => fetchLevelVariables(lvl))\r\n  )\r\n  const grid = await Promise.all(\r\n    categories.data.map((cat) => {\r\n      return Promise.all(\r\n        levels.data.map((lvl, i) => {\r\n          if (cat.name === Categories.COLLECTIBLES) {\r\n            if (lvl.name === ChapterNames.C9) return fetchLevelBoard(lvl, cat)\r\n\r\n            const catVars = variables[i]\r\n            const queryVars: VariableValueIdPair[] = []\r\n\r\n            const findVariable = (\r\n              varName: string,\r\n              valLabel: string\r\n            ): VariableValueIdPair => {\r\n              // find the 2 relevant IDs based on variable name and run value label\r\n              const variable = catVars.data.find((x) => x.name === varName)\r\n              const value = Object.entries(variable!.values.values).find(\r\n                ([_, val]) => val.label === valLabel\r\n              )\r\n\r\n              return {\r\n                variableId: variable!.id,\r\n                valueId: value![0]\r\n              }\r\n            }\r\n\r\n            // Core has a very different FC leaderboard structure, with ARB as category label and a FC run var\r\n            const isCore = lvl.name === ChapterNames.C8\r\n            queryVars.push(\r\n              findVariable(\r\n                COLLECTIBLES_VARIABLE_NAME,\r\n                isCore ? ARB_RUN_VALUE : FC_RUN_VALUE\r\n              )\r\n            )\r\n            if (isCore) {\r\n              queryVars.push(\r\n                findVariable(CORE_FC_VARIABLE_NAME, CORE_FC_RUN_VALUE)\r\n              )\r\n            }\r\n\r\n            return fetchLevelBoardWithVariables(lvl, cat, queryVars)\r\n          }\r\n          return fetchLevelBoard(lvl, cat)\r\n        })\r\n      )\r\n    })\r\n  )\r\n\r\n  return {\r\n    categories,\r\n    levels,\r\n    grid,\r\n    variables\r\n  }\r\n}\r\n\r\nexport { getRawLeaderboardData }\r\n","import LevelGrid from './models/LevelGrid'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\n\r\n/** function that transforms a LevelGrid in some way */\r\ntype gridTransformationFunction = (grid: LevelGrid) => LevelGrid;\r\n\r\n/** returns a gridTransformationFunction, using the given callback function in grid.map */\r\nconst getGridMapTransformation = (func: (levelColumn: SpeedrunLeaderboard[], i: number) => SpeedrunLeaderboard[]): gridTransformationFunction => {\r\n  return (grid: LevelGrid): LevelGrid => {\r\n    return grid.map((levelColumn, i) => func(levelColumn, i))\r\n  }\r\n}\r\n\r\nconst removeColumn = (grid: LevelGrid, col: number): LevelGrid => {\r\n  return grid.filter((_, i) => i !== col)\r\n}\r\n\r\nconst removeFarewellObsoletes = (grid: LevelGrid): LevelGrid => {\r\n  const callback = (levelColumn: SpeedrunLeaderboard[], i: number) => {\r\n    if (i === 0) {\r\n      return levelColumn\r\n    }\r\n    return levelColumn.filter((_, i) => i !== 8)\r\n  }\r\n\r\n  return getGridMapTransformation(callback)(grid)\r\n}\r\n\r\nexport { gridTransformationFunction, getGridMapTransformation, removeColumn, removeFarewellObsoletes }\r\n","import SpeedrunId from '../../speedruncom/models/SpeedrunId'\r\nimport SpeedrunRankedRun from '../../speedruncom/models/SpeedrunRankedRun'\r\nimport RankingGrid from './RankingGrid'\r\nimport { fetchUser } from '../../speedruncom/wrapper'\r\nimport RankedRunWithScore from './RankedRunWithScore'\r\n\r\nexport type AverageScore = [\r\n  number, // count\r\n  number, // mean\r\n  number // confidence bound\r\n];\r\n\r\nfunction GetAverageStatistics (scores: number[]): AverageScore {\r\n  const count = scores.length\r\n  if (count === 0) return [0, 0, 0]\r\n  const sum = scores.reduce((a, b) => a + b, 0)\r\n  if (count === 1) return [1, sum, sum]\r\n  const ssum = scores.reduce((a, b) => a + b * b, 0)\r\n  const avg = sum / count\r\n  const tdev = ssum - avg * avg * count\r\n  const sdev = Math.sqrt(tdev / (count - 1))\r\n  const cbound = 2 * sdev / Math.sqrt(count)\r\n  return [count, avg, cbound]\r\n}\r\n\r\nexport default class Player {\r\n  id: SpeedrunId\r\n  timesPage: RankingGrid\r\n\r\n  private _pointsPerColumn: number[]\r\n  private _avgScorePerColumn: (AverageScore | null)[]\r\n  private _totalAvgScore: (AverageScore | null) = null\r\n  private _name: string | null | undefined = undefined\r\n\r\n  constructor (id: SpeedrunId, gridDimensions: number[]) {\r\n    this.id = id\r\n    this.timesPage = gridDimensions.map((colSize) => new Array<RankedRunWithScore | null>(colSize).fill(null))\r\n    this._pointsPerColumn = gridDimensions.map((_) => 0)\r\n    this._avgScorePerColumn = gridDimensions.map((_) => null)\r\n  }\r\n\r\n  /** register run r in the grid at position i, j */\r\n  registerRun (r: SpeedrunRankedRun, s: number, i: number, j: number) {\r\n    const x = {\r\n      place: r.place,\r\n      run: r.run,\r\n      score: s\r\n    }\r\n    this.timesPage[i][j] = x\r\n  }\r\n\r\n  public getPointsOfColumn (col: number): number {\r\n    if (this._pointsPerColumn[col]) {\r\n      return this._pointsPerColumn[col]\r\n    }\r\n\r\n    const val = this.timesPage[col].filter((x) => x != null).reduce((sum, r) => sum + r!.score, 0)\r\n    this._pointsPerColumn[col] = val\r\n\r\n    return val\r\n  }\r\n\r\n  public getAvgScoreOfColumn (col: number): AverageScore {\r\n    if (this._avgScorePerColumn[col] === null) {\r\n      const list = this.timesPage[col].filter((x) => x != null).map((r) => r!.score)\r\n      this._avgScorePerColumn[col] = GetAverageStatistics(list)\r\n    }\r\n    return this._avgScorePerColumn[col]!\r\n  }\r\n\r\n  public getAvgScore (): AverageScore {\r\n    if (this._totalAvgScore === null) {\r\n      const list = this.timesPage.map((r) => r.filter((x) => x != null).map((x) => x!.score)).reduce((a, b) => a.concat(b), [])\r\n      this._totalAvgScore = GetAverageStatistics(list)\r\n    }\r\n    return this._totalAvgScore!\r\n  }\r\n\r\n  public get totalPoints () {\r\n    return this._pointsPerColumn.reduce((sum, _, i) => sum + this.getPointsOfColumn(i), 0)\r\n  }\r\n\r\n  /**\r\n   * this getter should be used with caution, preferably when absolutely certain that the name of\r\n   * a player is already loaded\r\n   *\r\n   * otherwise use the async version getName\r\n   */\r\n  public get name () {\r\n    if (this._name) {\r\n      return this._name\r\n    }\r\n\r\n    fetchUser(this.id).then(val => {\r\n      const n = val.data.names.international\r\n      this._name = n\r\n\r\n      return n\r\n    })\r\n\r\n    return ''\r\n  }\r\n\r\n  public async getName () {\r\n    if (this._name) {\r\n      return this._name\r\n    }\r\n\r\n    try {\r\n      const n = await (await fetchUser(this.id)).data.names.international\r\n      this._name = n\r\n    } catch {\r\n      this._name = `UNLOADED: ${this.id}`\r\n    }\r\n\r\n    return this._name\r\n  }\r\n}\r\n","import SpeedrunRankedRun from '../speedruncom/models/SpeedrunRankedRun'\r\n\r\ntype scoringFunction = (r: SpeedrunRankedRun) => number\r\n\r\nconst eliteScoring = (run: SpeedrunRankedRun): number => {\r\n  if (run.place === 1) { return 100 }\r\n  if (run.place === 2) { return 97 }\r\n  return Math.max(0, 98 - run.place)\r\n}\r\n\r\nconst getPercentScoreFn = (wrTime: number) => {\r\n  return (r: SpeedrunRankedRun) => {\r\n    const t = r.run.times.primary_t\r\n\r\n    return Math.max(0, Math.round((1 - Math.log((Math.E - 1) * (t / wrTime - 1) + 1)) * 1000))\r\n  }\r\n}\r\n\r\nexport { scoringFunction, eliteScoring, getPercentScoreFn }\r\n","import LevelGrid from '../speedruncom/models/LevelGrid'\r\nimport SpeedrunId from '../speedruncom/models/SpeedrunId'\r\nimport Player from './models/Player'\r\nimport { getPercentScoreFn } from './scoring'\r\n\r\nconst buildPlayerMap = async (grid: LevelGrid): Promise<Map<SpeedrunId, Player>> => {\r\n  const pMap = new Map<SpeedrunId, Player>()\r\n  const gridDimensions = grid.map((col) => col.length)\r\n\r\n  grid.forEach((levelColumn, i) =>\r\n    levelColumn.forEach((board, j) => {\r\n      const fn = getPercentScoreFn(board.runs[0].run.times.primary_t)\r\n\r\n      board.runs.forEach((r) => {\r\n        const p = r.run.players[0]\r\n\r\n        // skip players without id (deleted users)\r\n        if (p.id) {\r\n          pMap.has(p.id) || pMap.set(p.id, new Player(p.id, gridDimensions))\r\n          const pl = pMap.get(p.id)!\r\n          pl.registerRun(r, fn(r), i, j)\r\n        }\r\n      })\r\n    })\r\n  )\r\n\r\n  return pMap\r\n}\r\n\r\nexport default buildPlayerMap\r\n","import { getRawLeaderboardData } from '../speedruncom/get-data'\r\nimport { gridTransformationFunction, removeFarewellObsoletes } from '../speedruncom/grid-transformation'\r\nimport LevelGrid from '../speedruncom/models/LevelGrid'\r\nimport buildPlayerMap from './build-map'\r\n\r\nconst getPlayerMap = async () => {\r\n  // fetch data\r\n  const raw = await getRawLeaderboardData()\r\n  let grid: LevelGrid = raw.grid.map((categoryRow) => categoryRow.map((levelBoard) => levelBoard.data))\r\n\r\n  // transform grid\r\n  const transformations: gridTransformationFunction[] = [\r\n    removeFarewellObsoletes\r\n  ]\r\n  transformations.forEach((tFunc) => { grid = tFunc(grid) })\r\n\r\n  // build and return player map\r\n  return await buildPlayerMap(grid)\r\n}\r\n\r\nexport default getPlayerMap\r\n","import Player from '../../../modules/rankings/models/Player'\r\nimport TableSelection from '../../models/TableSelection'\r\n\r\nexport function getPointsGetter (sel: TableSelection) {\r\n  switch (sel) {\r\n    case TableSelection.TOTAL:\r\n      return (p: Player) => p.totalPoints\r\n\r\n    case TableSelection.A_SIDES:\r\n      return (p: Player) => p.getPointsOfColumn(0)\r\n\r\n    case TableSelection.COLLECTIBLES:\r\n      return (p: Player) => p.getPointsOfColumn(1)\r\n\r\n    case TableSelection.B_SIDES:\r\n      return (p: Player) => p.getPointsOfColumn(2)\r\n\r\n    case TableSelection.C_SIDES:\r\n      return (p: Player) => p.getPointsOfColumn(3)\r\n\r\n    default:\r\n      return (p: Player) => p.totalPoints\r\n  }\r\n}\r\n\r\nexport function getAverageGetter (sel: TableSelection) {\r\n  switch (sel) {\r\n    case TableSelection.TOTAL:\r\n      return (p: Player) => p.getAvgScore()\r\n\r\n    case TableSelection.A_SIDES:\r\n      return (p: Player) => p.getAvgScoreOfColumn(0)\r\n\r\n    case TableSelection.COLLECTIBLES:\r\n      return (p: Player) => p.getAvgScoreOfColumn(1)\r\n\r\n    case TableSelection.B_SIDES:\r\n      return (p: Player) => p.getAvgScoreOfColumn(2)\r\n\r\n    case TableSelection.C_SIDES:\r\n      return (p: Player) => p.getAvgScoreOfColumn(3)\r\n\r\n    default:\r\n      return (p: Player) => p.getAvgScore()\r\n  }\r\n}\r\n","/**\r\n * collection of functions to help transform the player array based on user input\r\n */\r\n\r\nimport Player from '../../../modules/rankings/models/Player'\r\nimport AppState, { rankingCriteria } from '../../states/AppState'\r\nimport { getAverageGetter, getPointsGetter } from './points-getter'\r\n\r\nconst getSorterFunction = (s: AppState) => {\r\n  if (s.rankingCriteria === rankingCriteria.point) {\r\n    const getter = getPointsGetter(s.tableSelection)\r\n    return (a: Player, b: Player) => getter(b) - getter(a)\r\n  } else {\r\n    const getter = getAverageGetter(s.tableSelection)\r\n    return (a: Player, b: Player) => {\r\n      const as = getter(a)\r\n      const bs = getter(b)\r\n      if (!as[0] || !bs[0]) return bs[0] - as[0]\r\n      return (bs[1] - bs[2]) - (as[1] - as[2])\r\n    }\r\n  }\r\n}\r\n\r\nexport { getSorterFunction }\r\n","import AppEvent from '../../models/AppEvent'\r\nimport AppState from '../../states/AppState'\r\nimport TableSelection from '../../models/TableSelection'\r\n\r\nconst getCallback = (s: AppState, type: TableSelection) => {\r\n  return () => {\r\n    s.tableSelection = type\r\n    document.dispatchEvent(new CustomEvent<AppState>(AppEvent.UPDATE_STATE, { detail: s }))\r\n  }\r\n}\r\n\r\nconst getButton = (s: AppState, type: TableSelection) => {\r\n  const btn = document.createElement('button')\r\n  btn.innerHTML = type\r\n  btn.disabled = (type === s.tableSelection)\r\n  btn.addEventListener('click', getCallback(s, type))\r\n  return btn\r\n}\r\n\r\nconst getControlButtons = (s: AppState) => {\r\n  const l = document.createElement('li')\r\n  l.classList.add('control-buttons')\r\n\r\n  const selections = [\r\n    TableSelection.TOTAL,\r\n    TableSelection.A_SIDES,\r\n    TableSelection.COLLECTIBLES,\r\n    TableSelection.B_SIDES,\r\n    TableSelection.C_SIDES\r\n  ]\r\n\r\n  for (const type of selections) {\r\n    l.appendChild(getButton(s, type))\r\n  }\r\n\r\n  return l\r\n}\r\n\r\nexport default getControlButtons\r\n","const htmlToElement = (html: string): Node => {\r\n  const template = document.createElement('template')\r\n  html = html.trim()\r\n  template.innerHTML = html\r\n  return template.content.firstChild as Node\r\n}\r\n\r\nexport default htmlToElement\r\n","const getMiniText = (content: string) => {\r\n  const x = document.createElement('span')\r\n  x.classList.add('mini-text')\r\n  x.innerHTML = content\r\n  return x\r\n}\r\n\r\nconst getMiniTextString = (content: string) => {\r\n  const x = document.createElement('span')\r\n  x.classList.add('mini-text')\r\n  x.innerHTML = content\r\n  return `<span class=\"mini-text\">${content}</span>`\r\n}\r\n\r\nconst getPts = (asString: boolean = false) => {\r\n  return asString ? getMiniTextString('pts') : getMiniText('pts')\r\n}\r\n\r\nconst getMs = (ms: string, asString: boolean = false) => {\r\n  return asString ? getMiniTextString(ms) : getMiniText(ms)\r\n}\r\n\r\nconst getOrdinal = (n: number, asString: boolean = false) => {\r\n  // taken from https://stackoverflow.com/a/39466341\r\n  const nth = (x: number) => { return ['st', 'nd', 'rd'][((x + 90) % 100 - 10) % 10 - 1] || 'th' }\r\n  const ordinal = nth(n)\r\n\r\n  return asString ? getMiniTextString(ordinal) : getMiniText(ordinal)\r\n}\r\n\r\nexport { getMiniText, getPts, getMs, getOrdinal }\r\n","import Player, { AverageScore } from '../../../modules/rankings/models/Player'\r\nimport AppState, { rankingCriteria } from '../../states/AppState'\r\nimport AppEvent from '../../models/AppEvent'\r\nimport htmlToElement from '../util/html-helper'\r\nimport { getPointsGetter, getAverageGetter } from '../util/points-getter'\r\nimport { getPts } from './subtexts'\r\n\r\nconst getTableElement = (\r\n  place: string | number,\r\n  player: Player,\r\n  points: string | number,\r\n  average: AverageScore\r\n) => {\r\n  const ele = htmlToElement(`\r\n    <tr class=\"hover-highlight\">\r\n      <td class=\"bold\">${place}</td>\r\n      <td>${player.name}</td>\r\n      <td>${points} ${getPts(true)}</td>\r\n      <td><div class=\"averageCell\"><span class=\"count\"><span>${average[0]}</span></span>${average[1].toFixed(2)}<span class=\"confidenceBound\">${average[2].toFixed(2)}</span></div></td>\r\n    </tr>\r\n  `)\r\n\r\n  ele.addEventListener('click', () => {\r\n    window.open(`./player.html?player=${player.id}`, '_blank')!.focus()\r\n  })\r\n\r\n  return ele\r\n}\r\n\r\ntype cbFn = (elem: HTMLElement) => void;\r\n\r\nconst getTableHeader = (str: ([string, cbFn | null])[]) => {\r\n  const header = document.createElement('tr')\r\n  for (const i of str) {\r\n    const th = document.createElement('th')\r\n    if (i[1] != null) i[1]!(th)\r\n    th.innerHTML = `<div>${i[0]}</div>`\r\n    header.appendChild(th)\r\n  }\r\n  return header\r\n}\r\n\r\nfunction setRankingCriteria (s: AppState, crit: rankingCriteria): cbFn {\r\n  return (el: HTMLElement) => {\r\n    console.log('Crit:', s.rankingCriteria, crit)\r\n    if (crit === s.rankingCriteria) {\r\n      el.classList.add('criteriaSel')\r\n    }\r\n    el.addEventListener('click', () => {\r\n      s.rankingCriteria = crit\r\n      document.dispatchEvent(new CustomEvent<AppState>(AppEvent.UPDATE_STATE, { detail: s }))\r\n    })\r\n  }\r\n}\r\n\r\nconst getLeaderboardTable = (s: AppState, arr: Player[]) => {\r\n  const t = document.createElement('table')\r\n  const getter = getPointsGetter(s.tableSelection)\r\n  const getter2 = getAverageGetter(s.tableSelection)\r\n  t.classList.add('leaderboard-table')\r\n\r\n  const head = getTableHeader([\r\n    ['Place', null], ['Name', null],\r\n    ['Points', setRankingCriteria(s, rankingCriteria.point)],\r\n    ['Average', setRankingCriteria(s, rankingCriteria.average)]]) as HTMLElement\r\n  t.appendChild(head)\r\n\r\n  arr.forEach((p, i) => t.appendChild(getTableElement(\r\n    i + 1,\r\n    p,\r\n    getter(p),\r\n    getter2(p)\r\n  )))\r\n\r\n  return t\r\n}\r\n\r\nexport default getLeaderboardTable\r\n","import AppEvent from '../../models/AppEvent'\r\nimport AppState from '../../states/AppState'\r\n\r\nconst getLoadMoreButton = (s: AppState, max: number) => {\r\n  if (s.tableState >= max) {\r\n    return document.createElement('div')\r\n  }\r\n\r\n  const d = document.createElement('div')\r\n  d.classList.add('center')\r\n\r\n  const btn = document.createElement('button')\r\n  btn.innerHTML = 'Load 50 more ...'\r\n\r\n  btn.addEventListener('click', () => {\r\n    s.tableState = (s.tableState + 50)\r\n    document.dispatchEvent(new CustomEvent<AppState>(AppEvent.UPDATE_STATE, { detail: s }))\r\n  })\r\n\r\n  d.appendChild(btn)\r\n  return d\r\n}\r\n\r\nexport default getLoadMoreButton\r\n","const getLoader = () => {\r\n  const x = document.createElement('div')\r\n  x.classList.add(...['loader', 'center'])\r\n  x.innerHTML = 'Loading ...'\r\n  return x\r\n}\r\n\r\nexport default getLoader\r\n","import AppState from '../../states/AppState'\r\nimport { getSorterFunction } from '../util/array-helper'\r\nimport getControlButtons from './control-buttons'\r\nimport getLeaderboardTable from './leaderboard-table'\r\nimport getLoadMoreButton from './load-more-button'\r\nimport getLoader from './loader'\r\n\r\nconst renderMainPage = async (state: AppState, container: HTMLElement): Promise<void> => {\r\n  const reset = () => { container!.innerHTML = '' }\r\n\r\n  reset()\r\n\r\n  // add loader as arranging array might include loading player names\r\n  container!.appendChild(getLoader())\r\n\r\n  // arrange data based on state\r\n  const arr = Array.from(state.players.values())\r\n    .sort(getSorterFunction(state))\r\n    .slice(0, state.tableState)\r\n\r\n  // load all names\r\n  await Promise.all(arr.map(async (p) => await p.getName()))\r\n\r\n  // remove loader again\r\n  reset()\r\n\r\n  // render dynamic container based on state\r\n  container!.appendChild(getControlButtons(state))\r\n  container!.appendChild(getLeaderboardTable(state, arr))\r\n  container!.appendChild(getLoadMoreButton(state, state.players.size))\r\n}\r\n\r\nexport default renderMainPage\r\n","import AppState, { rankingCriteria } from '../states/AppState'\r\nimport AppEvent from '../models/AppEvent'\r\nimport TableSelection from '../models/TableSelection'\r\nimport getPlayerMap from '../../modules/rankings/get-map'\r\nimport renderMainPage from '../ui/components/main-page'\r\nimport getLoader from '../ui/components/loader'\r\n\r\nconst main = async () => {\r\n  const CONTAINER = document.getElementById('dynamic-container')\r\n\r\n  CONTAINER!.appendChild(getLoader())\r\n\r\n  const pMap = await getPlayerMap()\r\n\r\n  const initialState: AppState = {\r\n    players: pMap,\r\n    tableSelection: TableSelection.TOTAL,\r\n    tableState: 100,\r\n    rankingCriteria: rankingCriteria.point\r\n  }\r\n\r\n  document.addEventListener(AppEvent.UPDATE_STATE, ((e: CustomEvent<AppState>) => {\r\n    renderMainPage(e.detail, CONTAINER!)\r\n  // eslint-disable-next-line no-undef\r\n  }) as EventListener)\r\n\r\n  await renderMainPage(initialState, CONTAINER!)\r\n}\r\n\r\nmain()\r\n"]}