{"version":3,"sources":["../../modules/speedruncom/constants/celeste.ts","../../modules/speedruncom/wrapper.ts","../../modules/speedruncom/get-data.ts","../../modules/speedruncom/grid-transformation.ts","../../modules/rankings/models/Player.ts","../../modules/rankings/scoring.ts","../../modules/rankings/build-map.ts","../../modules/rankings/get-map.ts","../ui/util/html-helper.ts","../models/TableSelection.ts","../ui/util/time-helper.ts","../ui/components/subtexts.ts","../ui/components/player-table.ts","../ui/components/total-points-count.ts","../ui/components/player-page.ts","../ui/components/loader.ts","player.ts"],"names":[],"mappings":";;;;;AAGA,AGGA,AMNA,ITGM,OAAO,GAAe,UAA5B;AKCA,ALwBS,Ae5BT,AJAA,AEEA,ALFA,AEAA,ILIM,AUJA,AJAA,AEEA,ALFA,AEAA,GV4BG,CAAA,Ke5BM,Ef4BN,AW5BQ,CNIC,AUJA,CPAC,CR4BV,AW5BW,CNIC,CGJC,GKEG,AHFA,EV4BhB,Ae5BH,CFEsB,AHFA,CCAtB,CNIA,CGJA,KOAY,CFEZ,AHFA,EKAY,CJAE,CAAC,CNIA,CAAC,CGJA,CAAC,CHIF,EAAuB,AMJxB,CHAE,CGAc,CHAD,KKEP,AHFA,CGEC,AHFA,CGED,AHFA,EGEe,AHFL;ALKpC,ALDF,AGGA,AMNA,AEAE,AEEA,ALFA,AEAA,IVGI,AGGA,AMND,EJIC,AMJE,AEEA,ALFA,AEAA,CCAC,AEEA,EREA,AKJE,CLID,AMJE,AEEA,EHFE,CVGC,AUHA,CFAC,AEAA,CLIV,CLDY,CQHC,CCAnB,AEAoB,AEEA,CFFC,AEEA,AHFP,CLIM,AKJE,CLIpB,CKJY,CLIS,AKJrB,EVGF,AQH2B,CAAC,ELME,GAAG,CQNrB,AEEA,CFFuB,AEEA,MFFvB,AEEA,ALFO,CLMb,AQNJ,AEEA,ALFwC,UAAvB,CAAjB,aLM+B,CAAC,IAAD,EAA+E;AEFvF,ALuBP,AGpBhB,AQNA,AEEA,ALFA,AEAA,ECAA,AEEA,ALFA,CGAC,AEEA,CFFC,AEEA,ELFE,AEAE,CV0BU,CAAA,CGpBT,AKNA,AEAE,ELGqB,CKHlB,CCAZ,AEEA,ALFW,AEAE,CLGU,AMHX,AEEA,ALFA,AEAE,GV0BE,AW1BhB,AEEA,CFFgB,AEEA,ALFT,CLMC,AONI,CV0BI,AQ1BhB,AEAoB,EAAR,CPML,AONP,EPMuB,CUJvB,GbwBgB,AW1BhB;ANGmC,ALCrC,AGGI,AMRJ,AMAE,AJEA,AEEA,ALFA,CCFF,CEEE,AEEA,ALFA,CGAC,AEEA,CbCG,AWHF,AEEA,EEJI,CAAC,GAAG,APEF,CLMC,AMRN,ADEM,EGAT,AEEA,CAAY,CVIC,CAAC,AQNA,CEEd,CEJkB,AFIF,CVIP,AYRU,CZQD,AKNlB,GGAA,AHAqB,ECFvB,EAAmB,ADEjB,GRG8B,AGGX,EYRT,AFIV,CbCiC,AeLA,KAAvB,CAAV,EZQkB,EAAc,CAAd,EAAe,UHHnC;AAsB6B,AGnBW,AMPpC,AEEF,AEEA,ALFA,AEAA,EDFE,AIIF,CAAC,CAAC,GbsByB,AUxBtB,CVwBsB,CWxBpB,AHAA,CGAP,CDAS,CAAC,CPK4B,AUHtC,EHFa,CDFX,AIIY,AHFd,CPK0C,AMPxC,ADEa,CLK4B,AKL3B,AEAA,CAAC,GAAG,EDFlB,CAAA,ADEK,AEAgB,CFAC,AEAA,EDFtB,AIIsB,CVGkB,AUHjB,CAAC,CVG8B,CAAd,AOL1C,CPKsC,CHmBX,AUxBK,CDF9B,ACE+B,CGET,ALFxB,CRwB2B,AatBO,AHFlC,EAAqC,SGEvB,GAA+B,SAA7C,GbsB2B;AKtB3B,ALCF,AGE4D,AMNxD,AMDF,AJGD,AEEC,ALFD,AEAG,CCLJ,AHAA,CCGI,CMDF,CfKI,CGEK,AYPT,CVII,AFGF,EYPF,ALGQ,CLCD,AUJN,AFKM,CRDC,AUJN,AFKF,EHFY,GLCR,AKDW,CVEC,ASJd,CAAA,CCEgB,CVEC,AeLnB,ALGmB,CLCD,AKDA,CLClB,AUJY,ALGV,ELCmB,CUJrB,CAAe,CNCb,CAAA,GAAA,AMDF,CfKF,AeLiB,EAAf,EAAmB,CAAC,GNClB,KMDiB,EAAW,QAAX,CAAnB;AVIuB,ALsBgC,AGlBtD,AMNC,AGHJ,ACOC,CAND,CJEI,CNIF,CSPF,GZ2ByD,CAAA,GKtBzB,EAAP,AOLzB,GHGI,AGHJ,CHGI,GTwBqD,GAAA,AY3BzD,CAAA,OHGI,CAAA,GTwBqD,ASxBrD,cAAA,uBGHJ,CAAA;APKoC,ALGpC,AGEC,AMNG,AMFF,AJ2BO,AHvBT,AEDI,CPCJ,CMFI,AMFF,CAAC,CfME,AeND,GJ2BK,AHvBT,CGuBS,AHvBT,AEDQ,IAAI,CKHV,CfMF,CQFA,CCFI,AMFY,CNEZ,ACCa,CFCF,CGuBN,CDxBD,ECwBC,EDxBe,EDDpB,CAAA,CCCwB,CKH1B,CNEE,CDEJ,EGuBS,ADxBwB,GAA7B,EAAkC,CDDlC;AACA,AMFF,AHFF,ACQA,AHHM,EDDF,EGJJ,EFKM,CGGN,CAAA,CENS,ALGA,CKHP,ALGQ,KGGV,AHHM,CDDF,CAAA,CIIW,EDRf,GAAA,GHII,CAAA,GAAA,OIIJ,CDRA,CHII,AGJJ,OAAA,CAAA,6BAAA,CAAA,CAAA;APKE,ALEF,AGmBqC,AMrBpC,AMFA,AJED,ADCK,CVCL,ASRA,AMDA,ENCK,CEMC,CDDF,EPsBiC,CAAA,CErB5B,ELEJ,AUDM,ELDE,CAAC,GAAL,AINU,CJMD,CAAT,EAAY,ALErB,AWFuB,CFNlB,CTQU,CWFW,ENAA,GAAG,CAAC,EFqBO,CQrB/B,ENAG,AFqB4B,CErBnC,AINiB,GAAA,EAAA,CAAnB,QEM0B,CAAC,OAAD,CRqBW,CQrBK;ANCzC,ALEG,AYNJ,ADIE,ADCI,CLLN,CLMI,EYNJ,EDIQ,CAAC,GAAG,EXER,CAAA,AUDS,GAAG,CELhB,AFKiB,CCDG,CAAC,CCJrB,CFKa,CVCT,AUDkB,CVClB,CUDS,CAAP,CVCF,MWFQ,CXER,AWF+B,ECJnC,CAAA,GDIY,CAAV,GCJF,CAAA,qBAAA,CAAA,CAAA;AZOI,AGEJ,AMJA,AMFA,AJEE,ADCG,EVCD,AWFF,CAAC,CRIG,AQJF,GFAJ,AMFA,CNEA,AMFA,IfII,CAAA,AWFF,CAAY,CFAd,AMFA,CZMkB,CQJhB,CFAa,AMFA,AJEG,CRIG,QHFjB,AeJJ,CfII,AGEE,CQJJ,EXEE,CSFJ,QNIqB,CAAC,IHFlB,AGEiB,EAAkB,GAAlB,EAA6B;AEKxB,ALNtB,AGEF,ASTF,ADKE,ADCC,EVCC,AWFF,CAAC,CCLH,ADKI,GNQsB,CAAA,CFJjB,GHFL,CAAA,AGES,AQJX,CRIY,EQJE,CCLhB,GPa0B,AFJjB,ASTT,CTSqB,CHFjB,CKMsB,ALNtB,AWFF,GXEE,CYPJ,CAAA,GTSsB,CAAD,EHFjB,AGEqB,CEIC,AFJL,EAAK,YST1B,CAAA;AZQI,AGC2B,AQH7B,EXEE,OWFK,ERGsB,CHD3B,AGC4B,CHD5B,IGCiC,GAAN,EHD3B,CAAA,GAAA,QAAA,MWFgC,OAA3B,GAAkC,SAAzC;ANDF,ALIC,AGAuC,ASRxC,ADMC,ADCC,CVJF,AWFA,EXEK,AGKI,CEJH,AFIJ,ASRF,KFOS,CAAP,GVJa,CYHf,GAAA,CZGK,GKCkB,GAAG,AOJ1B,CAAA,GZGe,GAAA,EKCT,ALDS,CAAf,GYHA,CAAA,YPI0B,CAAC,MAAD,EAAe;AACvC,AFID,AODA,CPDD,AObA,QLWS,UAAC,CAAD,EAAqB;AAC1B,ALgBmE,AYpBvE,ADMA,ICNM,ADMA,GXciE,CKhB7D,ALgB6D,CKhB5D,CMEC,ENFE,CAAC,AMEA,CNFC,GAAF,AOJK,CPIC,ALgBmD,EYpBjD,CZoBiD,CWdjE,CNFQ,CAAY,IMEX,CCNT,ADMU,EXcuD,EKhBnE,IMEW,EAA0B,GCNnB,CACpB,CADoB,EACC;APKnB,ALEJ,AGY+D,ASjB7D,ADGc,ADcG,IVZd,EYLG,ADGQ,CRc+C,AOA5C,CPA4C,AOA5C,GLdR,AOHE,GAAG,ADGA,CNAD,CAAC,ALEhB,GWFgB,CRc+C,CEdpD,CAAW,CAAC,AFcwC,ASjBvD,CDGQ,CAAA,ENAS,AMAT,ADcG,CEjBH,CAAC,CFiBE,CLdU,CAAC,COHd,EPGS,AFcsC,ASjBhC,CPGG,CAAC,EOHnB,EPGuB,AOHI,CPGH,CAAL,GAAO,CAAR,EKcf,GLd2B,CAAC,GAAC,MAAF,GAAW,CAAvB,IAA0B,CAAnC,CAAH,IAA0C,IAArD,CAAP;AACD,AOHC,ADEY,GNHd,CMGc,OCFL,CDEK,GAAA,KAAA,ICFL,CAAA,OAAA,CAAc,iGAGb,IAHa,GAGT,cAHS,GAIb,IAJa,GAIT,qCAJL,CAAP;APIH,ALAD,AGCA,ASGG,ADNsC,ADEzC,CLNA,ALMA,EYLE,CTMI,AODA,OVAD,CUAS,GAAG,QVAjB,CUAM,CVAW,EGCY,GAAG,EODf,CAAC,IAAD,EPCX,AODwB,uBPCE,CAAC,IAAD,EAAgB;AHA5C,AGCF,AODA,EVAE,IGCI,AODA,MAAM,EVAV,AGCY,CHDZ,AUAa,EPCE,EHDf,CAAA,GAAA,AUAqB,CAAC,EPClB,EODiB,EAAO,EAAP,CAAvB,CPCiB,CAAC,GHDhB,QGCe,EAAqC,CAArC,EAA8C;AEAzB,ALApC,AGCA,ASGF,ADPA,ADIA,EVDE,IYIE,AFHE,CLDgC,AOIjC,CPJiC,AFChC,ASGN,CTHO,AQJA,CCOC,CFHG,GVDT,AGCU,AOAE,CVDZ,AGCA,EAAa,AQJA,CDIG,CVDhB,AUCiB,CVDjB,AWHgB,GXGhB,CUCY,CLDwB,AKCb,GLDa,GKCP,EVD7B,CUCgC,GCJC,CAAC,ADItB,CAAd,ICJmC,CAApB,CNGuB,EMHO,WAAW,CAAC,KAAD,CAAxD;AXIE,AGCE,ASGF,ADPH,ADIC,CCNF,CXKI,IUCI,KEGG,ETHE,AOAE,CVDX,CAAA,CYIY,AFHE,CEIZ,EZLF,CAAA,AUCkB,CAAC,EVDnB,CGCE,EOAY,CAAW,CAAC,MAAM,GAAI,IVDpC,AYIY,CFH6B,CEKvC,EFL0C,IAAnB,IAA4B,EAAvC,CAAhB,WEGc,CAAZ;AZHA,AGCC,ASMF,AFND,EVDE,IUCI,OAAO,CVDX,CAAA,CUCc,GVDd,CAAA,EUCoB,CVDpB,EUCwB,KAAK,GAAG,IVDhC,AUCc,GAA2B,OAAO,GAAG,EAArD;AVAE,AWSkB,ADPpB,EVFE,IUEI,CCOc,CAAA,CDPX,GAAG,CAAC,CVFX,AWSkB,CXTlB,EWSkB,CDPR,CVFV,CAAA,AUEkB,GVFlB,AWSkB,IDPR,EAAiB,OAAjB,EVFV,AUEoC,GAA1B,CAA8B,UAAA,CAAA,EAAC;AVDzC,AGAA,ASOF,AFN+C,EVD7C,IYOI,KTPG,AOCsC,GVD7C,CAAA,AYOa,EFNsC,CEMnC,AFNoC,CVDpD,AUCmD,CVDnD,AUC6C,CAAU,CPDrC,CHAlB,AGAmB,CSOG,CAAC,CAAC,CAAC,ETPlB,AOCsC,CPDnB,ASOH,AFNyC,CEMnC,AFNgB,EAAsB,EVDnE,CYOuB,AFNsB,CEMV,AFNU,GPDlB,CAAD,EAAI,CAAJ,EAAK,ASOT,CAAN,CAA8B,KAA9B,CAAoC,GAApC,CAAlB;AZNE,AGDoC,ASQtC,ADZF,ADK2E,EVAvE,CUAU,CCLR,CDKuE,CEOrE,GDZG,ADKG,CAAoE,ECLpE,CRI0B,AOC1B,CVAV,AGDqC,AOCvC,CVAE,AYOa,GAAG,CZPhB,AGD0C,CHC1C,AGDoC,CQJlC,EXKF,GWLU,CCYe,ADZd,CCYe,CAAD,ADZf,CCYZ,CDZyB,IXKvB,IWLU,EAAsC;AXMhD,AGF2C,ASS7C,ADbyB,ADOzB,EVDE,GGFO,CAAP,ASSI,ADbmB,GDOlB,GEMK,EZPV,AWNuB,CXMvB,AYOa,IZPb,AW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A,EAAU,IDHpB,GCGU,ADHV,ECG2B,YAAA;AIb/C,ACFA,AHeI,AHFF,AaZF,AEDA,IVEA,ACFA,AOCA,AEDA,KZeS,AHFA,GKXT,CUFA,CTAA,CDEA,CUFA,CTAA,AOCA,CVcI,EUdJ,CVcqB,CHFD,EMbpB,CAAA,CNaS,GAAe,CKXxB,CAAA,AUFA,CAAA,GZemC,AUdnC,CVcoC,AHF3B,AaZT,ERCA,CAAA,AFaqB,AHFW,AebhC,CZewC,AYfxC,GFCA,CAAA,MPDA,AHeyC,AHFvC,CMbF,KDEA,CAAA,AFawC,CEbxC,CFagD,MUdhD,CAAA,CAAA,KEDA,CAAA,CAAA;AZeqD,AHDpD,CAFD,YGGqD,IAAI,KAAJ,CAA8B,OAA9B,CAAA;AEZrD,ACFA,AHc2F,AUb3F,AEAA,IVCA,ACFA,AOCA,AEAA,CZaqB,CAAjB,OEZJ,GAAA,CUDA,CFAA,EEAA,CFAA,ERCA,CAAA,CCFA,GAAA,ODEA,ACFA,ASCA,CVCA,ACFA,AOCA,AEAA,CFAA,MEAA,CFAA,AEAA,CFAA,gBAAA,CAAA,CAAA,SPDA,CAAA,CSCA,CAAA,CAAA;AZcI,AHAJ,IAAM,KGAG,UHAY,GAAG,GGApB,GAAwB,GHAtB,WGAoC,CAAC,GAAf,AHAJ,CGAuB,AHAhB,KAAP,EAA6B,GGAL,CAAD,EAAE,EHAzB,EAAuD;AKX/E,ACFA,AHasD,AFArC,ADA8D,Aab/E,AEAA,IVEM,ACFN,AOAA,AEAA,Kfa+E,IGAzB,AYbtD,CZasD,CGbtD,CSAA,CdaiB,CIXG,ACFpB,ALaiB,ADA8D,CAAA,EKXxD,EUFvB,Cfa+E,Aab/E,AEAA,Efa+E,Cab/E,GREM,CLWyE,CAAA,CMb/E,CAAA,ANakF,OMblF,ANa+E,CMb/E,AOAA,CbayF,AabzF,CREuB,CAAO,IAAP,CQFvB,CRE6C,AQF7C,IPAA,ANayF,CMbzF,CAAA,ESAA,CAAA,aFAA,CAAA,CAAA;ARE6C,AFWU,AFAtC,KEAW,CAAxB,GEXyC,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAG,OAAH,EAAU,YAAA;ACAvD,AHYG,AFDc,AYXjB,AEAA,ITAM,AOAA,AEAN,QdWuB,AcXvB,GAAA,CTAkB,GAAG,COAC,CZWC,CAAA,CYXE,KPAnB,ESAN,CAAA,CFAM,CZWiB,EAAN,CAAA,EcXjB,CAAA,CTAqB,GAAA,KOAI,CAAO,KAAP,EAA2B,QEApD,CFAyB,AEAzB,CAAA,CFA0E;APArD,AHcnB,AUdwE,SPArD,AOAqD,SPArD,AOAqD,CPArD,AOAqD,KPArD,AOAqD,EPArD,AOAqD,KPArD,AOAqD,CPArD,AOAqD,EPArD,AOAwD,KPAxD,CAAA,COAqD,CPArD,COA+D,WPA/D,COA+D;ARC5E,ALWE,AeVV,IAAM,EVDE,EUCE,EVDE,CUCC,EVDE,IAAI,ALWT,CAAA,EKXK,AUCT,EVDE,EUCK,GAAA;AVAL,AJSA,ADCE,AeVG,MVAL,GUAK,CdSL,MAAM,EcTD,CdSI,AcTJ,CVAS,CJSL,CAAA,CITQ,CUAZ,EdSI,AcTJ,CVAgB,CAAC,AJStB,GITiB,AUAZ,CVAqB,AUArB,EAAA,KAAA,CAAA,EVAsB,AUAtB,GVAqB,EAAI,OUAzB;AVA8B,AFazC,AFHoB,ADAZ,EGGR,MAAA,CAAA,GHHc,GKV2B,EJUrB,ADAD,CKVyB,AFa5C,AFHoB,ADAG,CKVsB,AFa7C,MEbyC,ILUP,CGGlC,GAAA,CHHoC,SGGvB,CAAb,EAAmC,CAAnC,EAA8C,CAA9C,AHHuB,EGGkC,CAAzD,AHHqD,EGGa,OHHb,CAAA,OAA9B,GAAqC,SAArC,GAA+C,KAAK,CAAC,EAArD,GAAuD,GAAvD,GAA2D,QAAQ,CAAC,EAAxE,CAAX,CAAA;AKV2C,AFcjD,AFJkB,OIVG,CAAjB,AFcE,CAAC,GAAG;AEZZ,ACFY,AHeR,AFLgB,AYXd,MRGN,AFaI,IEbA,AQHE,CRGD,AFaI,CFLiB,CEKf,CAAC,CAAC,AUhBF,EPCC,CDEZ,ACFY,AODE,CRGD,CFYD,CFJc,CAAA,OIRZ,MQHA,KRGD,EAAc,AJQD,CIRb,AJQkC,EIRnB,IJQyB,CAAC,IAAP,CAAY,CAAZ,CAArB,CAAN,CAAA;AIPlB,ACHU,AHgBR,AHNJ,AaXsB,MViBlB,GAAG,EAAE,CAAC,AUjBY,CViBX,EEbT,CFWU,CHJZ,CAAA,GaXgC,CAAC,IRIpB,CAAC,IQJQ,GRIpB,AQJ2C,CRIvB,CQJA,SRIC,KAAD,EAAQ,CAAR,EAAS;AAC3B,ACJQ,AHiBR,AHPJ,AaXiD,MVkB7C,KAAK,AUlBH,CPCY,CHiBP,CEbD,EAAE,GAAG,GCJG,CAAA,KDIH,CAAA,eCJG,EDIH,ACJH,CDIqB,ACJrB,KDI0B,CAAC,IAAN,CAAW,CAAX,EAAc,GAAd,CAAkB,KAAlB,CAAwB,SAA1C,CAAX;AAEA,AFQQ,AFJN,ADAN,AeTM,KZaJ,KERE,AJIE,AcTA,EfSE,EAAA,CKJC,ALID,CKJE,GLIF,AeTO,CVKX,AJIY,CIJD,ALIR,CAA2F,AeThF,CdSE,EAAA,CAAA,ADAb,EKJH,ALIJ,CKJuB,ALIvB,CCAoB,AcTM,CAAC,CdSrB,OIJkB,CAAD,EAAE,GULP,CAAwB,kBAAxB,CAAZ;AVMA,AFYJ,AFRgB,AYVlB,AEEA,SZgBO,CUlBP,AEEA,KFFK,CRMO,CAAC,AJIK,CEQhB,AFRgB,CEQD,AYhBP,CVIM,AFYd,AYhBS,CVIM,CAAC,AFYE,CAAlB,EEZc,CAAM,CFYG,CAAvB,GYhBF,CAAuB,CVIP,CAAc,CAAd,CAAV,CADmB,CAGnB,EUNiB,CAAA,OAAA,EAAvB;ATHM,AHoBL,AFTiB,GEElB,OGbM,GAAG,EOGL,CPHQ,AOGP,EPHO,CAAA,EOGF,CAAC,CPHC,EAAN,KOGF,OAAA,CAAA;AROE,ACTF,ALUc,AYRd,AEEE,GfIuE,CAAA,MMRzE,ASIE,EdMkB,EKVhB,EDSE,AULE,CVKD,ACTW,CDSV,CJCmB,AcNhB,CVKT,ACTmB,ALUO,CKVN,CDSV,CJCQ,CAAY,CKVd,CAAS,GAAT,CAAa,ALUO,CAAC,IAAP,AcNpB,CdMgC,AcNjC,EAAe,CdMM,CKVA,ALUgB,UAAC,CKVlB,EAAY,ALUK,EAAI;AIAhD,ACV4C,AHqB7C,AFXsD,ADA9D,AaRK,AEGF,CfGJ,CGaS,MAAA,CAAA,GUnBH,CAAA,CRQI,AQRJ,IRQQ,AFWL,CEXM,ACVuC,AHqB7C,AFXsD,AcLpD,GVKD,CAAS,CAAC,CAAC,EAAX,CJAqD,CAAA,CKVE,CAAC,CDUtC,AULjB,CAAA,CTL2C,CAAgB,CDUtC,AFWvB,CEXwB,EFW/B,CEX0B,AULjB,CVK0B,AULT,CVKU,AUL3B,CVK4B,CULR,CVKH,ACV2C,EDU5B,CJAoB,CEWnC,AFXuD,EIApC,CFW7C,AFX6D,CAAA,AcLpD,CZgB4B,AYhBnC,CTLkE,EAAW,EDUlC,CAAA,OAAJ,CAAW,CAAC,CAAC,EAAb,EAAiB,cAAjB,CAAf,CAAlB;AACA,ACX4E,AHsBlF,AFZmF,AYPnF,AEGD,QZgBK,EUnBJ,CZOkC,AcN9B,CdMkB,CEYb,AFZO,CAAA,IICJ,CQRF,CRQI,AQRH,CPHuE,EDWjE,IAAI,CAAC,CFWlB,CAAsB,CEXT,ACX2E,AOG5F,CRQ0B,ACXmE,AOGtE,CRQI,AFWvB,CEXwB,AFW5B,EEXiB,ACXiE,AHsBlD,CEX1B,QQRiB,CAAA,OAAA,CAAc,oDAAd,CAAvB;ARSM,ACZ2F,AHuB/F,AHeJ,OAAA,CAAA,KMtCoD,AHuBzC,CEXH,ACZ4C,EDY1C,CAAC,CFWK,KHehB,GAAA,EK1BQ,CAAe,CAAf,EAAkB,EAAE,AFWjB,CEXkB,AFWI,CEXL,CAApB,CFWG,CEXsB,AFW7B,CEXI,CL0BR,CK1BoC,CAA5B;AACD,ACb6F,AHwBjG,AYjBG,UAAA,CTPgB,CAAlB,GSOO,GAAG,iBAAA;AVOT,ACXC,ALOA,ADER,AeJI,IfIE,MMTE,ALOA,CILF,QJKW,AcFN,GdES,EAAA,CKPG,ALOH,AcFH,CAAC,ETLsC,CACpD,ALMgB,EAAZ,ADEyB,GAAG,SAA9B,OMRF,CAAA,mBNQgC,CAClC,GMVsD,CAAhD,CNS4B,EAElC,QAFkC,EAGlC,KAHkC,EAIlC,GAJkC,EAInB;AKDZ,ACTH,AHoBE,AFfW,ADKE,AeRG,QZkBV,CExBN,ALca,CKdb,ACIF,CHoBW,GAAG,AYlBI,GdGL,CAAA,ADKE,CGUI,AHVJ,CeRS,EAAE,EfQX,CMVA,CAAC,ANUD,EGUD,CAAe,EHVd,CGUD,AHVC,CMVf,CAAwB,AHoBU,AHTjC,MGSa,CAA2B,AHV1B,EACP,CMXiB,KAAD,EAAM,AHoBY,GAAD,CHTjC,CGSuC,CAAN,EAAO;AEX5C,ACTiC,AHoBgB,AFfxC,AcHG,OVPhB,KCKqC,CHoBgB,AYlBtC,CAAb,ETFuC,AHoBe,GGpBZ,AHoBe,CAAC,CAAC,GGpBZ,CAAC,CHoBG,GGpBJ,CAAZ;ADYrC,ACZyD,AHoBS,AFfrD,AYJE,AEEd,KZiBa,EAAsD,CAAtD,CAAZ,EGpBF,ASCM,CdIa,CIOnB,CAAA,GQXe,CAAA,CZIW,CAAC,GAAR,CAAY,UAAU,CAAC,IAAX,CAAgB,GAAhB,CAAoB,UAAC,GAAD,EAAI;AIOvD,ACTO,AHkBL,AFfA,AYLa,SVoBR,QGlBA,CAAA,CLGE,MEeP,CAAsB,AFfR,CAAC,EEef,CFfO,CAAY,EEeU,GAA7B,CFfyB,CAAC,IAAP,CAAY,GAAZ,CAAgB,UAAC,GAAD,EAAM,CAAN,EAAO;AIM5C,ACTO,AHoBL,AFhBE,ADKI,AaXO,AEIT,QVOC,EUPD,CZkBG,CEXT,AQXqB,CRWrB,CFWE,GHXM,AaXkB,CZMlB,ADKA,AaXmB,GZMhB,AcFM,CdEL,EYNS,AEID,CFJc,CZM1B,EcFgB,GdEH,CYNA,EAAN,CAAA,KZMM,CAAA,EcFD,CAAoB,MAAM,CdEzB,AcF0B,CdEf,OcFQ,CAAgB,IdEhD,EcFY,EdE4B,AcFgB,GdEb,AcF/B,CdEgC,AcFgB,IdEpB,IcF5B,CdEyC,AcFvD,SdEuD,CAAA,YAAA,CAAa,EAAtE,EAA0E;AKJvE,AHqBN,AFhBK,ADIE,GGGD,SGZM,WAAA,CAAA,OAAA,CAAe,IAAf,CAAN,CAAA;ALMD,ADGE,AeLR,GVhB2C,CAAA,QLqB7B,EeLV,CAAC,EfKc,CAAI,ECHX,McFZ,EdEoB,AcFF,CfKgB,ECHX,GDGa,MCHJ,CAAC,CAAD,CAAT,CAAa,IAAb,CAAkB,CDGlB,GCHA,ADG8B,CCHP,QDGO,CAAA,CCHN,CAAD,EAAE,GDGzB,GAAqC,SAArC,GAA+C,KAAK,CAAC,EAArD,GAAuD,GAAvD,GAA2D,QAAQ,CAAC,EAApE,GAAsE,OAAtE,GAA8E,KAA9E,GAAmF,GAAnF,GAAuF,GAA3F,CAAX,CAAA;AKCT,AFaC,AFjBqD,AYR7C,AEON,CVjBJ,CFmCE,MAAA,CAAA,CUzBQ,IAAI,GAAG,EAAA,AEOb,CFPa,AEOb,GZkBF,CAAW,AUzBI,CZQsC,CAAC,AYR9C,CZQ+C,GEiB5C,CAAA,AFjB0C,KAAW,IEiBhE,EAAW,GFjBqD,CAAA,SEiBhE,EAAsB,eFjB+B;AKPrD,ALO0F,AYPxF,AEMA,SZkBF,CUxBE,OZOqB,CAAjB,CYPM,CAAC,IVwBb,OUxBE,CAAuB,aAAA,CAAA,OAAA,CAAc,SAAO,IAAP,GAAW,OAAzB,CAAvB;ARaJ,ACZE,AHuBA,AFhBM,ADEN,AaTE,AEKA,OVOJ,CAAA,EFWE,AUvBE,IEKO,CVOX,AFWE,EGvBA,ANSA,CKGa,ACZb,AHuBA,AHdA,CaTY,AEKE,CdEF,AYPC,CEKX,CZkBF,AYlBE,GdEe,GAAG,GYPlB,CRYJ,AQZ2B,EZOC,CAAC,OAAP,CAAe,GYPV,CAAA,IZOmB,CAAC,EYPpB,CAAe,GZOL,CAAiB,CYP3B,CAAvB,IZOkB,EAAwC,IAAxC,CAA6C,UAAC,EAAD,EAAY;AKP7E,ANSA,AaRE,AEKD,UFLC,SAAU,CAAC,EZMsD,IAAA,GAAA,EAAA,AYNjE,CZMiE,AYN1C,CZM0C,mBYN1C,CAAA,OAAA,CAAoB,KAApB,CAAvB;APDF,AHwBE,AHfF,YMTO,ANSC,CGeC,CGxBF,ANSC,CMTD,ANSC,GGeM,CGxBP,ANSC,EMTR,ANSO,CMTP,ALOyE,ADE6C,GCF7C,CDElE,ECFkE,ADEzE,CAAA,CCFyE,CAAA,CAAA,EEiBhE,CAAsB,MAAtB,CAA6B,UAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAU;AAAK,AFjB6B,eEiB7B,GAAG,GAAG,IFjBuB,CEiBnB,CAAC,CFjBqB,CAAC,KAAJ,KAAc,KEiBrC,CAAuB,CAAvB,CAAN,CFjB2C,CAAA,YAAd;AEiBE,AFjBwB,OEiBnG,EAA6E,CAA7E,CAAP,MFjBkB,CAAd;AEkBL,AFhBK,GKrBa,ANmBJ,CMnBI,ANmBJ,CGgBO,kBFdT,SAAA,CAAA,2BAAA,CAA4B,GAA5B,EAAiC,GAAjC,EAAsC,QAAS,CAAC,EAAhD,EAAoD,KAAM,CAAC,CAAD,CAA1D,CAAP;AKRP,ALSM,ADAN,CMtBD,ANeA,mBGoBwB;;AGpBxB,AHoBwB,AFZlB,ADmBJ,AepBc,GZad,IGpBF,AN2BE,CM3BF,AN2BE,OM3BF,ESOgB,CTPD,AS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","file":"player.1a7f322d.js","sourceRoot":"..\\src\\app\\pages","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport SpeedrunId from '../models/SpeedrunId'\r\n\r\nconst GAME_ID: SpeedrunId = 'o1y9j9v6'\r\nconst GAME_NAME = 'Celeste'\r\n\r\nconst COLLECTIBLES_VARIABLE_NAME = 'Full Clear / ARB / HC'\r\nconst FC_RUN_VALUE = 'Full Clear'\r\n\r\nenum Categories {\r\n    A_SIDES = 'Clear',\r\n    COLLECTIBLES = 'Collectibles',\r\n    B_SIDES = 'B-Side',\r\n    C_SIDES = 'C-Side',\r\n}\r\n\r\nenum ChapterNames {\r\n    C1 = 'Forsaken City',\r\n    C2 = 'Old Site',\r\n    C3 = 'Celestial Resort',\r\n    C4 = 'Golden Ridge',\r\n    C5 = 'Mirror Temple',\r\n    C6 = 'Reflection',\r\n    C7 = 'The Summit',\r\n    C8 = 'Core',\r\n    C9 = 'Farewell',\r\n}\r\n\r\nexport { GAME_ID, GAME_NAME, COLLECTIBLES_VARIABLE_NAME, FC_RUN_VALUE, Categories, ChapterNames }\r\n","import { GAME_ID } from './constants/celeste'\r\nimport SpeedrunApiResponse from './models/SpeedrunApiResponse'\r\nimport SpeedrunCategory from './models/SpeedrunCategory'\r\nimport SpeedrunId from './models/SpeedrunId'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\nimport SpeedrunLevel from './models/SpeedrunLevel'\r\nimport SpeedrunUser from './models/SpeedrunUser'\r\nimport SpeedrunVariable from './models/SpeedrunVariable'\r\n\r\nconst HREF = 'www.speedrun.com'\r\nconst API_VERSION = 'v1'\r\n\r\nconst getBasePath = () => {\r\n  return `https://${HREF}/api/${API_VERSION}`\r\n}\r\n\r\nconst fetchLevelBoard = async (level: SpeedrunLevel, category: SpeedrunCategory): Promise<SpeedrunApiResponse<SpeedrunLeaderboard>> => {\r\n  return (await fetch(`${getBasePath()}/leaderboards/${GAME_ID}/level/${level.id}/${category.id}`)).json()\r\n}\r\n\r\nconst fetchLevelBoardWithVariable = async (\r\n  level: SpeedrunLevel,\r\n  category: SpeedrunCategory,\r\n  varId: SpeedrunId,\r\n  val: SpeedrunId\r\n): Promise<SpeedrunApiResponse<SpeedrunLeaderboard>> => {\r\n  return (await fetch(`${getBasePath()}/leaderboards/${GAME_ID}/level/${level.id}/${category.id}?var-${varId}=${val}`)).json()\r\n}\r\n\r\nconst fetchLevels = async (): Promise<SpeedrunApiResponse<SpeedrunLevel[]>> => {\r\n  return await (await fetch(`${getBasePath()}/games/${GAME_ID}/levels`)).json()\r\n}\r\n\r\nconst fetchLevelCategories = async (level: SpeedrunLevel): Promise<SpeedrunApiResponse<SpeedrunCategory[]>> => {\r\n  return await (await fetch(`${getBasePath()}/levels/${level.id}/categories`)).json()\r\n}\r\n\r\nconst fetchLevelVariables = async (level: SpeedrunLevel): Promise<SpeedrunApiResponse<SpeedrunVariable[]>> => {\r\n  return await (await fetch(`${getBasePath()}/levels/${level.id}/variables`)).json()\r\n}\r\n\r\nconst fetchUser = async (user: SpeedrunId): Promise<SpeedrunApiResponse<SpeedrunUser>> => {\r\n  return await (await fetch(`${getBasePath()}/users/${user}`)).json()\r\n}\r\n\r\nexport {\r\n  fetchLevelBoard,\r\n  fetchLevelBoardWithVariable,\r\n  fetchLevels,\r\n  fetchLevelCategories,\r\n  fetchLevelVariables,\r\n  fetchUser\r\n}\r\n","import SpeedrunApiResponse from './models/SpeedrunApiResponse'\r\nimport SpeedrunCategory from './models/SpeedrunCategory'\r\nimport SpeedrunLevel from './models/SpeedrunLevel'\r\nimport SpeedrunVariable from './models/SpeedrunVariable'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\nimport { fetchLevelCategories, fetchLevelBoard, fetchLevels, fetchLevelVariables, fetchLevelBoardWithVariable } from './wrapper'\r\nimport { Categories, ChapterNames, COLLECTIBLES_VARIABLE_NAME, FC_RUN_VALUE } from './constants/celeste'\r\n\r\ninterface RawDataCollection {\r\n    categories: SpeedrunApiResponse<SpeedrunCategory[]>,\r\n    levels: SpeedrunApiResponse<SpeedrunLevel[]>,\r\n    grid: SpeedrunApiResponse<SpeedrunLeaderboard>[][],\r\n    variables: SpeedrunApiResponse<SpeedrunVariable[]>[]\r\n}\r\n\r\nconst getRawLeaderboardData = async (): Promise<RawDataCollection> => {\r\n  const levels = await fetchLevels()\r\n  const categories = (await fetchLevelCategories(levels.data[0]))\r\n  const variables = await Promise.all(levels.data.map((lvl) => fetchLevelVariables(lvl)))\r\n  const grid = await Promise.all(categories.data.map((cat) => {\r\n    return Promise.all(levels.data.map((lvl, i) => {\r\n      if (cat.name === Categories.COLLECTIBLES && lvl.name !== ChapterNames.C9) {\r\n        // find the 2 relevant IDs based on variable name and run value label\r\n        const variable = variables[i].data.find((x) => x.name === COLLECTIBLES_VARIABLE_NAME)\r\n        const value = Object.entries(variable!.values.values).find(([_key, val]) => val.label === FC_RUN_VALUE)\r\n\r\n        return fetchLevelBoardWithVariable(lvl, cat, variable!.id, value![0])\r\n      }\r\n      return fetchLevelBoard(lvl, cat)\r\n    }))\r\n  }))\r\n\r\n  return {\r\n    categories,\r\n    levels,\r\n    grid,\r\n    variables\r\n  }\r\n}\r\n\r\nexport { getRawLeaderboardData }\r\n","import LevelGrid from './models/LevelGrid'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\n\r\n/** function that transforms a LevelGrid in some way */\r\ntype gridTransformationFunction = (grid: LevelGrid) => LevelGrid;\r\n\r\n/** returns a gridTransformationFunction, using the given callback function in grid.map */\r\nconst getGridMapTransformation = (func: (levelColumn: SpeedrunLeaderboard[], i: number) => SpeedrunLeaderboard[]): gridTransformationFunction => {\r\n  return (grid: LevelGrid): LevelGrid => {\r\n    return grid.map((levelColumn, i) => func(levelColumn, i))\r\n  }\r\n}\r\n\r\nconst removeColumn = (grid: LevelGrid, col: number): LevelGrid => {\r\n  return grid.filter((_, i) => i !== col)\r\n}\r\n\r\nconst removeFarewellObsoletes = (grid: LevelGrid): LevelGrid => {\r\n  const callback = (levelColumn: SpeedrunLeaderboard[], i: number) => {\r\n    if (i === 0) {\r\n      return levelColumn\r\n    }\r\n    return levelColumn.filter((_, i) => i !== 8)\r\n  }\r\n\r\n  return getGridMapTransformation(callback)(grid)\r\n}\r\n\r\nexport { gridTransformationFunction, getGridMapTransformation, removeColumn, removeFarewellObsoletes }\r\n","import SpeedrunId from '../../speedruncom/models/SpeedrunId'\r\nimport SpeedrunRankedRun from '../../speedruncom/models/SpeedrunRankedRun'\r\nimport RankingGrid from './RankingGrid'\r\nimport { fetchUser } from '../../speedruncom/wrapper'\r\nimport RankedRunWithScore from './RankedRunWithScore'\r\n\r\nexport default class Player {\r\n  id: SpeedrunId\r\n  timesPage: RankingGrid\r\n\r\n  private _pointsPerColumn: number[]\r\n  private _name: string | null | undefined = undefined\r\n\r\n  constructor (id: SpeedrunId, gridDimensions: number[]) {\r\n    this.id = id\r\n    this.timesPage = gridDimensions.map((colSize) => new Array<RankedRunWithScore>(colSize))\r\n    this._pointsPerColumn = gridDimensions.map((_) => 0)\r\n  }\r\n\r\n  /** register run r in the grid at position i, j */\r\n  registerRun (r: SpeedrunRankedRun, s: number, i: number, j: number) {\r\n    const x = {\r\n      place: r.place,\r\n      run: r.run,\r\n      score: s\r\n    }\r\n    this.timesPage[i][j] = x\r\n  }\r\n\r\n  public getPointsOfColumn (col: number): number {\r\n    if (this._pointsPerColumn[col]) {\r\n      return this._pointsPerColumn[col]\r\n    }\r\n\r\n    const val = this.timesPage[col].reduce((sum, r) => sum + r.score, 0)\r\n    this._pointsPerColumn[col] = val\r\n\r\n    return val\r\n  }\r\n\r\n  public get totalPoints () {\r\n    return this._pointsPerColumn.reduce((sum, _, i) => sum + this.getPointsOfColumn(i), 0)\r\n  }\r\n\r\n  /**\r\n   * this getter should be used with caution, preferably when absolutely certain that the name of\r\n   * a player is already loaded\r\n   *\r\n   * otherwise use the async version getName\r\n   */\r\n  public get name () {\r\n    if (this._name) {\r\n      return this._name\r\n    }\r\n\r\n    fetchUser(this.id).then(val => {\r\n      const n = val.data.names.international\r\n      this._name = n\r\n\r\n      return n\r\n    })\r\n\r\n    return ''\r\n  }\r\n\r\n  public async getName () {\r\n    if (this._name) {\r\n      return this._name\r\n    }\r\n\r\n    try {\r\n      const n = await (await fetchUser(this.id)).data.names.international\r\n      this._name = n\r\n    } catch {\r\n      this._name = `UNLOADED: ${this.id}`\r\n    }\r\n\r\n    return this._name\r\n  }\r\n}\r\n","import SpeedrunRankedRun from '../speedruncom/models/SpeedrunRankedRun'\r\n\r\ntype scoringFunction = (r: SpeedrunRankedRun) => number\r\n\r\nconst eliteScoring = (run: SpeedrunRankedRun): number => {\r\n  if (run.place === 1) { return 100 }\r\n  if (run.place === 2) { return 97 }\r\n  return Math.max(0, 98 - run.place)\r\n}\r\n\r\nconst getPercentScoreFn = (wrTime: number) => {\r\n  return (r: SpeedrunRankedRun) => {\r\n    const t = r.run.times.primary_t\r\n\r\n    return Math.round((1-Math.log((Math.E-1)*(t/wrTime - 1)+1))*1000)\r\n  }\r\n}\r\n\r\nexport { scoringFunction, eliteScoring, getPercentScoreFn }\r\n","import LevelGrid from '../speedruncom/models/LevelGrid'\r\nimport SpeedrunId from '../speedruncom/models/SpeedrunId'\r\nimport Player from './models/Player'\r\nimport { getPercentScoreFn } from './scoring'\r\n\r\nconst buildPlayerMap = async (grid: LevelGrid): Promise<Map<SpeedrunId, Player>> => {\r\n  const pMap = new Map<SpeedrunId, Player>()\r\n  const gridDimensions = grid.map((col) => col.length)\r\n\r\n  grid.forEach((levelColumn, i) =>\r\n    levelColumn.forEach((board, j) => {\r\n      const fn = getPercentScoreFn(board.runs[0].run.times.primary_t)\r\n\r\n      board.runs.forEach((r) => {\r\n        const p = r.run.players[0]\r\n\r\n        // skip players without id (deleted users)\r\n        if (p.id) {\r\n          pMap.has(p.id) || pMap.set(p.id, new Player(p.id, gridDimensions))\r\n          const pl = pMap.get(p.id)!\r\n          pl.registerRun(r, fn(r), i, j)\r\n        }\r\n      })\r\n    })\r\n  )\r\n\r\n  return pMap\r\n}\r\n\r\nexport default buildPlayerMap\r\n","import { getRawLeaderboardData } from '../speedruncom/get-data'\r\nimport { gridTransformationFunction, removeFarewellObsoletes } from '../speedruncom/grid-transformation'\r\nimport LevelGrid from '../speedruncom/models/LevelGrid'\r\nimport buildPlayerMap from './build-map'\r\n\r\nconst getPlayerMap = async () => {\r\n  // fetch data\r\n  const raw = await getRawLeaderboardData()\r\n  let grid: LevelGrid = raw.grid.map((categoryRow) => categoryRow.map((levelBoard) => levelBoard.data))\r\n\r\n  // transform grid\r\n  const transformations: gridTransformationFunction[] = [\r\n    removeFarewellObsoletes\r\n  ]\r\n  transformations.forEach((tFunc) => { grid = tFunc(grid) })\r\n\r\n  // build and return player map\r\n  return await buildPlayerMap(grid)\r\n}\r\n\r\nexport default getPlayerMap\r\n","const htmlToElement = (html: string): Node => {\r\n  const template = document.createElement('template')\r\n  html = html.trim()\r\n  template.innerHTML = html\r\n  return template.content.firstChild as Node\r\n}\r\n\r\nexport default htmlToElement\r\n","/* eslint-disable no-unused-vars */\r\nenum TableSelection {\r\n    TOTAL = 'Total',\r\n    A_SIDES = 'A-Sides',\r\n    COLLECTIBLES = 'Collectibles',\r\n    B_SIDES = 'B-Sides',\r\n    C_SIDES = 'C-Sides',\r\n}\r\n\r\nexport default TableSelection\r\n","const removeLeadingZeroes = (s: string) => {\r\n  const arr = s.split('')\r\n  const out = s.split('')\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const char = arr[i]\r\n    if (char === '0' || char === ':') {\r\n      out.shift()\r\n    } else {\r\n      return out.join('')\r\n    }\r\n  }\r\n\r\n  return s\r\n}\r\n\r\nconst toHHMMSS = (time: string) => {\r\n  const secNum = parseInt(time, 10)\r\n\r\n  const hours = Math.floor(secNum / 3600)\r\n  const minutes = Math.floor((secNum - (hours * 3600)) / 60)\r\n  const seconds = secNum - (hours * 3600) - (minutes * 60)\r\n\r\n  const raw = [hours, minutes, seconds].map(e => String(e).padStart(2, '0')).join(':')\r\n\r\n  return removeLeadingZeroes(raw)\r\n}\r\n\r\nexport { toHHMMSS, removeLeadingZeroes }\r\n","const getMiniText = (content: string) => {\r\n  const x = document.createElement('span')\r\n  x.classList.add('mini-text')\r\n  x.innerHTML = content\r\n  return x\r\n}\r\n\r\nconst getMiniTextString = (content: string) => {\r\n  const x = document.createElement('span')\r\n  x.classList.add('mini-text')\r\n  x.innerHTML = content\r\n  return `<span class=\"mini-text\">${content}</span>`\r\n}\r\n\r\nconst getPts = (asString: boolean = false) => {\r\n  return asString ? getMiniTextString('pts') : getMiniText('pts')\r\n}\r\n\r\nconst getMs = (ms: string, asString: boolean = false) => {\r\n  return asString ? getMiniTextString(ms) : getMiniText(ms)\r\n}\r\n\r\nconst getOrdinal = (n: number, asString: boolean = false) => {\r\n  // taken from https://stackoverflow.com/a/39466341\r\n  const nth = (x: number) => { return ['st', 'nd', 'rd'][((x + 90) % 100 - 10) % 10 - 1] || 'th' }\r\n  const ordinal = nth(n)\r\n\r\n  return asString ? getMiniTextString(ordinal) : getMiniText(ordinal)\r\n}\r\n\r\nexport { getMiniText, getPts, getMs, getOrdinal }\r\n","import RankedRunWithScore from '../../../modules/rankings/models/RankedRunWithScore'\r\nimport { ChapterNames } from '../../../modules/speedruncom/constants/celeste'\r\nimport TableSelection from '../../models/TableSelection'\r\nimport PlayerState from '../../states/PlayerState'\r\nimport htmlToElement from '../util/html-helper'\r\nimport { toHHMMSS } from '../util/time-helper'\r\nimport { getMs, getOrdinal, getPts } from './subtexts'\r\n\r\nconst getRunElement = (\r\n  r: RankedRunWithScore\r\n) => {\r\n  const getTd = (row1: string, row2: string) => {\r\n    return htmlToElement(`\r\n      <td class=\"hover-highlight\">\r\n        <div class=\"player-table-run\">\r\n          ${row1}\r\n          ${row2}\r\n        </div>\r\n      </td>\r\n    `)\r\n  }\r\n\r\n  if (!r) {\r\n    return getTd(\r\n      '<span>---------</span>',\r\n      '<span>---------</span>'\r\n    )\r\n  }\r\n\r\n  const timeSplit = String(r.run.times.primary_t).split('.')\r\n  const withoutMs = timeSplit[0]\r\n  const onlyMs = timeSplit.length === 2 ? timeSplit[1].padEnd(3, '0') : '000'\r\n\r\n  const ele = getTd(\r\n    `<span>${toHHMMSS(withoutMs)}.${getMs(onlyMs, true)}</span>`,\r\n    `<div><span>${r.place}${getOrdinal(r.place, true)}</span> / <span>${r.score} ${getPts(true)}</span></div>`\r\n  )\r\n\r\n  ele.addEventListener('click', () => {\r\n    window.open(r.run.weblink)\r\n  })\r\n\r\n  return ele\r\n}\r\n\r\nconst getTableElement = (elements: HTMLElement[]) => {\r\n  const ele = document.createElement('tr')\r\n  elements.forEach(e => ele.appendChild(e))\r\n  return ele\r\n}\r\n\r\nconst getTableHeader = (str: string[]) => {\r\n  const x = str.map(e => `<th>${e}</th>`).join('')\r\n  return htmlToElement(`<tr>${x}</tr>`)\r\n}\r\n\r\nconst getPlayerTable = (s: PlayerState) => {\r\n  const p = s.player!\r\n\r\n  const CHAPTERS = [\r\n    ChapterNames.C1,\r\n    ChapterNames.C2,\r\n    ChapterNames.C3,\r\n    ChapterNames.C4,\r\n    ChapterNames.C5,\r\n    ChapterNames.C6,\r\n    ChapterNames.C7,\r\n    ChapterNames.C8,\r\n    ChapterNames.C9\r\n  ]\r\n\r\n  const t = document.createElement('table')\r\n  t.classList.add('player-table')\r\n\r\n  // header\r\n  const head = getTableHeader([\r\n    'Stage',\r\n    TableSelection.A_SIDES,\r\n    TableSelection.COLLECTIBLES,\r\n    TableSelection.B_SIDES,\r\n    TableSelection.C_SIDES\r\n  ]) as HTMLElement\r\n  t.appendChild(head)\r\n\r\n  // main content\r\n  const tableRows = CHAPTERS.map((chapter, i) => {\r\n    let runElements\r\n\r\n    if (chapter === ChapterNames.C9) {\r\n      runElements = [\r\n        p!.timesPage[0][i]\r\n      ].map(r => getRunElement(r))\r\n    } else {\r\n      runElements = [\r\n        p!.timesPage[0][i],\r\n        p!.timesPage[1][i],\r\n        p!.timesPage[2][i],\r\n        p!.timesPage[3][i]\r\n      ].map(r => getRunElement(r))\r\n    }\r\n\r\n    const chapterElements = [htmlToElement(`<td class=\"bold player-table-chapter\">${chapter}</td>`)].concat(runElements)\r\n    return getTableElement(chapterElements.map(e => e as HTMLElement))\r\n  })\r\n  tableRows.forEach(e => t.appendChild(e))\r\n\r\n  // footer\r\n  const pointsPerCol = getTableHeader(\r\n    ['Totals'].concat([\r\n      p!.getPointsOfColumn(0),\r\n      p!.getPointsOfColumn(1),\r\n      p!.getPointsOfColumn(2),\r\n      p!.getPointsOfColumn(3)\r\n    ].map(e => `${String(e)} points`))) as HTMLElement\r\n  t.appendChild(pointsPerCol)\r\n\r\n  return t\r\n}\r\n\r\nexport default getPlayerTable\r\n","import PlayerState from '../../states/PlayerState'\r\n\r\nconst getTotalPointsCount = (s: PlayerState) => {\r\n  const x = document.createElement('span')\r\n  x.classList.add('center')\r\n  x.classList.add('total-points')\r\n  x.innerHTML = `Total: ${s.player!.totalPoints} points`\r\n  return x\r\n}\r\n\r\nexport default getTotalPointsCount\r\n","import PlayerState from '../../states/PlayerState'\r\nimport htmlToElement from '../util/html-helper'\r\nimport getPlayerTable from './player-table'\r\nimport getTotalPointsCount from './total-points-count'\r\n\r\nconst renderPlayerPage = async (state: PlayerState, container: HTMLElement): Promise<void> => {\r\n  const reset = () => { container!.innerHTML = '' }\r\n\r\n  reset()\r\n\r\n  if (!state.player) {\r\n    container!.appendChild(htmlToElement(`\r\n      <h1>Oops, something went wrong!</h1>\r\n    `))\r\n  } else {\r\n    const name = await state.player.getName()\r\n    container!.appendChild(htmlToElement(`<h1>${name}</h1>`))\r\n    container!.appendChild(getPlayerTable(state))\r\n    container!.appendChild(getTotalPointsCount(state))\r\n  }\r\n}\r\n\r\nexport default renderPlayerPage\r\n","const getLoader = () => {\r\n  const x = document.createElement('div')\r\n  x.classList.add(...['loader', 'center'])\r\n  x.innerHTML = 'Loading ...'\r\n  return x\r\n}\r\n\r\nexport default getLoader\r\n","import getPlayerMap from '../../modules/rankings/get-map'\r\nimport PlayerState from '../states/PlayerState'\r\nimport renderPlayerPage from '../ui/components/player-page'\r\nimport { fetchUser } from '../../modules/speedruncom/wrapper'\r\nimport SpeedrunId from '../../modules/speedruncom/models/SpeedrunId'\r\nimport getLoader from '../ui/components/loader'\r\n\r\nconst main = async () => {\r\n  const CONTAINER = document.getElementById('player-container')\r\n\r\n  CONTAINER!.appendChild(getLoader())\r\n\r\n  const render = (s: PlayerState) => {\r\n    return renderPlayerPage(s, CONTAINER!)\r\n  }\r\n  const abort = () => {\r\n    return render({ player: null })\r\n  }\r\n\r\n  const playerParam = new URLSearchParams(window.location.search).get('player')\r\n\r\n  if (!playerParam) {\r\n    return abort()\r\n  }\r\n\r\n  let id: SpeedrunId\r\n  try {\r\n    id = await (await fetchUser(playerParam)).data.id\r\n  } catch {\r\n    return abort()\r\n  }\r\n\r\n  const pMap = await getPlayerMap()\r\n  if (!pMap.get(id)) {\r\n    return abort()\r\n  }\r\n\r\n  await render({ player: pMap.get(id) })\r\n}\r\n\r\nmain()\r\n"]}