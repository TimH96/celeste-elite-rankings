{"version":3,"sources":["../../modules/speedruncom/constants/celeste.ts","../../modules/speedruncom/wrapper.ts","../../modules/speedruncom/get-data.ts","../../modules/speedruncom/grid-transformation.ts","../../modules/rankings/scoring.ts","../../modules/rankings/models/Player.ts","../../modules/rankings/build-map.ts","../../modules/rankings/get-map.ts","../ui/util/html-helper.ts","../models/TableSelection.ts","../ui/util/time-helper.ts","../ui/components/subtexts.ts","../ui/components/player-table.ts","../ui/components/total-points-count.ts","../ui/components/player-page.ts","player.ts"],"names":[],"mappings":";;;;;AAGA,AGGA,AMNA,ITGM,OAAO,GAAe,UAA5B;AICA,AJwBS,AW5BT,AEEA,ALFA,AEAA,INIM,AOJA,AEEA,ALFA,AEAA,GV4BG,CAAA,OAAA,AW5BQ,CPIC,CIJC,CR4BV,AW5BW,CPIC,CIJC,GKEG,AHFA,EV4BhB,Ca1BmB,AHFA,CCAtB,CPIA,CIJA,MKEA,AHFA,GCAc,CAAC,CPIA,CAAC,CIJA,CAAC,CJIF,EAAuB,AOJxB,CHAE,CGAc,CHAD,KKEP,AHFA,CGEC,AHFA,CGED,AHFA,EGEe,AHFL;ANKpC,AJDF,AGGA,AMNA,AEAE,AEEA,ALFA,AEAA,IVGI,AGGA,AMND,ELIC,AOJE,AEEA,ALFA,AEAA,CCAC,AEEA,ETEA,AMJE,CNID,AOJE,AEEA,EHFE,CVGC,AUHA,CFAC,AEAA,CNIV,CJDY,CQHC,CCAnB,AEAoB,AEEA,CFFC,AEEA,AHFP,CNIM,AMJE,CNIpB,CMJY,CNIS,AMJrB,EVGF,AQH2B,CAAC,ELME,GAAG,CQNrB,AEEA,CFFuB,AEEA,MFFvB,AEEA,ALFO,CLMb,AQNJ,AEEA,ALFwC,UAAvB,CAAjB,aLM+B,CAAC,IAAD,EAA+E;ACFvF,AJuBP,AGpBhB,AQNA,AEEA,ALFA,AEAA,ECAA,AEEA,ALFA,CGAC,AEEA,CFFC,AEEA,ELFE,AEAE,CV0BU,CAAA,CGpBT,AKNA,AEAE,ENGqB,CMHlB,CCAZ,AEEA,ALFW,AEAE,CNGU,AOHX,AEEA,ALFA,AEAE,GV0BE,AW1BhB,AEEA,CFFgB,AEEA,ALFT,CLMC,AONI,CV0BI,AQ1BhB,AEAoB,EAAR,CPML,AONP,EPMuB,CUJvB,GbwBgB,AW1BhB;APGmC,AJCrC,AGGI,AMRJ,AEEE,AEEA,ALFA,CCFF,CEEE,AEEA,ALFA,CGAC,AEEA,CbCG,AWHF,AEEA,MLFM,CLMC,AMRN,ADEM,EGAT,AEEA,CAAY,CVIC,CAAC,AQNA,CEEd,CAAgB,CVIP,CAAS,AKNlB,GGAA,AHAqB,ECFvB,EAAmB,ADEjB,GRG8B,AGGX,EUJnB,CbCiC,QGGf,EAAc,CAAd,EAAe,UHHnC;AAsB6B,AGnBW,AMPpC,AEEF,AEEA,ALFA,AEAA,EDFE,AIIF,CAAC,CAAC,GbsByB,AUxBtB,CVwBsB,CWxBpB,AHAA,CGAP,CDAS,CAAC,CPK4B,AUHtC,EHFa,CDFX,AIIY,AHFd,CPK0C,AMPxC,ADEa,CLK4B,AKL3B,AEAA,CAAC,GAAG,EDFlB,CAAA,ADEK,AEAgB,CFAC,AEAA,EDFtB,AIIsB,CVGkB,AUHjB,CAAC,CVG8B,CAAd,AOL1C,CPKsC,CHmBX,AUxBK,CDF9B,ACE+B,CGET,ALFxB,CRwB2B,AatBO,AHFlC,EAAqC,SGErC,ebsB2B;AItB3B,AJCF,AGE4D,AMNxD,AEEH,AEEC,ALFD,AEAG,CCLJ,AHAA,CCGI,ETIE,CGEK,CCHL,ADGF,EOJM,CNCD,ASCA,CTDC,ASCR,EHFY,GNCR,AMDW,CVEC,ASJd,CAAA,CCEgB,CVEC,AUFA,CNCD,AMDA,CNClB,AMDE,ENCmB,GKHnB,CAAA,GAAA,CTIJ,QSJI;ALGqB,AJsBgC,AGlBtD,AMNC,AGJJ,ACQC,CAND,CJEI,CNIF,CSRF,GZ4ByD,CAAA,GItBzB,CQNhC,CRMyB,EQNzB,CHII,CAAA,GTwBqD,GAAA,OY5BzD,CHII,AGJJ,CHII,GTwBqD,ASxBrD,GGJJ,CAAA,UHII,+BGJJ,CAAA,CAAA;ARMoC,AJGpC,AGEC,AMNG,AEyBK,AHvBT,AEDI,CPCJ,CMFI,ETIC,GWqBI,AHvBT,CGuBS,AHvBT,AEDQ,IAAI,EVGZ,CQFA,CCFI,CAAA,ACCa,CFCF,CGuBN,CDxBD,ECwBC,EDxBe,EDDpB,CAAA,CCCwB,EDDxB,CDEJ,EGuBS,ADxBwB,GAA7B,EAAkC,CDDlC;AACA,AGLJ,ACSA,AHHM,EDDF,EGLJ,EFMM,CGGN,CAAA,CHHS,CAAC,GENV,ECSA,AHHM,CDDF,AGLJ,CHKI,CIIW,KDTf,CAAA,EHKI,CAAA,GAAA,OIIJ,EJJI,iCGLJ,CAAA;ARME,AJEF,AGmBqC,AMrBpC,AEAD,ADCK,CVCL,ASRA,EAAK,CEMC,CDDF,EPsBiC,CAAA,CCrB5B,EJEJ,AUDM,ENDE,CAAC,GAAL,AKNU,CLMD,CAAT,EAAY,AJErB,AWFuB,CFNlB,CTQU,CWFW,EPAA,GAAG,CAAC,EDqBO,CQrB/B,EPAG,ADqB4B,CCrBnC,AKNiB,GAAA,EAAA,CAAnB,QEM0B,CAAC,OAAD,CRqBW,CQrBK;APCzC,AJEG,AYPJ,ADKE,ADCI,CNLN,CJMI,EYPJ,EDKQ,CAAC,GAAG,EXER,CAAA,AUDS,GAAG,CAAC,CCDG,CAAC,CCLrB,CFMa,CVCT,AUDkB,CVClB,AYPJ,CFMa,CAAP,CVCF,MWFQ,CXER,AWF+B,KCLnC,CAAA,ADKY,CAAV,MCLF,CAAA,6BAAA,CAAA,CAAA;AZQI,AGEJ,AMJA,AEAE,ADCG,EVCD,AWFF,CAAC,CRIG,AQJF,GFAJ,CAAA,ITEI,CAAA,AWFF,CAAY,CFAd,CNIkB,CQJhB,CFAa,AEAG,CRIG,QHFjB,CAAA,AGEE,CQJJ,EXEE,CSFJ,QNIqB,CAAC,IHFlB,AGEiB,EAAkB,GAAlB,EAA6B;ACHxB,AJEtB,AGEF,ASTF,ADKE,ADCC,EVCC,AWFF,CAAC,CCLH,ADKI,GPAsB,CAAA,CDIjB,GHFL,CAAA,AGES,AQJX,CRIY,EQJE,CCLhB,GRK0B,ADIjB,ASTT,CTSqB,CHFjB,CIFsB,AJEtB,AWFF,GXEE,KGEkB,CAAD,EHFjB,AGEqB,CCJC,ADIL,ASTrB,CAAA,CTS0B,MST1B,CAAA,qBAAA,CAAA,CAAA;AZQI,AGC2B,AQH7B,EXEE,OWFK,ERGsB,CHD3B,AGC4B,CHD5B,IGCiC,GAAN,EHD3B,CAAA,GAAA,QAAA,MWFgC,OAA3B,GAAkC,SAAzC;AXGD,AGAuC,ASRxC,ADMC,ADCC,CVJF,AWFA,EXEK,AGKI,CAAP,ASRF,KFOS,CAAP,GVJa,IYHf,CZGK,EYHL,OAAA,CZGe,AYHf,GZGe,EAAA,CAAf,eYHA,CAAA;ATSC,AODA,CPDD,AObA;AV4BuE,AYrBvE,ADOA,ICPA,ADOM,GXciE,CAAA,EWd3D,GAAG,CCPf,GAAA,CZqBuE,GAAA,CWdjE,ECPN,CAAA,GDOe,CAAC,EXcuD,MYrBvE,ADOe,CCPf,CDOyC;AXEzC,AGY+D,AQd/C,ADcG,IVZd,EWFW,CRc+C,AOA5C,CPA4C,AOA5C,MCdH,EXEhB,GWFgB,CRc+C,GAAA,CQd/C,CAAA,EAAA,ADcG,GAAA,KPA4C,cOA5C;AEnBnB,ADKgB,ICLV,ADKU,QAAA,GAAA,ECLG,GAAG,ADKN,SCLV,aAAgB,CACpB,CADoB,EACA;AZMtB,AGCA,ASLE,ADEuC,ADEzC,CVAA,GGCM,AODA,EEJA,CAAC,CAAL,EAAQ,CZIL,CUAS,GAAG,QVAjB,CUAM,CVAW,EGCY,GAAG,EODf,CAAC,IAAD,EPCX,AODwB,uBPCE,CAAC,IAAD,EAAgB;AHA5C,AGCF,ASLE,AFIF,EVAE,IGCI,AODA,KEJG,CFIG,EVAV,AGCY,CHDZ,AUAa,EPCE,EHDf,CAAA,GAAA,AUAqB,CEJd,AFIe,CEJf,CTKH,EODiB,EAAO,EEJrB,AFIc,CEJA,AFIvB,CPCiB,CAAC,GHDhB,QGCe,EAAqC,CAArC,EAA8C,uKSLtD,CAAP;AZKA,AGCA,ASED,ADND,ADIA,EVDE,IUCI,EPAA,CAAC,AQJA,EDII,GVDT,AGCU,AOAE,CVDZ,AGCA,EAAa,AQJA,CDIG,CVDhB,AUCiB,CVDjB,AWHgB,GXGhB,CUCY,CAAW,MAAM,EVD7B,CUCgC,GCJC,CAAC,ADItB,CAAd,ICJmC,CAApB,GAA8B,WAAW,CAAC,KAAD,CAAxD;AXIE,AGCE,AQJL,ADIC,CCNF,CXKI,IUCI,OPAK,AOAE,CVDX,CAAA,CUCc,GVDd,CAAA,AUCkB,CAAC,EVDnB,CGCE,EOAY,CAAW,CAAC,MAAM,GAAI,IVDpC,CUCyC,GAAG,IAAnB,IAA4B,EAAvC,CAAhB;AVAE,AGCC,ASEH,AFFA,EVDE,IYGI,AFFA,OAAO,CVDX,CAAA,AYGa,CFFC,EEEE,CZHhB,CAAA,EUCoB,CVDpB,CYGsB,CAAC,AFFC,CEEA,CAAC,GAAF,AFFM,CEEA,EFFG,GEET,CZHvB,AYGmC,AFFrB,GAA2B,MEEnB,CAAN,AFFgC,CEEF,EFFK,EAArD,CEEkB,CAAoC,GAApC,CAAlB;AZFE,AYGF,ADMoB,ADPpB,EVFE,IYGI,AFDA,CCOc,CAAA,CDPX,GAAG,CAAC,CVFX,AWSkB,CXTlB,AYGa,EDMK,CCNF,AFDN,CVFV,CAAA,AUEkB,GVFlB,AWSkB,ICNO,AFDf,CECgB,CAAD,AFDE,CEC7B,MFDY,EVFV,AUEoC,GAA1B,CAA8B,UAAA,CAAA,EAAC;AVDzC,AGAA,ASGF,AFF+C,EVD7C,IYGI,KTHG,AOCsC,CEEnC,EZHV,CAAA,AYGa,EFFsC,CAAC,CVDpD,AUCmD,CVDnD,AUC6C,CAAU,CPDrC,CHAlB,AGAmB,CSGG,CAAC,ITHhB,AOCsC,CPDnB,AOCsC,CEEnD,AFFgC,EAAsB,EVDnE,CYGkC,AFFW,CEEhC,AFFgC,GPDlB,ASGW,CTHZ,EAAI,CAAJ,EAAK,GSGgB,CAAC,CAAD,CAAT,CAAa,MAAb,CAAoB,CAApB,EAAuB,GAAvB,CAAzB,GAAuD,KAAtE;AZFE,AGDoC,ASKtC,ADTF,ADK2E,EVAvE,CUAU,CCLR,CDKuE,CEIrE,GAAG,ADTA,ADKG,CAAoE,EEIpE,ADTA,CRI0B,AOC1B,CVAV,AGDqC,AOCvC,CVAE,IAAA,AGD0C,CHC1C,AGDoC,CQJlC,EXKF,EYIU,CAAA,ADTA,CAAC,EAAD,EAAa,ECSb,CAAc,CZJxB,IWLU,EAAsC,0FCYpC,aAAA,CAAA,QAAA,CAAS,SAAT,CAHY,GAGO,GAHP,GAGW,UAAA,CAAA,KAAA,CAAM,MAAN,EAAc,IAAd,CAHX,GAG8B,8BAH9B,GAIP,CAAC,CAAC,KAJK,GAIG,UAAA,CAAA,UAAA,CAAW,CAAC,CAAC,KAAb,EAAoB,IAApB,CAJH,GAI4B,kBAJ5B,GAI+C,QAAA,CAAA,OAAA,CAAO,SAAP,CAAiB,CAAjB,CAJ/C,GAIkE,GAJlE,GAIsE,UAAA,CAAA,MAAA,CAAO,IAAP,CAJtE,GAIkF,4CAJhG,CAAZ;AZHE,AGF2C,ASc7C,ADlByB,ADOzB,EVDE,AYYF,GTdS,AScN,CTdD,AScE,ADlBqB,GDOlB,KVDL,AWNuB,CXMvB,IAAA,AWNuB,CXMvB,EYYF,CZZE,AYYmB,CDlBI,CAAA,EAAA,CDOC,CVDxB,AUCyB,CEW3B,EAA8B,AFXJ,CAA1B,WEW8B;AZX5B,AGFD,AScC,ADnBuB,ADQ1B,CAVD,CVSI,CGPF,CSmBE,ADnBuB,MCmBjB,CAAC,CDnBgB,EXOvB,CAAA,AYYA,ADnBuB,CCmBX,CAAC,CAAC,CZZd,CAAA,AWPuB,CCmBX,CAAM,CZZlB,MYYA,IZZA;AACH,AYYE,ADp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ACAA,AOAA,ACAA,GTAA,ACAA,AOAA,ACAA,CVIA,AHCA,ADLA,GKAA,ACAA,AFIA,AHCA,ADLA,AaAA,ACAA,OVIA,AHCA,ADLA,CIIA,AHCA,ADLA,WCKA,CGDA,AHCA,CGDA,QJJA,CAAA;;AIMA,AHAA,ADGA,IIHA,AHAA,ADGM,IAAI,EIHV,CJGa,ECHb,GAAA,OAAA,CAAA,KDGA,gBCHA,CAAA;AGAA,AJIA,IAAM,WAAW,GAAG,IAApB;AIJA,AHSA,IAAM,QGTN,aHS2B,GAAG,SAAxB,qBAAwB,GAAA;AGA5B,AHA4B,ADH9B,IAAM,KCGwB,EGA5B,IJHe,EIGf,CAAa,AHAe,ADHV,CCGU,CGA5B,EAA6B,EHAD,EAAA,CDHxB,ICGwB,CAAA,EAAU,EGAtC,EAAqD,AJHnC,GCGU,ADHV,ECG2B,YAAA;AIb/C,ACFA,AFWU,AJER,AaZF,ACDA,ITEA,ACFA,AOCA,ACDA,KVWU,AJED,GKXT,CSFA,CRAA,AFWU,CCTV,CSFA,CRAA,AFW6C,ASV7C,GAAA,EbYoB,EMbpB,CAAA,CFWU,AJED,GAAe,CKXxB,CAAA,ASFA,CAAA,GDCA,CbYS,AaZT,ERCA,CAAA,ALWgC,AcbhC,CAAA,GDCA,CAAA,MPDA,ANaE,CMbF,KDEA,CAAA,CAAA,OQDA,CAAA,CAAA,KCDA,CAAA,CAAA;AVgBI,AJFH,CAFD,QIIS,EAAL,GAAU,EAAV;ACZJ,ACHA,AFgBI,ASfJ,ACAA,ITEM,ACHN,AOCA,ACAA,KVeS,QUfT,CTEoB,ADahB,ASfJ,ECAA,CTEuB,ADaF,ASfrB,IPDA,GAAA,EDGM,KCHN,AFgBmC,AUfnC,CRDA,AFgBoC,ASfpC,ACAA,CDAA,ETeqB,CAAmB,GUfxC,CTEuB,AQFvB,ACAA,CTE8B,AQF9B,IREuB,CDakB,CCbI,MDaL,EAAQ,ESfhD,CAAA,CAAA,SPDA,CAAA,CQCA,CAAA,CAAA;ATE6C,ADaQ,AJDrD,IAAM,KKZuC,IDaQ,IAAI,CCbZ,CAAA,ALYxB,GICgC,AJD7B,CIC0D,CCbrC,EAAA,IDaQ,CCbR,ADaQ,AJD/C,CKZuC,EAAG,OAAH,EAAU,GLY/B,CAAO,KAAP,EAA6B,CKZE,OLY/B,EAAuD;AMb/E,AFc0F,AHDzE,ADA8D,Aab/E,ACAA,IRAA,AOAA,ACAA,CVcqB,CAAjB,GJD2E,Icb/E,ERAA,CQAA,CbaiB,CKbjB,ALaiB,ADA8D,CAAA,Icb/E,Cda+E,Aab/E,ACAA,Eda+E,Cab/E,Iba+E,CAAA,CMb/E,CAAA,ANakF,OMblF,ANa+E,CMb/E,AOAA,CbayF,AabzF,OAAA,CAAA,IPAA,ANayF,CMbzF,CAAA,EQAA,CAAA,aDAA,CAAA,CAAA;ATeI,AHFa,SGER,gBAAL,GAAwB,cAAc,CAAC,GAAf,CAAmB,UAAC,CAAD,EAAE;ACbzC,ACAR,AFasD,AHFrC,AYXjB,ACCA,IRDM,AOAA,ACCA,ETDE,ESCE,ETDE,CSCC,CbUU,CIXR,ADauC,CAAA,EEbpC,CDAC,ECAE,CDAN,AQAO,ACChB,CbUiB,CIXf,AJWe,CYXE,CCCZ,GAAA,CRDP,IOAA,CZWiB,EAAN,CAAA,IKXI,GAAA,KOAI,CAAO,KAAP,EAA2B,EAA3B,EAAqC;ARCtD,ACDa,AFakC,ASbO,ACCjD,KVYe,CCZpB,ADYJ,GEbiB,AOAyC,ACCjD,SRDQ,AOAyC,ACCjD,CRDQ,AOAyC,ACCjD,CTAS,GAAG,CCDJ,AOAyC,ACCjD,ERDQ,AOAyC,ACCjD,CTAgB,CAAC,GAAL,ACDJ,AOAyC,ACCjD,CTAqB,ACDb,AOAyC,ACCjD,ERDQ,AOA4C,ACCpD,KRDQ,AQCR,CRDQ,AQCR,CDDiD,CRC3B,ACDd,AQCR,CDD2D,ERCtC,EAAI,OCDjB,AQCR,CDD2D;ARC7B,ADaxC,AJFO,eKXiC,ELWjC,CKXoC,ALWpC,CKXqC,MAAJ;AAAU,ADenD,AHLM,ADCE,OKXe,CAAjB,EJUA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;AIRN,AJSoB,ADAZ,MKTR,IAAI,CAAC,CLSS,KCAM,ADAD,CKTnB,AJSoB,ADAG,CKTV,UAAC,ALSoB,KAAE,MKTvB,EAAc,CAAd,EAAe,KLSL,GAA8B,SAAA,CAAA,OAA9B,GAAqC,SAArC,GAA+C,KAAK,CAAC,EAArD,GAAuD,GAAvD,GAA2D,QAAQ,CAAC,EAAxE,CAAX,CAAA;AKRN,AJQkB,eIRlB,WAAW,CAAC,OAAZ,CAAoB,UAAC,KAAD,EAAQ,CAAR,EAAS;AAC3B,ACHQ,AFeZ,AHLoB,AYXd,ETgBN,MAAA,CAAA,CShBM,EZWoB,KIPtB,ACHQ,CAAA,AFeZ,CAAA,AShBe,EZWW,CIPjB,AJOiB,AYXR,CRIR,IAAN,CAAW,EDYf,AShB0B,CAAC,ETgB3B,ECZI,CAAmB,MJOG,CGKb,AHLkC,CGK/C,CShBkB,CRIM,ADYW,AShBO,CRInB,ADYvB,CShBkB,CRIO,ADYqB,AHLO,AYX/C,CTgBN,AHLsD,EGKC,EHLR,CAAY,CAAZ,CAArB,CAAN,CAAA;AINd,ACJM,AFgBV,AJNF,AcVM,SVgBC,CUhBD,MTIM,CAAC,ALMb,CIME,AJNF,CIMiB,AUhBF,CTIC,ADYd,CCZe,CAAC,ADYE,AUhBF,CVgBhB,ECZc,CAAM,CDYG,CAAvB,KCZc,CAAc,CAAd,CAAV,CADmB,CAGnB,ESNA;ARAM,AFiBX,AJPD,AaVM,GTeN,OSfM,EPAY,GOAP,GAAG,IPAI,CAAA,YOAJ,SPAI,EAAN,CAAA;ADON,AJGA,ADAN,AaVsB,ACChB,UbSA,AaTA,EdSE,AaVc,EbUd,CAAA,CKHE,ASNE,CTMD,CAAC,CLGJ,AcTO,CTMT,AJGU,CDAT,AaVyB,CROhB,ALGkF,AaVjE,CZUb,EAAA,CAAA,ADAb,EAAP,CAAA,CCAoB,CYVE,CZUhB,EYVuC,CCC7B,CDDM,ACCP,EAAe;ATOtB,ADWD,AHRW,AYX+B,ACE/C,EViBK,MAAA,CAAA,ESnBD,GRQE,GJGU,CIHN,ADWL,AHRW,CIHL,ADWN,AUjBE,GTMD,CAAS,CAAC,CAAC,EAAX,KAAkB,ASNjB,CAAA,GTMqB,ADWvB,CCXwB,EDW/B,CCX0B,ASNjB,CTM0B,ASNT,CTMU,ASN3B,CTM4B,CSNR,CTMH,EAAe,EDWf,ECXmB,CDW7C,CUjBS,CViB4B,AUjBnC,KTM2C,CAAA,OAAJ,CAAW,CAAC,CAAC,EAAb,EAAiB,cAAjB,CAAf,CAAlB;AACA,ACTF,AFoBJ,AHTgB,AaRjB,QViBK,EEpBA,CQCA,ERDG,AFoBE,GEpBC,EDSE,ACTF,CAAA,CDSI,GAAG,ACTP,EAAN,EDSiB,CAAC,CDWlB,CAAsB,CCXT,CAAS,CAAC,ADWvB,CCXwB,ADW5B,ECXiB,ADWe,CCX1B;AACA,ACTJ,AFoBA,AHVc,AYTlB,GbO6E,CAAA,MMRzE,AOCJ,EZSwB,CGUb,CCXH,ACTA,COCH,CRQK,CAAC,ACTW,CFoBN,CHVe,CKVN,ALUO,CKVN,ELUF,CAAY,CKVd,CAAS,EDSvB,CAAe,ACTD,CDSd,ACT2B,ALUO,CAAC,CIDjB,CAAlB,CDWG,CCXkB,ADWI,AHVG,CID5B,AJCwC,EGUrC,CAAP,AHVgC,CKVA,ALUgB,UAAC,CKVlB,EAAY,ALUK,EAAI;AIAjD,ACV6C,AFqBjD,AHX0D,ADA9D,AcPO,CdKR,ScLQ,KDAF,ACAO,CDAN,ECAS,CRHsC,ALUS,EYPnD,CAAC,MZOkD,CAAA,CKVE,AOG3D,CPH4D,GAAZ,CAAgB,AQGtD,EDAV,CAAA,OPHiE,GLUR,CAAoB,GAApB,CAAA,EKVO,EAAW;ADW1E,ACX+E,ALUC,AYPjF,ACCF,WTFE,AJQgC,CIRhC,AJQoB,CAAN,CAAA,KaNT,ERJ2E,IQIrE,CAAC,KRJ8E,CAAC,IAAX;ADW9E,ACX6F,AFuBjG,AJeF,AanCI,ACCc,OdkClB,CIfQ,AJeR,CKrCE,CAAA,CDsBS,CSpBP,CPHgD,AOGhD,CPHgD,AFuBtC,ASpBV,ACCc,KVmBC,CUnBK,EAAE,CdkC1B,GAAA,EIfc,CAAe,GAAf,EAAoB,MAApB,CAA2B,AJezC,UIf0C,GAAD,EAAM,CAAN,EAAO;ACX7C,ACZiG,AFuB/C,ASnBnD,ACAc,OTJhB,GQIE,CPJoB,CAAlB,CFuBiD,AUnBtC,CAAb,EVmBsD,GAAG,ASnB/C,CAAC,KTmBoD,CAAC,KSnBhE,CAAuB,GTmBkC,CAAiB,CAAjB,CAAN,OSnB5B,CAAA,OAAA,CAAc,oDAAd,CAAvB;ARWF,ACZM,AFoBwE,AHbxE,ADER,AcPG,IdOG,CIWU,EAAkE,CAAlE,CAAZ,CEpBI,ALOA,CaPA,ETYN,CAAA,KJLe,GAAG,EAAA,CKPG,ALOH,GKPoC,CACpD,ALMgB,EAAZ,ADEyB,GAAG,SAA9B,OMRF,CAAA,mBNQgC,CAClC,GMVsD,CAAhD,CNS4B,EAElC,QAFkC,EAGlC,KAHkC,EAIlC,GAJkC,EAInB;AKDf,ACTA,AFkBE,AHbW,ADKE,SIQR,AJRQ,CMVf,OLKa,CAAA,ADKE,CAAA,KAAA,CMVA,AFkBb,CElBc,AFkBQ,AJRT,GIQb,EJRa,CAAA,CMVf,AFkB+B,CElBP,ANWvB,EIOC,KJRa,EACP,CMXiB,KAAD,EAAM,INWtB;AKFR,ACTqC,AFoBnC,AHfW,AaJP,QTQC,ESRD,CVmBG,CCXT,ACTqC,CDSrC,CDWE,EEpBuC,GAAG,EQC3B,GRDgC,AQC7B,CRD8B,GQC1B,CRDyB,CAAZ,aQCjB,CAAoB,MAAM,CAAC,QAAP,CAAgB,MAApC,EAA4C,GAA5C,CAAgD,QAAhD,CAAd;ARDmD,AFqBxD,AHhBY,GGON,QEZP,CLKmB,OAAO,CAAC,GAAR,CAAY,UAAU,CAAC,IAAX,CAAgB,GAAhB,CAAoB,UAAC,GAAD,EAAI;AKFhD,ALGL,AaHF,GTb2C,CAAA,USavC,CAAC,ERAE,CAAA,CLGE,OAAO,AaHhB,CbGiB,CaHC,EbGT,CAAY,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAgB,UAAC,GAAD,EAAM,CAAN,EAAO;AII7C,ACPQ,AFoBP,AHhBI,ADKI,AaVO,ACEb,CTdJ,CDiCE,MAAA,CAAA,QJXQ,AaVO,CZKP,ADKA,AaVO,CCEb,CAAA,CbGS,CAAC,CGgBZ,CAAW,EHhBH,IGgBG,CAAA,AHhBU,SGgBrB,AHhBqB,CAAA,CGgBV,SHhBU,CAAW,GGgBhC,EAAsB,OHhBd,IAAwC,GAAG,CAAC,IAAJ,KAAa,SAAA,CAAA,YAAA,CAAa,EAAtE,EAA0E;AKJvE,ALKD,ADIE,AaVO,ACEb,SVmBF,GEpBa,WAAA,CAAA,AFoBb,OEpBa,CAAe,IAAf,CAAN,CAAA;ADST,ADWE,AHdM,ADGE,AaVO,ACEb,OTQJ,CAAA,EDWE,EJXc,AaVO,ECEZ,CTQX,ADWE,EJXmB,AaVO,CRUb,ADWb,AJXuB,AaVI,CCEb,CbKF,CaLV,CVmBF,AUnBE,EDFmB,CAAa,GZOd,CDGc,ECHX,CIGzB,AQVuB,EbUe,AaVrB,CAAA,KZOiB,CAAC,CAAD,CAAT,CAAa,IAAb,CAAkB,CDGlB,GCHA,ADG8B,CCHP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","file":"player.1a7f322d.js","sourceRoot":"..\\src\\app\\pages","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport SpeedrunId from '../models/SpeedrunId'\r\n\r\nconst GAME_ID: SpeedrunId = 'o1y9j9v6'\r\nconst GAME_NAME = 'Celeste'\r\n\r\nconst COLLECTIBLES_VARIABLE_NAME = 'Full Clear / ARB / HC'\r\nconst FC_RUN_VALUE = 'Full Clear'\r\n\r\nenum Categories {\r\n    A_SIDES = 'Clear',\r\n    COLLECTIBLES = 'Collectibles',\r\n    B_SIDES = 'B-Side',\r\n    C_SIDES = 'C-Side',\r\n}\r\n\r\nenum ChapterNames {\r\n    C1 = 'Forsaken City',\r\n    C2 = 'Old Site',\r\n    C3 = 'Celestial Resort',\r\n    C4 = 'Golden Ridge',\r\n    C5 = 'Mirror Temple',\r\n    C6 = 'Reflection',\r\n    C7 = 'The Summit',\r\n    C8 = 'Core',\r\n    C9 = 'Farewell',\r\n}\r\n\r\nexport { GAME_ID, GAME_NAME, COLLECTIBLES_VARIABLE_NAME, FC_RUN_VALUE, Categories, ChapterNames }\r\n","import { GAME_ID } from './constants/celeste'\r\nimport SpeedrunApiResponse from './models/SpeedrunApiResponse'\r\nimport SpeedrunCategory from './models/SpeedrunCategory'\r\nimport SpeedrunId from './models/SpeedrunId'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\nimport SpeedrunLevel from './models/SpeedrunLevel'\r\nimport SpeedrunUser from './models/SpeedrunUser'\r\nimport SpeedrunVariable from './models/SpeedrunVariable'\r\n\r\nconst HREF = 'www.speedrun.com'\r\nconst API_VERSION = 'v1'\r\n\r\nconst getBasePath = () => {\r\n  return `https://${HREF}/api/${API_VERSION}`\r\n}\r\n\r\nconst fetchLevelBoard = async (level: SpeedrunLevel, category: SpeedrunCategory): Promise<SpeedrunApiResponse<SpeedrunLeaderboard>> => {\r\n  return (await fetch(`${getBasePath()}/leaderboards/${GAME_ID}/level/${level.id}/${category.id}`)).json()\r\n}\r\n\r\nconst fetchLevelBoardWithVariable = async (\r\n  level: SpeedrunLevel,\r\n  category: SpeedrunCategory,\r\n  varId: SpeedrunId,\r\n  val: SpeedrunId\r\n): Promise<SpeedrunApiResponse<SpeedrunLeaderboard>> => {\r\n  return (await fetch(`${getBasePath()}/leaderboards/${GAME_ID}/level/${level.id}/${category.id}?var-${varId}=${val}`)).json()\r\n}\r\n\r\nconst fetchLevels = async (): Promise<SpeedrunApiResponse<SpeedrunLevel[]>> => {\r\n  return await (await fetch(`${getBasePath()}/games/${GAME_ID}/levels`)).json()\r\n}\r\n\r\nconst fetchLevelCategories = async (level: SpeedrunLevel): Promise<SpeedrunApiResponse<SpeedrunCategory[]>> => {\r\n  return await (await fetch(`${getBasePath()}/levels/${level.id}/categories`)).json()\r\n}\r\n\r\nconst fetchLevelVariables = async (level: SpeedrunLevel): Promise<SpeedrunApiResponse<SpeedrunVariable[]>> => {\r\n  return await (await fetch(`${getBasePath()}/levels/${level.id}/variables`)).json()\r\n}\r\n\r\nconst fetchUser = async (user: SpeedrunId): Promise<SpeedrunApiResponse<SpeedrunUser>> => {\r\n  return await (await fetch(`${getBasePath()}/users/${user}`)).json()\r\n}\r\n\r\nexport {\r\n  fetchLevelBoard,\r\n  fetchLevelBoardWithVariable,\r\n  fetchLevels,\r\n  fetchLevelCategories,\r\n  fetchLevelVariables,\r\n  fetchUser\r\n}\r\n","import SpeedrunApiResponse from './models/SpeedrunApiResponse'\r\nimport SpeedrunCategory from './models/SpeedrunCategory'\r\nimport SpeedrunLevel from './models/SpeedrunLevel'\r\nimport SpeedrunVariable from './models/SpeedrunVariable'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\nimport { fetchLevelCategories, fetchLevelBoard, fetchLevels, fetchLevelVariables, fetchLevelBoardWithVariable } from './wrapper'\r\nimport { Categories, ChapterNames, COLLECTIBLES_VARIABLE_NAME, FC_RUN_VALUE } from './constants/celeste'\r\n\r\ninterface RawDataCollection {\r\n    categories: SpeedrunApiResponse<SpeedrunCategory[]>,\r\n    levels: SpeedrunApiResponse<SpeedrunLevel[]>,\r\n    grid: SpeedrunApiResponse<SpeedrunLeaderboard>[][],\r\n    variables: SpeedrunApiResponse<SpeedrunVariable[]>[]\r\n}\r\n\r\nconst getRawLeaderboardData = async (): Promise<RawDataCollection> => {\r\n  const levels = await fetchLevels()\r\n  const categories = (await fetchLevelCategories(levels.data[0]))\r\n  const variables = await Promise.all(levels.data.map((lvl) => fetchLevelVariables(lvl)))\r\n  const grid = await Promise.all(categories.data.map((cat) => {\r\n    return Promise.all(levels.data.map((lvl, i) => {\r\n      if (cat.name === Categories.COLLECTIBLES && lvl.name !== ChapterNames.C9) {\r\n        // find the 2 relevant IDs based on variable name and run value label\r\n        const variable = variables[i].data.find((x) => x.name === COLLECTIBLES_VARIABLE_NAME)\r\n        const value = Object.entries(variable!.values.values).find(([_key, val]) => val.label === FC_RUN_VALUE)\r\n\r\n        return fetchLevelBoardWithVariable(lvl, cat, variable!.id, value![0])\r\n      }\r\n      return fetchLevelBoard(lvl, cat)\r\n    }))\r\n  }))\r\n\r\n  return {\r\n    categories,\r\n    levels,\r\n    grid,\r\n    variables\r\n  }\r\n}\r\n\r\nexport { getRawLeaderboardData }\r\n","import LevelGrid from './models/LevelGrid'\r\nimport SpeedrunLeaderboard from './models/SpeedrunLeaderboard'\r\n\r\n/** function that transforms a LevelGrid in some way */\r\ntype gridTransformationFunction = (grid: LevelGrid) => LevelGrid;\r\n\r\n/** returns a gridTransformationFunction, using the given callback function in grid.map */\r\nconst getGridMapTransformation = (func: (levelColumn: SpeedrunLeaderboard[], i: number) => SpeedrunLeaderboard[]): gridTransformationFunction => {\r\n  return (grid: LevelGrid): LevelGrid => {\r\n    return grid.map((levelColumn, i) => func(levelColumn, i))\r\n  }\r\n}\r\n\r\nconst removeColumn = (grid: LevelGrid, col: number): LevelGrid => {\r\n  return grid.filter((_, i) => i !== col)\r\n}\r\n\r\nconst removeFarewellObsoletes = (grid: LevelGrid): LevelGrid => {\r\n  const callback = (levelColumn: SpeedrunLeaderboard[], i: number) => {\r\n    if (i === 0) {\r\n      return levelColumn\r\n    }\r\n    return levelColumn.filter((_, i) => i !== 8)\r\n  }\r\n\r\n  return getGridMapTransformation(callback)(grid)\r\n}\r\n\r\nexport { gridTransformationFunction, getGridMapTransformation, removeColumn, removeFarewellObsoletes }\r\n","import SpeedrunRankedRun from '../speedruncom/models/SpeedrunRankedRun'\r\n\r\ntype scoringFunction = (r: SpeedrunRankedRun) => number\r\n\r\nconst eliteScoring = (run: SpeedrunRankedRun): number => {\r\n  if (run.place === 1) { return 100 }\r\n  if (run.place === 2) { return 97 }\r\n  return Math.max(0, 98 - run.place)\r\n}\r\n\r\nexport { scoringFunction, eliteScoring }\r\n","import SpeedrunId from '../../speedruncom/models/SpeedrunId'\r\nimport SpeedrunRankedRun from '../../speedruncom/models/SpeedrunRankedRun'\r\nimport RankingGrid from './RankingGrid'\r\nimport { fetchUser } from '../../speedruncom/wrapper'\r\nimport { eliteScoring, scoringFunction } from '../scoring'\r\n\r\nexport default class Player {\r\n  id: SpeedrunId\r\n  timesPage: RankingGrid\r\n\r\n  private _pointsPerColumn: number[]\r\n  private _name: string | null | undefined = undefined\r\n\r\n  static scoringFn: scoringFunction = eliteScoring\r\n\r\n  constructor (id: SpeedrunId, gridDimensions: number[]) {\r\n    this.id = id\r\n    this.timesPage = gridDimensions.map((colSize) => new Array<SpeedrunRankedRun>(colSize))\r\n    this._pointsPerColumn = gridDimensions.map((_) => 0)\r\n  }\r\n\r\n  /** register run r in the grid at position i, j */\r\n  registerRun (r: SpeedrunRankedRun, i: number, j: number) {\r\n    this.timesPage[i][j] = r\r\n  }\r\n\r\n  public getPointsOfColumn (col: number): number {\r\n    if (this._pointsPerColumn[col]) {\r\n      return this._pointsPerColumn[col]\r\n    }\r\n\r\n    const val = this.timesPage[col].reduce((sum, r) => sum + Player.scoringFn(r), 0)\r\n    this._pointsPerColumn[col] = val\r\n\r\n    return val\r\n  }\r\n\r\n  public get totalPoints () {\r\n    return this._pointsPerColumn.reduce((sum, _, i) => sum + this.getPointsOfColumn(i), 0)\r\n  }\r\n\r\n  /**\r\n   * this getter should be used with caution, preferably when absolutely certain that the name of\r\n   * a player is already loaded\r\n   *\r\n   * otherwise use the async version getName\r\n   */\r\n  public get name () {\r\n    if (this._name) {\r\n      return this._name\r\n    }\r\n\r\n    fetchUser(this.id).then(val => {\r\n      const n = val.data.names.international\r\n      this._name = n\r\n\r\n      return n\r\n    })\r\n\r\n    return ''\r\n  }\r\n\r\n  public async getName () {\r\n    if (this._name) {\r\n      return this._name\r\n    }\r\n\r\n    try {\r\n      const n = await (await fetchUser(this.id)).data.names.international\r\n      this._name = n\r\n    } catch {\r\n      this._name = `UNLOADED: ${this.id}`\r\n    }\r\n\r\n    return this._name\r\n  }\r\n}\r\n","import LevelGrid from '../speedruncom/models/LevelGrid'\r\nimport SpeedrunId from '../speedruncom/models/SpeedrunId'\r\nimport Player from './models/Player'\r\n\r\nconst buildPlayerMap = async (grid: LevelGrid): Promise<Map<SpeedrunId, Player>> => {\r\n  const pMap = new Map<SpeedrunId, Player>()\r\n  const gridDimensions = grid.map((col) => col.length)\r\n\r\n  grid.forEach((levelColumn, i) =>\r\n    levelColumn.forEach((board, j) =>\r\n      board.runs.forEach((r) => {\r\n        const p = r.run.players[0]\r\n\r\n        // skip players without id (deleted users)\r\n        if (p.id) {\r\n          pMap.has(p.id) || pMap.set(p.id, new Player(p.id, gridDimensions))\r\n          const pl = pMap.get(p.id)!\r\n          pl.registerRun(r, i, j)\r\n        }\r\n      })\r\n    )\r\n  )\r\n\r\n  return pMap\r\n}\r\n\r\nexport default buildPlayerMap\r\n","import { getRawLeaderboardData } from '../speedruncom/get-data'\r\nimport { gridTransformationFunction, removeFarewellObsoletes } from '../speedruncom/grid-transformation'\r\nimport LevelGrid from '../speedruncom/models/LevelGrid'\r\nimport buildPlayerMap from './build-map'\r\n\r\nconst getPlayerMap = async () => {\r\n  // fetch data\r\n  const raw = await getRawLeaderboardData()\r\n  let grid: LevelGrid = raw.grid.map((categoryRow) => categoryRow.map((levelBoard) => levelBoard.data))\r\n\r\n  // transform grid\r\n  const transformations: gridTransformationFunction[] = [\r\n    removeFarewellObsoletes\r\n  ]\r\n  transformations.forEach((tFunc) => { grid = tFunc(grid) })\r\n\r\n  // build and return player map\r\n  return await buildPlayerMap(grid)\r\n}\r\n\r\nexport default getPlayerMap\r\n","const htmlToElement = (html: string): Node => {\r\n  const template = document.createElement('template')\r\n  html = html.trim()\r\n  template.innerHTML = html\r\n  return template.content.firstChild as Node\r\n}\r\n\r\nexport default htmlToElement\r\n","/* eslint-disable no-unused-vars */\r\nenum TableSelection {\r\n    TOTAL = 'Total',\r\n    A_SIDES = 'A-Sides',\r\n    COLLECTIBLES = 'Collectibles',\r\n    B_SIDES = 'B-Sides',\r\n    C_SIDES = 'C-Sides',\r\n}\r\n\r\nexport default TableSelection\r\n","const removeLeadingZeroes = (s: string) => {\r\n  const arr = s.split('')\r\n  const out = s.split('')\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const char = arr[i]\r\n    if (char === '0' || char === ':') {\r\n      out.shift()\r\n    } else {\r\n      return out.join('')\r\n    }\r\n  }\r\n\r\n  return s\r\n}\r\n\r\nconst toHHMMSS = (time: string) => {\r\n  const secNum = parseInt(time, 10)\r\n\r\n  const hours = Math.floor(secNum / 3600)\r\n  const minutes = Math.floor((secNum - (hours * 3600)) / 60)\r\n  const seconds = secNum - (hours * 3600) - (minutes * 60)\r\n\r\n  const raw = [hours, minutes, seconds].map(e => String(e).padStart(2, '0')).join(':')\r\n\r\n  return removeLeadingZeroes(raw)\r\n}\r\n\r\nexport { toHHMMSS, removeLeadingZeroes }\r\n","const getMiniText = (content: string) => {\r\n  const x = document.createElement('span')\r\n  x.classList.add('mini-text')\r\n  x.innerHTML = content\r\n  return x\r\n}\r\n\r\nconst getMiniTextString = (content: string) => {\r\n  const x = document.createElement('span')\r\n  x.classList.add('mini-text')\r\n  x.innerHTML = content\r\n  return `<span class=\"mini-text\">${content}</span>`\r\n}\r\n\r\nconst getPts = (asString: boolean = false) => {\r\n  return asString ? getMiniTextString('pts') : getMiniText('pts')\r\n}\r\n\r\nconst getMs = (ms: string, asString: boolean = false) => {\r\n  return asString ? getMiniTextString(ms) : getMiniText(ms)\r\n}\r\n\r\nconst getOrdinal = (n: number, asString: boolean = false) => {\r\n  // taken from https://stackoverflow.com/a/39466341\r\n  const nth = (x: number) => { return ['st', 'nd', 'rd'][((x + 90) % 100 - 10) % 10 - 1] || 'th' }\r\n  const ordinal = nth(n)\r\n\r\n  return asString ? getMiniTextString(ordinal) : getMiniText(ordinal)\r\n}\r\n\r\nexport { getMiniText, getPts, getMs, getOrdinal }\r\n","import Player from '../../../modules/rankings/models/Player'\r\nimport { ChapterNames } from '../../../modules/speedruncom/constants/celeste'\r\nimport SpeedrunRankedRun from '../../../modules/speedruncom/models/SpeedrunRankedRun'\r\nimport TableSelection from '../../models/TableSelection'\r\nimport PlayerState from '../../states/PlayerState'\r\nimport htmlToElement from '../util/html-helper'\r\nimport { toHHMMSS } from '../util/time-helper'\r\nimport { getMs, getOrdinal, getPts } from './subtexts'\r\n\r\nconst getRunElement = (\r\n  r: SpeedrunRankedRun\r\n) => {\r\n  if (!r) {\r\n    return htmlToElement(`\r\n      <td class=\"hover-highlight\">\r\n        <div class=\"player-table-run\">\r\n          <span>---------</span>\r\n          <span>---------</span>\r\n        </div>\r\n      </td>\r\n    `)\r\n  }\r\n\r\n  const timeSplit = String(r.run.times.primary_t).split('.')\r\n  const withoutMs = timeSplit[0]\r\n  const onlyMs = timeSplit.length === 2 ? timeSplit[1].padEnd(3, '0') : '000'\r\n\r\n  const ele = htmlToElement(`\r\n    <td class=\"hover-highlight\">\r\n      <div class=\"player-table-run\">\r\n        <span>${toHHMMSS(withoutMs)}.${getMs(onlyMs, true)}</span>\r\n        <div><span>${r.place}${getOrdinal(r.place, true)}</span> / <span>${Player.scoringFn(r)} ${getPts(true)}</span></div>\r\n      </div>\r\n    </td>\r\n  `)\r\n\r\n  ele.addEventListener('click', () => {\r\n    window.open(r.run.weblink)\r\n  })\r\n\r\n  return ele\r\n}\r\n\r\nconst getTableElement = (elements: HTMLElement[]) => {\r\n  const ele = document.createElement('tr')\r\n  elements.forEach(e => ele.appendChild(e))\r\n  return ele\r\n}\r\n\r\nconst getTableHeader = (str: string[]) => {\r\n  const x = str.map(e => `<th>${e}</th>`).join('')\r\n  return htmlToElement(`<tr>${x}</tr>`)\r\n}\r\n\r\nconst getPlayerTable = (s: PlayerState) => {\r\n  const p = s.player\r\n\r\n  const t = document.createElement('table')\r\n  t.classList.add('player-table')\r\n\r\n  const head = getTableHeader([\r\n    'Stage',\r\n    TableSelection.A_SIDES,\r\n    TableSelection.COLLECTIBLES,\r\n    TableSelection.B_SIDES,\r\n    TableSelection.C_SIDES\r\n  ]) as HTMLElement\r\n  t.appendChild(head)\r\n\r\n  const chapters = [\r\n    ChapterNames.C1,\r\n    ChapterNames.C2,\r\n    ChapterNames.C3,\r\n    ChapterNames.C4,\r\n    ChapterNames.C5,\r\n    ChapterNames.C6,\r\n    ChapterNames.C7,\r\n    ChapterNames.C8,\r\n    ChapterNames.C9\r\n  ]\r\n\r\n  const tableRows = chapters.map((chapter, i) => {\r\n    let runElements\r\n\r\n    if (chapter === ChapterNames.C9) {\r\n      runElements = [\r\n        p!.timesPage[0][i]\r\n      ].map(r => getRunElement(r))\r\n    } else {\r\n      runElements = [\r\n        p!.timesPage[0][i],\r\n        p!.timesPage[1][i],\r\n        p!.timesPage[2][i],\r\n        p!.timesPage[3][i]\r\n      ].map(r => getRunElement(r))\r\n    }\r\n\r\n    const x = [htmlToElement(`<td class=\"bold player-table-chapter\">${chapter}</td>`)].concat(runElements)\r\n    return getTableElement(x.map(e => e as HTMLElement))\r\n  })\r\n  tableRows.forEach(e => t.appendChild(e))\r\n\r\n  const pointsPerCol = getTableHeader(\r\n    ['Totals'].concat([\r\n      p!.getPointsOfColumn(0),\r\n      p!.getPointsOfColumn(1),\r\n      p!.getPointsOfColumn(2),\r\n      p!.getPointsOfColumn(3)\r\n    ].map(e => `${String(e)} points`))) as HTMLElement\r\n  t.appendChild(pointsPerCol)\r\n\r\n  return t\r\n}\r\n\r\nexport default getPlayerTable\r\n","import PlayerState from '../../states/PlayerState'\r\n\r\nconst getTotalPointsCount = (s: PlayerState) => {\r\n  const x = document.createElement('span')\r\n  x.classList.add('center')\r\n  x.classList.add('total-points')\r\n  x.innerHTML = `Total: ${s.player!.totalPoints}`\r\n  return x\r\n}\r\n\r\nexport default getTotalPointsCount\r\n","import PlayerState from '../../states/PlayerState'\r\nimport htmlToElement from '../util/html-helper'\r\nimport getPlayerTable from './player-table'\r\nimport getTotalPointsCount from './total-points-count'\r\n\r\nconst renderPlayerPage = async (state: PlayerState, id: string): Promise<void> => {\r\n  const container = document.getElementById(id)\r\n  const reset = () => { container!.innerHTML = '' }\r\n\r\n  reset()\r\n\r\n  if (!state.player) {\r\n    container!.appendChild(htmlToElement(`\r\n      <h1>Oops, something went wrong!</h1>\r\n    `))\r\n  } else {\r\n    const name = await state.player.getName()\r\n    container!.appendChild(htmlToElement(`<h1>${name}</h1>`))\r\n    container!.appendChild(getPlayerTable(state))\r\n    container!.appendChild(getTotalPointsCount(state))\r\n  }\r\n}\r\n\r\nexport default renderPlayerPage\r\n","import getPlayerMap from '../../modules/rankings/get-map'\r\nimport PlayerState from '../states/PlayerState'\r\nimport renderPlayerPage from '../ui/components/player-page'\r\nimport { fetchUser } from '../../modules/speedruncom/wrapper'\r\nimport SpeedrunId from '../../modules/speedruncom/models/SpeedrunId'\r\n\r\nconst main = async () => {\r\n  const CONTAINER = 'player-container'\r\n  const render = (s: PlayerState) => {\r\n    return renderPlayerPage(s, CONTAINER)\r\n  }\r\n  const abort = () => {\r\n    return render({ player: null })\r\n  }\r\n\r\n  const playerParam = new URLSearchParams(window.location.search).get('player')\r\n\r\n  if (!playerParam) {\r\n    return abort()\r\n  }\r\n\r\n  let id: SpeedrunId\r\n  try {\r\n    id = await (await fetchUser(playerParam)).data.id\r\n  } catch {\r\n    return abort()\r\n  }\r\n\r\n  const pMap = await getPlayerMap()\r\n  if (!pMap.get(id)) {\r\n    return abort()\r\n  }\r\n\r\n  await render({ player: pMap.get(id) })\r\n}\r\n\r\nmain()\r\n"]}